package billOfLadingTests;

import static org.hamcrest.Matchers.*;
import static org.testng.Assert.assertTrue;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.net.URL;
import java.util.List;
import java.util.Map;

import org.apache.pdfbox.pdfparser.PDFParser;
import org.apache.pdfbox.util.PDFTextStripper;
import org.joda.time.LocalTime;
import org.openqa.selenium.By;
import org.testng.Assert;
import org.testng.annotations.Test;

import com.jagacy.SessionVt;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import jagacyVT.screens.EBolConfirmationScreen;
import jagacyVT.screens.FreightBillInquiryEnterFieldValuesScreen;
import jagacyVT.screens.FreightBillInquiryUpdateFirstScreen;
import jagacyVT.screens.FreightBillingMenuScreen;
import jagacyVT.screens.IBMMainMenuScreen;
import jagacyVT.screens.InformationCategoryScreen;
import jagacyVT.screens.LoginScreen;
import jagacyVT.screens.MasterMenuScreen;
import jagacyVT.screens.PickupSystemMenuScreen;
import jagacyVT.screens.PickupSystemRequestQueueScreen;
import jagacyVT.screens.SecondaryFreightBillingMenuScreen;
import jagacyVT.screens.StopInformationDisplayScreen;
import jagacyVT.screens.UpdateScreen3;
import myEstesPages.MyEstesAddressBookPage;
import myEstesPages.MyEstesBillOfLadingPage;
import myEstesPages.MyEstesClaimsPage;
import myEstesPages.MyEstesDensityCalculatorPage;
import myEstesPages.MyEstesFuelSurchargePage;
import myEstesPages.MyEstesHomePage;
import myEstesPages.MyEstesLoginPage;
import myEstesPages.MyEstesPickupRequestPage;
import myEstesPages.MyEstesRecentShipmentsPage;
import myEstesPages.MyEstesResourcesPage;
import myEstesPages.MyEstesShipmentTrackingPage;
import myEstesPages.MyEstesSignUpPage;
import myEstesPages.MyEstesTerminalListPage;
import myEstesPages.MyEstesTerminalLookupPage;
import myEstesPages.MyEstesTransitTimeCalculatorPage;
import rateQuotePages.MyEstesWelcomePage;
import rateQuotePages.RateQuotePage;
import roundCubeApplicationPages.RoundCubeHomePage;
import roundCubeApplicationPages.RoundCubeLoginPage;
import testBase.TestBase;
import util.CreateFreightBill;
import util.TestUtil;


public class BillOfLadingRegrssionTest extends TestBase {

	MyEstesHomePage myEstesHomePage = new MyEstesHomePage();
	MyEstesResourcesPage myEstesResourcesPage = new MyEstesResourcesPage();
	MyEstesTerminalListPage myEstesTerminalListPage = new MyEstesTerminalListPage();
	MyEstesSignUpPage myEstesSignUpPage = new MyEstesSignUpPage();
	MyEstesLoginPage myEstesLoginPage = new MyEstesLoginPage();
	MyEstesRecentShipmentsPage myEstesRecentShipmentsPage = new MyEstesRecentShipmentsPage();
	MyEstesDensityCalculatorPage myEstesDensityCalculatorPage = new MyEstesDensityCalculatorPage();
	MyEstesTerminalLookupPage terminalLookupPage = new MyEstesTerminalLookupPage();
	MyEstesTransitTimeCalculatorPage myEstesTransitTimeCalculatorPage = new MyEstesTransitTimeCalculatorPage();
	MyEstesBillOfLadingPage myEstesBillOfLadingPage = new MyEstesBillOfLadingPage();
	MyEstesClaimsPage myEstesClaimsPage = new MyEstesClaimsPage();
	MyEstesAddressBookPage myEstesAddressBookPage = new MyEstesAddressBookPage();
	MyEstesFuelSurchargePage myEstesFuelSurchargePage = new MyEstesFuelSurchargePage();
	MyEstesShipmentTrackingPage myEstesShipmentTrackingPage = new MyEstesShipmentTrackingPage();
	RateQuotePage rateQuotePage = new RateQuotePage();
	CreateFreightBill createFreightBill = new CreateFreightBill();
	//ReserveAFreightBill reserveAFreightBill = new ReserveAFreightBill();
	MyEstesPickupRequestPage myEstesPickupRequestPage = new MyEstesPickupRequestPage();
	MyEstesWelcomePage myEstesWelcomePage = new MyEstesWelcomePage();
	RoundCubeLoginPage roundCubeLoginPage = new RoundCubeLoginPage();
	RoundCubeHomePage roundCubeHomePage = new RoundCubeHomePage();

	/******************************* TESTS *******************************/


	/*
	 * DP2-1600 Bill of Lading - Drafts - Verify the user is able to Save the BOL as
	 * Draft and available on BOL Draft page
	 */

	@Test(enabled = true, priority = 1)

	public void executeQZ_6001() throws InterruptedException {

		String ReferenceNumber = "67890";

		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		//testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		myEstesBillOfLadingPage.enterBOLReferenceNumber(ReferenceNumber);
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.ClickOnSaveAsDraftButton();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Reference Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(ReferenceNumber);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		myEstesBillOfLadingPage.clickOnEditBillOfLadingIcon();
		String BOLNum = myEstesBillOfLadingPage.getDataFromSearchBy();
		Assert.assertTrue(BOLNum.contains(ReferenceNumber));
	}

	/*
	 * DP2-1601 Bill of Lading - Drafts - Verify the user is able to filter the
	 * result with different options on BOL Draft tab
	 */

	@Test(enabled = true, priority = 2)
	public void executeQZ_6004() throws InterruptedException {

		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		testUtil.setHardWait(2000);
		myEstesLoginPage.clickOnLoginButton();

		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		testUtil.setHardWait(1000);
		String ReferenceNumber = "67890";
		myEstesBillOfLadingPage.enterBOLReferenceNumber(ReferenceNumber);
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.ClickOnSaveAsDraftButton();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Reference Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(ReferenceNumber);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		myEstesBillOfLadingPage.clickOnEditBillOfLadingIcon();
		String BOLNum = myEstesBillOfLadingPage.getDataFromSearchBy();
		Assert.assertTrue(BOLNum.contains(ReferenceNumber));

		driver.navigate().refresh();
		myEstesBillOfLadingPage.ClickOnBOLDraftsLink();
		testUtil.setHardWait(3000);
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Date Range");
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.enterStartDate(-7);
		myEstesBillOfLadingPage.enterEndDate();
		myEstesBillOfLadingPage.ClickOnSearchButton();

		driver.navigate().refresh();
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.ClickOnBOLDraftsLink();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.selectFromSearchByOption("Shipper");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("ADVANCE AUTO");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		driver.navigate().refresh();
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.ClickOnBOLDraftsLink();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.selectFromSearchByOption("Consignee");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("ADVANCE AUTO PARTS");
		myEstesBillOfLadingPage.ClickOnSearchButton();
	}

	/*
	 * Bill of Lading - Drafts - Verify the user is able to Delete the BOL Draft
	 */

	@Test(enabled = true, priority = 3)
	public void executeQZ_7581() throws InterruptedException {

		String message = "Success! Draft deleted successfully.";

		//Step 1: Launch application
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();

		//Step 2: Login ad nat user
		myEstesLoginPage.enterUserName();
		testUtil.setHardWait(1000);
		myEstesLoginPage.enterPassword();
		myEstesLoginPage.clickOnLoginButton();
		testUtil.setHardWait(1000);
		//Step 3: Click on Ship tab from top menu and select Bill of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//################## Steps to create test data ########################
		String ReferenceNumber = "67890";
		myEstesBillOfLadingPage.enterBOLReferenceNumber(ReferenceNumber);
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.ClickOnSaveAsDraftButton();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Reference Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(ReferenceNumber);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		testUtil.setHardWait(3000);
		//#####################################################################

		//Step 4: From  BOL page, click on the following tab, BOL Drafts. //By default the user will be in BOL Draft page. So no operation performed here.
		//Step 5: From BOL Draft page, select the (x) icon for any existing BOL draft
		//Note: If no BOL draft exists in the list. Save a draft before executing.
		myEstesBillOfLadingPage.clickOnDeleteBOLDraft();
		//Step 6: From Confirm Delete popup window, click on *Confirm* button
		myEstesBillOfLadingPage.clickOnConfirmDeleteBOLDraft();
		testUtil.setHardWait(2000);
		//Verify confirmation message is received
		myEstesBillOfLadingPage.verifySuccessMessage(message);

	}

	@Test(enabled = true, priority = 4)
	public void executeQZ_7610() throws InterruptedException {

		String message = "Success! Template deleted successfully.";
		String randomString = testUtil.randomString(10);

		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		testUtil.setHardWait(3000);
		myEstesLoginPage.clickOnLoginButton();

		myEstesHomePage.clickOnShipTab();
		testUtil.setHardWait(2000);
		myEstesHomePage.clickOnBillOfLadingFromShip();
		myEstesBillOfLadingPage.ClickOnSaveTemplateToggleBar();
		myEstesBillOfLadingPage.enterTemplateName(randomString);
		myEstesBillOfLadingPage.clickOnSaveTemplateButton();

		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("Template Name");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(randomString);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.clickOnDeleteBOLTemplate(); //Added exp wait
		testUtil.setHardWait(1000);
		// Step: 5
		myEstesBillOfLadingPage.clickOnConfirmDeleteBOLDraft();
		testUtil.setHardWait(2000);

		myEstesBillOfLadingPage.verifySuccessMessage(message);
	}

	@Test(enabled = true, priority = 5)
	public void executeQZ_8174()
			throws InterruptedException {

		String alertMessage = "The shipper city, state and ZIP code are currently outside of our pickup service area.";

		// Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		// BOL Details
		myEstesBillOfLadingPage.enterBOLReferenceNumber("1234");
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		// Pickup Request
		myEstesBillOfLadingPage.clickOnPickupRequestToggle();
		myEstesBillOfLadingPage.enterPickupRequestContactName("QA Testing");
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress("QATEST@ESTES-EXPRESS.COM");
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumber("8043531900");
		myEstesBillOfLadingPage.selectPickupRequestConsigneeRole();
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.clickOnInsideDeliveryRadioButton();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		// Shipment Details
		myEstesBillOfLadingPage.enterShipperCompanyName("24 Distributors Inc");
		myEstesBillOfLadingPage.enterShipperFirstName("QA CARQUEST");
		myEstesBillOfLadingPage.enterShipperPhoneNumber("8001676890");
		myEstesBillOfLadingPage.enterShipperEmailAddress("QA@estes-express.com");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("Address 1");
		myEstesBillOfLadingPage.enterCityForShipper("Ponce");
		myEstesBillOfLadingPage.selectShipperState("PR");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("00728");
		myEstesBillOfLadingPage.selectShipperBillTo();
		// Commodities
		myEstesBillOfLadingPage.enterHandlingUnits("1");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("45001");
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");
		// Validate alert message for PR location
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.validateAlertMessage(alertMessage);
	}

	@Test(enabled = true, priority = 6)
	public void executeQZ_7575()
			throws InterruptedException {

		String templateName = "$Test123$";
		// Step: 1
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		// Step: 2
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		testUtil.setHardWait(4000);
		myEstesLoginPage.clickOnLoginButton();
		// Step: 3
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		// Step: 4
		String ReferenceNumber = "67890";
		myEstesBillOfLadingPage.enterBOLReferenceNumber(ReferenceNumber);
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.clickBillTo();
		myEstesBillOfLadingPage.enterBillTo("Shipper");
		myEstesBillOfLadingPage.enterTerms("Prepaid");
		myEstesBillOfLadingPage.enterHandlingUnits("1");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("5000");
		// Step: 5
		myEstesBillOfLadingPage.ClickOnSaveTemplateToggleBar();
		// Step: 6
		myEstesBillOfLadingPage.enterTemplateName(templateName);
		testUtil.setHardWait(1000);
		// Step: 7
		myEstesBillOfLadingPage.clickOnSaveTemplateButton();
		testUtil.setHardWait(5000);
		// Step: 8
		myEstesBillOfLadingPage.clickOnBOLTemplatesLink();

		//Added set of codes to use the created templates, as there are more number of templates in the application
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("Template Name");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(templateName);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		testUtil.setHardWait(2000);

		myEstesBillOfLadingPage.tempNameDisplayed(templateName);

	}

	@Test(enabled = true, priority = 7)

	public void executeQZ_6631()
			throws InterruptedException {

		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username2);
		myEstesLoginPage.enterPassword(password2);
		myEstesLoginPage.clickOnLoginButton();

		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnRateQoute();
		rateQuotePage.selectOrDeselectValumeAndTruckload();
		rateQuotePage.enterContactName("TestQA");
		rateQuotePage.enterYourEmail("QA@estes-express.com");
		rateQuotePage.enterPhoneNo("5406406542");
		rateQuotePage.enterMyRole("Shipper");
		rateQuotePage.enterTerms("Prepaid");
		rateQuotePage.selectTodayDate();
		rateQuotePage.enterOriginZip("23230");
		rateQuotePage.enterDesZip("30307");
		rateQuotePage.enterClass("50");
		rateQuotePage.enterPieces("2");
		rateQuotePage.enterPieceType("PALLET");
		rateQuotePage.enterTotalWeight("4700");
		rateQuotePage.enterLength("24");
		rateQuotePage.enterWidth("48");
		rateQuotePage.enterHeight("48");
		rateQuotePage.enterDesc("Verify BOL can created from Rate Quote");
		rateQuotePage.clikOnSubmitButton();

		testUtil.setExplicitWait(driver.findElement(By.xpath("//td[contains(text(),'Volume and Truckload Basic')]")),20 );
		// Click on Get Quote# for Volume and Truck-load Basic Service level
		rateQuotePage.clickOnGetQuoteButton("Volume and Truckload Basic");
		// Capture Quote#
		String QuoteNo = rateQuotePage.recordQuoteNumber("Volume and Truckload Basic");
		rateQuotePage.clickOnCreateBOL();
		// Verify Create BOL page displays
		myEstesBillOfLadingPage.verifyPageTitle();
		// Click on Blank VICS BOL
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		// Enter BOL Details
		myEstesBillOfLadingPage.enterBOLReferenceNumber("BOL123");
		// Verify Enter Reserved Pro-number field is displayed
		myEstesBillOfLadingPage.verifyProNumberFieldIsDisplayed();
		// Select the toggle for MAster BOL
		myEstesBillOfLadingPage.clickOnMasterBOLToggle();
		// Enter Master Bol#
		myEstesBillOfLadingPage.enterMasterBOLNumber(testUtil.randomString(5));
		testUtil.setHardWait(2000);

		// Verify captured Quote# is displayed
		String QuoteNo1 = myEstesBillOfLadingPage.captureQuoteNo();
		Assert.assertEquals(QuoteNo, QuoteNo1); // Removed "RATE QUOTE NUMBER" text by Keertika
		// Verify City, State, Zip of Shipper are auto-populated from Rate Quote
		myEstesBillOfLadingPage.verifyShipperCity("RICHMOND");
		myEstesBillOfLadingPage.verifyShipperState("VA");
		myEstesBillOfLadingPage.verifyShipperZip("23230");
		// Verify City, State, Zip of Consignee are auto-populated from Rate Quote
		myEstesBillOfLadingPage.verifyConsigneeCity("ATLANTA");
		myEstesBillOfLadingPage.verifyConsigneeState("GA");
		myEstesBillOfLadingPage.verifyConsigneeZip("30307");

		// Click on Guaranteed Service toggle and check terms of service checkbox
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnTermsOfService();
		// Click pickup request toggle
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		// Enter Pickup Request info
		myEstesBillOfLadingPage.enterRequesterName("GOLDEN CANNOLI");
		myEstesBillOfLadingPage.enterRequesterEmail("qatest@estes-express.com");
		myEstesBillOfLadingPage.enterRequesterPhoneNo("804-535-1900");
		myEstesBillOfLadingPage.selectRole("Shipper");
		// Enter Pickup Details
		myEstesBillOfLadingPage.enterPickupDate(testUtil.todaysDate());
		// Check on Food Service
		myEstesBillOfLadingPage.clickOnPickupService("Food");
		myEstesBillOfLadingPage.clickOnPickupAccessorial("Lift-Gate Service (Pickup)");
		// Select the following accessorials -> Notify Request, Lift-Gate Service
		// (Pickup), Lift-Gate Service (Delivery)
		myEstesBillOfLadingPage.clickOnAccessorial("Notify Request");
		myEstesBillOfLadingPage.clickOnAccessorial("Lift-Gate Service (Pickup)");
		myEstesBillOfLadingPage.clickOnAccessorial("Lift-Gate Service (Delivery)");
		// Enter required fields in Shipper and Consignee info
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee(); // Added
		myEstesBillOfLadingPage.enterFirstNameForShipper("Cannoli");
		myEstesBillOfLadingPage.enterEmailForShipper("QA@estes-express.com");
		testUtil.setHardWait(3000);
		// myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee(); //Added this
		// line before shipper details by Keertika
		// Select BillTo as Shipper
		// myEstesBillOfLadingPage.selectBillTo("Shipper"); //Commented out by Keertika
		myEstesBillOfLadingPage.clickBillTo(); // Added by Keertika
		myEstesBillOfLadingPage.enterBillTo("Shipper"); // Added by Keertika

		// Enter commodity info - Select Packaging type
		myEstesBillOfLadingPage.ClickOnPackagesType(); // Added explicit wait by Keertika
		myEstesBillOfLadingPage.enterPackagingType("BOX");
		myEstesBillOfLadingPage.enterNumberOfPackages("2");
		// Click SubmitBOL+Generate PickupRequest
		myEstesBillOfLadingPage.ClickOnSubmitBOL();
		testUtil.setExplicitWait(driver.findElement(By.xpath("//*[@class='form-header form-header--red'][contains(text(),'BOL Number')]")), 20);
		// Verify Bol Summary is populated.
		myEstesBillOfLadingPage.verifyBolSection();
		myEstesBillOfLadingPage.verifyShippingSummarySection();
		// Verify pickup Request section is populated
		myEstesBillOfLadingPage.verifyPickupRequestSection();
		// Click on download BOL
		myEstesBillOfLadingPage.ClickOnViewBillOfLadingButton();
		testUtil.setHardWait(3000);
		// Click on Create New BOL button
		myEstesBillOfLadingPage.clickOnCreateNewBolButton();
		// User will be re-directed to blank BOL form
		myEstesBillOfLadingPage.verifyPageTitle();

	}

	/*
	 * Bill of Lading - History - Verify the user is able to Copy BOL on BOL History
	 * tab
	 */
	@Test(enabled = true, priority = 8)

	public void executeQZ_7615() throws InterruptedException {

		String refNumber = testUtil.randomString(4);
		// Step: 1
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		testUtil.setHardWait(1000);
		// Step:
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();
		// Step: 3
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Steps to create BOL data- if there is no exiting BOL, the script gets failed
		myEstesBillOfLadingPage.enterBOLReferenceNumber(refNumber);
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		myEstesBillOfLadingPage.enterShipperCompanyName("Shipper Corp");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("Consignee Corp");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("99 CRESCENT ST");
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.enterCityForShipper("CHELSEA");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("MA");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("02150");
		myEstesBillOfLadingPage.enterAddrLine1ForConsignee("6125 Duquesne Drive SW");
		myEstesBillOfLadingPage.enterCityForConsignee("Atlanta");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		testUtil.setHardWait(500);
		myEstesBillOfLadingPage.enterStateNameForConsignee("GA");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("30336");
		myEstesBillOfLadingPage.selectShipperBillTo();
		myEstesBillOfLadingPage.enterHandlingUnit("5");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("1000");
		myEstesBillOfLadingPage.selectClass("55");
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");
		myEstesBillOfLadingPage.ClickOnSubmitBOL();


		// Step: 4
		myEstesBillOfLadingPage.clickOnBOLHistoryLink();
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		//myEstesBillOfLadingPage.ClickOnClearButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Reference Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(refNumber);
		myEstesBillOfLadingPage.ClickOnSearchButton();

		myEstesBillOfLadingPage.clickOnCopyLink();
		myEstesBillOfLadingPage.clickOnBEstesBlankBOL();
		myEstesBillOfLadingPage.clearBOLReferenceNumber();
		myEstesBillOfLadingPage.enterBOLReferenceNumber("A_Test_"+testUtil.randomString(1));

		myEstesBillOfLadingPage.enterBOLDate(testUtil.todaysDate());
		//myEstesBillOfLadingPage.enterMinimumBOLDate();
		myEstesBillOfLadingPage.clickOnAutoAssign();
		myEstesBillOfLadingPage.clickOnTermsOfServiceIfDisplayed();
		myEstesBillOfLadingPage.enterPickupDateIfExist();
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");
		myEstesBillOfLadingPage.ClickOnSubmitBOL();
		String bolNumber = myEstesBillOfLadingPage.getBOLNumber();
		System.out.println(bolNumber);
		String proNumber = myEstesBillOfLadingPage.getProNumber();
		System.out.println(proNumber);
		myEstesBillOfLadingPage.clickOnBOLHistoryLink();
		myEstesBillOfLadingPage.clickOnSortColumn("BOL Reference Number");
		myEstesBillOfLadingPage.selectItemsPerPage("100");
		myEstesBillOfLadingPage.verifyBOLNumber(bolNumber);
		myEstesBillOfLadingPage.verifyProNumber(proNumber);

	}

	@Test(enabled = true, priority = 9)

	public void executeQZ_7597()
			throws InterruptedException {
		String expMsg = "An error has occurred within the Pickup Request application.\n"
				+ "The weight cannot exceed 45,000 pounds.\n" + "Please contact Customer Care for assistance.";

		// Step: 1
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		// Step: 2
		myEstesLoginPage.enterUserName();
		myEstesLoginPage.enterPassword();
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();
		// Step: 3
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		// Step: 4
		String ReferenceNumber = "67890";
		myEstesBillOfLadingPage.enterBOLReferenceNumber(ReferenceNumber);
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		myEstesBillOfLadingPage.clickOnGeneratePickupToggle();
		myEstesBillOfLadingPage.enterContactName("QA testing");
		//myEstesBillOfLadingPage.enterEmail("QATEST@ESTES-EXPRESS.COM");
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress("QATEST@ESTES-EXPRESS.COM");
		myEstesBillOfLadingPage.enterPhone("8043531900");
		myEstesBillOfLadingPage.enterAccountNumber("0500845");
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.selectRole();
		myEstesBillOfLadingPage.selectAccessorials("Inside Delivery");
		myEstesBillOfLadingPage.enterFirstName("QA CARQUEST");
		myEstesBillOfLadingPage.enterShipperInfoEmail("QATEST@ESTES-EXPRESS.COM");
		myEstesBillOfLadingPage.selectAddressInfo();
		myEstesBillOfLadingPage.clickBillTo();
		myEstesBillOfLadingPage.enterBillTo("Shipper");
		myEstesBillOfLadingPage.enterHandlingUnit("1");
		myEstesBillOfLadingPage.selectType();
		myEstesBillOfLadingPage.enterWeight("45001");
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");

		myEstesBillOfLadingPage.enterShipperEmail("QATEST@ESTES-EXPRESS.COM");
		myEstesBillOfLadingPage.clickSubmit();

		myEstesBillOfLadingPage.verifyAlertMessage(expMsg);
		myEstesBillOfLadingPage.verifyBOLNumberField();
		myEstesBillOfLadingPage.verifyBOLDateField();
		myEstesBillOfLadingPage.verifyAccountField();
		myEstesBillOfLadingPage.verifyPRONumberField();
		myEstesBillOfLadingPage.verifyShipperSummaryField();
		myEstesBillOfLadingPage.verifyShipperField();
		myEstesBillOfLadingPage.verifyShipperPhoneField();
		myEstesBillOfLadingPage.verifyShipperEmailField();
		myEstesBillOfLadingPage.verifyConsigneeField();
		myEstesBillOfLadingPage.verifyConsigneePhoneField();
		myEstesBillOfLadingPage.verifyConsigneeEmailField();
		myEstesBillOfLadingPage.verifyTotalCommoditiesField();
		myEstesBillOfLadingPage.verifyTotalShipmentWeightField();

	}

	/*
	 * Bill of Lading - Save BOL Template - User enters Template Name and Select
	 * Save as Template Only button, validate template saves and redirects the user
	 * to BOL Templates page.
	 */


	@Test(enabled = true, priority = 10)

	public void executeQZ_7589() throws InterruptedException {
		String templateName = "$" + testUtil.randomString(5) + "$";

		// Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		testUtil.setHardWait(2000);
		// BOL Details
		myEstesBillOfLadingPage.enterBOLReferenceNumber("1234");
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.selectShipperBillTo();

		// Commodities
		myEstesBillOfLadingPage.enterHandlingUnits("5");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterPackagingType("PACKAGE"); // modified method to click on listed package type by
		// Keertika
		myEstesBillOfLadingPage.enterTotalWeight("4550");
		myEstesBillOfLadingPage.selectClass("50");
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testcase#");

		// Save as Template only
		myEstesBillOfLadingPage.ClickOnSaveTemplateToggleBar();
		myEstesBillOfLadingPage.enterTemplateName(templateName);
		myEstesBillOfLadingPage.clickOnSaveTemplateButton();

		myEstesBillOfLadingPage.ClickOnAdvSearchButton();                    //Added step to search the template created to validate
		myEstesBillOfLadingPage.selectSearchBy("Template Name");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(templateName);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		testUtil.setHardWait(2000);

		// Validate Template name
		myEstesBillOfLadingPage.verifyTemplateNameExistence(templateName);
	}



	@Test(enabled = true, priority = 11)

	public void executeQZ_7594() throws InterruptedException {

		String colHeaderList[] = { "Account Number", "Account Name", "Address", "City", "State", "Zip" };
		String accountDetail1 = "0500845";
		String accountDetail2 = "CARQUEST";
		String accountDetail3 = "1900 JENKINS DAIRY RD";
		String accountDetail4 = "GASTONIA";
		String accountDetail5 = "NC";
		String accountDetail6 = "35901";
		String invalidDetails = "359011";

		// Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		testUtil.setHardWait(2000);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(3000);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		// User search with different criteria
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle(); // Need to add "Shipper Role" step
		myEstesBillOfLadingPage.enterMyRole("Shipper");
		myEstesBillOfLadingPage.clickOnAccountSearchLink();
		testUtil.setHardWait(3000);

		// Account Search--> 0500845
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail1);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail1);

		// Account Search--> CARQUEST
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail2);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail2);

		// Account Search--> 1900 JENKINS DAIRY RD
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail3);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail3);

		// Account Search--> GASTONIA
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail4);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail4);

		// Account Search--> NC
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail5);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail5);

		// Account Search--> 35901
		myEstesBillOfLadingPage.enterAccountDetails(accountDetail6);
		myEstesBillOfLadingPage.verifyAccountSearchHeader(colHeaderList);
		myEstesBillOfLadingPage.verifyAccountSearchResults(accountDetail6);

		// Account Search--> Invalid data - 359011
		myEstesBillOfLadingPage.enterAccountDetails(invalidDetails);
		myEstesBillOfLadingPage.verifyNoAccountsFoundDisplayed();
	}


	@Test(enabled = true, priority = 12)

	public void executeQZ_7587() throws InterruptedException {
		String templateName = "$" + testUtil.randomString(5) + "$";

		// Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(2000);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		// Steps to create Template - BOL details
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		myEstesBillOfLadingPage.enterBOLReferenceNumber("1234");
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForShipper();
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.selectShipperBillTo();
		myEstesBillOfLadingPage.enterHandlingUnits("5");
		myEstesBillOfLadingPage.enterTotalWeight("4550");
		myEstesBillOfLadingPage.selectClass("50");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.ClickOnSaveTemplateToggleBar();
		myEstesBillOfLadingPage.enterTemplateName(templateName);
		myEstesBillOfLadingPage.clickOnSaveTemplateButton();


		// Use BOL template and fill all required fields
		//Added set of codes to use the created templates, as there are more number of templates in the application
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("Template Name");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(templateName);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		testUtil.setHardWait(2000);


		myEstesBillOfLadingPage.clickOnUseTemplateMarkButton(templateName); // increased hard wait by Keertika
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.verifyCreateBOLTabIsActive();
		myEstesBillOfLadingPage.clickOnMasterBOLToggle();
		myEstesBillOfLadingPage.enterMasterBOLNumber("1234"); // Modified master bol locator by Keertika
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnTermsOfService();
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		myEstesBillOfLadingPage.enterPickupRequestContactName("Estes");
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress("estes@estes.com");
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumber("1057575981");
		myEstesBillOfLadingPage.selectRole("Third Party");
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.enterShipperFirstName("Estes");
		myEstesBillOfLadingPage.enterShipperPhoneNumber("1057575981");
		myEstesBillOfLadingPage.enterShipperEmailAddress("estes@estes.com");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");

		myEstesBillOfLadingPage.ClickOnPackagesType();
		myEstesBillOfLadingPage.enterPackagingType("BALE");
		myEstesBillOfLadingPage.enterNumberOfPackages("5");
		myEstesBillOfLadingPage.enterDescription("Test");
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();

		myEstesBillOfLadingPage.validateBOLCreatedMessage();
	}


	@Test(enabled = true, priority = 13)
	public void executeQZ_7592()
			throws InterruptedException {
		String shipperName = "CCI THERMAL" + testUtil.randomString(2);
		String consigneeName = "STECO CORP" + testUtil.randomString(2);

		// Login to MyEstes
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(2000);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		// Create BOL
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		myEstesBillOfLadingPage.enterBOLReferenceNumber("1234");

		// Shipper Details
		myEstesBillOfLadingPage.enterShipperCompanyName(shipperName);
		myEstesBillOfLadingPage.enterShipperFirstName("CCI");
		myEstesBillOfLadingPage.enterShipperLastName("Thermal");
		myEstesBillOfLadingPage.enterShipperLocation("ANCHORAGE");
		myEstesBillOfLadingPage.enterShipperPhoneNumber("8001234567");
		myEstesBillOfLadingPage.enterShipperPhoneExt("123");
		myEstesBillOfLadingPage.enterShipperFaxNumber("1000123457");
		myEstesBillOfLadingPage.enterShipperEmailAddress("QAestes@estes.com");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("1800 E");
		myEstesBillOfLadingPage.enterShipperAddressLine2("1ST AVE");
		myEstesBillOfLadingPage.enterCityForShipper("ANCHORAGE");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("AK");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("99501");

		// Save to Address Book
		myEstesBillOfLadingPage.enterShipperFirstName("CCI");
		myEstesBillOfLadingPage.clickOnShipperSaveToAddressBook();
		myEstesBillOfLadingPage.validateSaveToAddressPopupExistence();
		//myEstesBillOfLadingPage.clickOnAccountSearchLink();
		myEstesBillOfLadingPage.clickShipperOnSaveAddressPopUp();
		myEstesBillOfLadingPage.clickSubmitSaveAddressPopup();

		// Verifying success message and added address
		myEstesBillOfLadingPage.verifyAddressAddedSuccessMessage();
		myEstesBillOfLadingPage.enterShipperCompanyName(shipperName);
		myEstesBillOfLadingPage.clickOnShipperAddressBook();
		myEstesBillOfLadingPage.verifyAddressBookPopupIsOpen();
		myEstesBillOfLadingPage.enterAccountDetails(shipperName);
		myEstesBillOfLadingPage.verifyAccountSearchResults(shipperName);
		myEstesBillOfLadingPage.clickCloseOnAddressBook();
		myEstesBillOfLadingPage.verifyCreateBOLTabIsActive();

		// Consignee Details
		myEstesBillOfLadingPage.enterConsigneeCompanyName(consigneeName); // Modified locator by Keertika
		myEstesBillOfLadingPage.enterConsigneeFirstName("STECO");
		myEstesBillOfLadingPage.enterConsigneeLastName("CORPORATION");
		myEstesBillOfLadingPage.enterConsigneeLocation("LittleRock");
		myEstesBillOfLadingPage.enterConsigneePhoneNumber("8012289099");
		myEstesBillOfLadingPage.enterConsigneePhoneExt("133");
		myEstesBillOfLadingPage.enterConsigneeFaxNumber("1001237890");
		myEstesBillOfLadingPage.enterConsigneeEmailAddress("estes@estes.com");
		myEstesBillOfLadingPage.enterConsigneeAddressLine1("2330");
		myEstesBillOfLadingPage.enterConsigneeAddressLine2("CANTRELL RD");
		myEstesBillOfLadingPage.enterCityForConsignee("Little Rock");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		myEstesBillOfLadingPage.enterStateNameForConsignee("AR");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("72203");

		// Save to Address Book
		myEstesBillOfLadingPage.enterConsigneeFirstName("STECO");
		myEstesBillOfLadingPage.clickOnConsigneeSaveToAddressBook();
		myEstesBillOfLadingPage.validateSaveToAddressPopupExistence();
		myEstesBillOfLadingPage.clickConsigneeOnSaveAddressPopUp();
		myEstesBillOfLadingPage.clickSubmitSaveAddressPopup();

		// Validating success message and added address
		myEstesBillOfLadingPage.verifyAddressAddedSuccessMessage();
		myEstesBillOfLadingPage.enterConsigneeCompanyName(consigneeName);
		myEstesBillOfLadingPage.clickOnConsigneeAddressBook();
		myEstesBillOfLadingPage.verifyAddressBookPopupIsOpen();
		myEstesBillOfLadingPage.enterAccountDetails(consigneeName);
		myEstesBillOfLadingPage.verifyAccountSearchResults(consigneeName);
		myEstesBillOfLadingPage.clickCloseOnAddressBook();
		myEstesBillOfLadingPage.verifyCreateBOLTabIsActive();
	}



	@Test(enabled = true, priority = 14)
	public void executeQZ_7577()
			throws InterruptedException {

		String reference = testUtil.randomString(5);
		String startDate = "11/14/2019";
		String endDate = "11/14/2019";
		String proNumber = "1234567890";
		String consignee = "11111";

		// Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		// Ship--> Bill of Landing--> BOL Draft
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		myEstesBillOfLadingPage.ClickOnBOLDraftsLink();

		// Advance Search--> BOL Reference Number
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.validateFilterOptionExpanded();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Reference Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(reference);
		myEstesBillOfLadingPage.ClickOnSearchButton();

		// Validating No Result Found
		myEstesBillOfLadingPage.verifyNoResultMessageDisplayes();

		// Advance Search--> BOL Date Range
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.validateFilterOptionExpanded();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("BOL Date Range");
		myEstesBillOfLadingPage.enterDraftStartDate(startDate);
		myEstesBillOfLadingPage.enterDraftEndDate(endDate);
		myEstesBillOfLadingPage.ClickOnSearchButton();
		myEstesBillOfLadingPage.verifyNoResultMessageDisplayes();

		// Advance Search--> PRO number
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.validateFilterOptionExpanded();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("PRO Number");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(proNumber);
		myEstesBillOfLadingPage.ClickOnSearchButton();

		// Validating No Result Found
		myEstesBillOfLadingPage.verifyNoResultMessageDisplayes();

		// Advance Search--> Consignee
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		myEstesBillOfLadingPage.validateFilterOptionExpanded();
		myEstesBillOfLadingPage.ClickOnSearchBy();
		myEstesBillOfLadingPage.selectFromSearchByOption("Consignee");
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains(consignee);
		myEstesBillOfLadingPage.ClickOnSearchButton();

		// Validating No Result Found
		myEstesBillOfLadingPage.verifyNoResultMessageDisplayes();
	}


	@Test(enabled = true, priority = 15)

	public void executeQZ_7582() throws InterruptedException {

		//Step: 1 Launch application
		myEstesHomePage.clickOnMyEstes();
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnLogin();
		//Step: 2 Login
		testUtil.setHardWait(1000);
		myEstesLoginPage.enterUserName(username1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		//Step: 3 Click Ship -> Bill of Lading
		myEstesHomePage.clickOnShipTab();
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnBillOfLadingFromShip();
		testUtil.setHardWait(3000);

		//Step: 4 From Create BOL page, Click on the  <BOL Template>
		myEstesBillOfLadingPage.clickOnBolTemplatesLink();
		testUtil.setHardWait(1000);
		//Step: 5 Click on Advanced Search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();

		//Step: 6 From Search by drop-down select 'Show All'
		myEstesBillOfLadingPage.selectSearchBy("Show All");

		//Step: 7 Select the <TemplateName> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("Template Name");

		//Step: 8 Leave Contains field Blank
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");

		//Step: 9 Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step: 10 Select the  <BOL Reference Number> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("BOL Reference Number");

		//Step: 11 Leave Contains field Blank
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		testUtil.setHardWait(1000);
		//Step: 12 Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step: 13 Select the  <BOL Date Range> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("BOL Date Range");

		//Step 14: Leave Start Date and End Date field Blank
		//Step 15: Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step: 16 Select the  <PRO Number> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("PRO Number");

		//Step 17: Leave Contains field Blank
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");

		//Step 18: Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step: 19 Select the  <Shipper> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("Shipper");

		//Step 20: Leave Contains field Blank
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");

		//Step 21: Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step: 22 Select the  <Consignee> option from the Search by drop-down menu
		myEstesBillOfLadingPage.selectSearchBy("Consignee");

		//Step 23: Leave Contains field Blank
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");

		//Step 24: Click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

	}

	/*
	 * Bill of Lading - Pickup Request - Group Account - Verify BOL can be created
	 * with BOL Type (Blank VICS BOL), Select Guaranteed Service and Role Shipper
	 * selected to create Pickup Request
	 */

	@Test(enabled = true, priority=16)

	public void executeQZ_7586() throws InterruptedException {

		String pickupRequestRoles[] = {"Shipper", "Consignee", "Third Party", "Other"};
		String shippingSummarySection[] = {"Name", "Shipper", "Shipper Phone", "Shipper Email", "Consignee", "Consignee Phone", "Consignee Email", "Total Commodities", "Total Shipment Weight"};
		String bolSummarySection[] = {"BOL Date", "Account", "PRO #"};
		String bolNumber = "BOL12345"; String contactName = "John Wayne"; String emailAddress = "qatest@estes-express.com"; String phoneNumber = "(804) 535-1900"; String ext = "1234";
		String role = "Shipper"; String accessorial = "Lift-Gate Service (Pickup)"; String service = "Poison"; String piece = "1"; String pieceType = "BAG"; String weight = "5000";


		//Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username7);
		myEstesLoginPage.enterPassword(password7);
		myEstesLoginPage.clickOnLoginButton();

		//Ship--> Bill of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//BOL Details
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		myEstesBillOfLadingPage.verifyMasterBOLIsDisplayed();

		myEstesBillOfLadingPage.clickOnMasterBOLToggle();
		myEstesBillOfLadingPage.enterMasterBOLNumber(bolNumber);
		myEstesBillOfLadingPage.enterBOLReferenceNumber("REF12345");
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();

		//Quote Details
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnTermsOfService();

		//Pickup Request
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		myEstesBillOfLadingPage.enterPickupRequestContactName(contactName);
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress(emailAddress);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumber(phoneNumber);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumberExtension(ext);
		myEstesBillOfLadingPage.clickOnPickupRole();
		myEstesBillOfLadingPage.verifyListOptionsInPickupRequestRole(pickupRequestRoles);
		myEstesBillOfLadingPage.selectRolesOnPickupRequest(role);
		myEstesBillOfLadingPage.clickOnAccountSearchLink();
		myEstesBillOfLadingPage.clickFirstAddressOnAddressBook();
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.validatePickupRequestAccountNoIsPopulated();
		myEstesBillOfLadingPage.clickOnPickupAccessorial(accessorial);
		myEstesBillOfLadingPage.clickOnPickupService(service);
		myEstesBillOfLadingPage.clickOnLiftGateServicePickup();

		//Shipper Info
		//myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee(); //Consignee address not saved for this account, So added consignee details internally
		myEstesBillOfLadingPage.enterFirstNameForShipper("Estes");
		myEstesBillOfLadingPage.enterEmailForShipper("estes@estes.com");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("Estes Consignee");
		myEstesBillOfLadingPage.enterConsigneeAddressLine1("Street 1");
		myEstesBillOfLadingPage.enterCityForConsignee("ANCHORAGE");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		myEstesBillOfLadingPage.enterStateNameForConsignee("AK");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("99501");

		//Billing Information
		myEstesBillOfLadingPage.selectBillTo("Consignee");
		myEstesBillOfLadingPage.clickOnCODRemitToToggle();
		myEstesBillOfLadingPage.clickOnPaymentType();
		myEstesBillOfLadingPage.selectPaymentType("Certified Check");
		myEstesBillOfLadingPage.clickOnFeeToBePaid();
		myEstesBillOfLadingPage.selectFeeToBePaid("Shipper");
		myEstesBillOfLadingPage.enterAmountToBePaid("1000");
		myEstesBillOfLadingPage.clickOnUseShipperInfoAboveCheckbox();
		myEstesBillOfLadingPage.verifyRemitToCompanyNameIsAutoFill();
		myEstesBillOfLadingPage.verifyRemitToAddressLine1IsAutoFill();

		//Commodities
		myEstesBillOfLadingPage.enterHandlingUnits(piece);
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight(weight);
		myEstesBillOfLadingPage.ClickOnPackagesType();
		myEstesBillOfLadingPage.enterPackagingType(pieceType);
		myEstesBillOfLadingPage.enterNumberOfPackages(piece);
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");
		myEstesBillOfLadingPage.validateTotalCommodities(piece);
		myEstesBillOfLadingPage.validateTotalShipmentWeight(weight);

		//Notification
		//myEstesBillOfLadingPage.enterShipperNotificationEmailAddress("qatest@estes-express.com"); //Email address is filled by default
		myEstesBillOfLadingPage.verifyAcceptedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyCompletedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyRejectedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyRejectedCheckBoxIsChecked();

		//Submit BOL
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();

		//Validating BOL Summary page
		myEstesBillOfLadingPage.validateBOLCreatedMessage();
		myEstesBillOfLadingPage.verifyBOLSummarySection(bolSummarySection);
		myEstesBillOfLadingPage.verifyShippingSummarySection(shippingSummarySection);

		//Validating Pickup Request section
		myEstesBillOfLadingPage.verifyContactNameFromBOLSummary(contactName);
		myEstesBillOfLadingPage.verifyPhoneNumberFromBOLSummary(phoneNumber+" "+ext);
		myEstesBillOfLadingPage.verifyEmailAddressFromBOLSummary(emailAddress);
		myEstesBillOfLadingPage.verifyRoleFromBOLSummary("SHIPPER");
		myEstesBillOfLadingPage.verifyPickupDateFromBOLSummary(testUtil.todaysDate());
		myEstesBillOfLadingPage.verifyAvailableByFromBOLSummary("08:00 AM");
		myEstesBillOfLadingPage.verifyClosesByFromBOLSummary("05:00 PM");
		myEstesBillOfLadingPage.verifyPickupNotificationFromBOLSummary("Rejected");
		myEstesBillOfLadingPage.verifyServicesFromBOLSummary(service);
		myEstesBillOfLadingPage.verifyPickupAccessorialsFromBOLSummary(accessorial);
		myEstesBillOfLadingPage.verifyPiecesFromBOLSummary(piece);
		myEstesBillOfLadingPage.verifyPiecesTypeFromBOLSummary(pieceType);
		myEstesBillOfLadingPage.verifyWeightFromBOLSummary(weight);
		myEstesBillOfLadingPage.verifyHazmatFromBOLSummary("No");
		String reqNumber = myEstesBillOfLadingPage.capturePickupRequestNoFromBOLSummary();

		//Click on BOL and Validating BOL PDF is open in new tab
		myEstesBillOfLadingPage.ClickOnViewBillOfLadingButton(); //Modified Locator
		testUtil.setHardWait(5000);
		//TestUtil.verifyTrue(testUtil.getCountOfOpenTabs()>1);



		//Ship--> Pickup Request
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnPickupRequest();
		myEstesPickupRequestPage.verifyPageTitle(); //Modified pageTitle method and ele locator

		//Validating Pickup history records
		myEstesPickupRequestPage.clickOnViewPickupHistory(); //Modified method and locator
		//Created Ref number will display in first line there is no need for sorting
		myEstesPickupRequestPage.verifyRequestNoListedInPickupHistory(reqNumber.trim());

	}

	/*
	 * Bill of Lading - Pickup Request - Local Account - Verify BOL can be created
	 * with BOL type (Blank VICS BOL), Select Guaranteed Service, Hazmat and Role
	 * Other selected to create Pickup Request
	 *
	 */
	@Test(enabled = true,priority=17)

	public void executeQZ_7588() throws InterruptedException {
		String contactName = "ADVANCE AUTO PARTS"; String emailAddress = "qatest@estes-express.com"; String phoneNumber = "(804) 535-1900"; String ext = "123"; String role = "Other";
		String accessorial = "Lift-Gate Service (Pickup)"; String service = "Poison"; String piece = "1"; String pieceType = "BAG"; String weight = "5000"; String desc = "TESTING FUN ITEMS!";
		String shippingSummarySection[] = {"Name", "Shipper", "Shipper Phone", "Shipper Email", "Consignee", "Consignee Phone", "Consignee Email", "Total Commodities", "Total Shipment Weight"};
		String bolSummarySection[] = {"BOL Date", "Account", "PRO #"};

		//Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username2);
		myEstesLoginPage.enterPassword(password2);
		myEstesLoginPage.clickOnLoginButton();

		//Ship--> Bill of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//BOL Details
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		myEstesBillOfLadingPage.verifyMasterBOLIsDisplayed();
		myEstesBillOfLadingPage.clickOnMasterBOLToggle();
		myEstesBillOfLadingPage.enterMasterBOLNumber("D4TXtCj7X");
		myEstesBillOfLadingPage.enterBOLReferenceNumber("93019DEELAx01");
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();

		//Quote Details
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnTermsOfService();

		//Pickup Request
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		myEstesBillOfLadingPage.enterPickupRequestContactName(contactName);
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress(emailAddress);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumber(phoneNumber);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumberExtension(ext);
		myEstesBillOfLadingPage.clickOnPickupRole();
		myEstesBillOfLadingPage.selectRolesOnPickupRequest(role);
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.clickOnPickupAccessorial(accessorial);
		myEstesBillOfLadingPage.clickOnPickupService(service);
		myEstesBillOfLadingPage.clickOnLiftGateServicePickup();

		//Shipper & Consignee Info
		myEstesBillOfLadingPage.clickOnUseMyEstesAccInfoForConsignee();
		myEstesBillOfLadingPage.enterShipperCompanyName("CCI Thermal");
		myEstesBillOfLadingPage.enterFirstNameForShipper("CII Thermo");
		myEstesBillOfLadingPage.enterShipperPhoneNumber(phoneNumber);
		myEstesBillOfLadingPage.enterShipperEmailAddress(emailAddress);
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("1st Street");
		myEstesBillOfLadingPage.enterCityForShipper("ANCHORAGE");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("AK");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("99501");

		//Billing Information
		myEstesBillOfLadingPage.selectBillTo("Consignee");
		myEstesBillOfLadingPage.clickOnCODRemitToToggle();
		myEstesBillOfLadingPage.clickOnPaymentType();
		myEstesBillOfLadingPage.selectPaymentType("Certified Check");
		myEstesBillOfLadingPage.clickOnFeeToBePaid();
		myEstesBillOfLadingPage.selectFeeToBePaid("Consignee");
		myEstesBillOfLadingPage.enterAmountToBePaid("1000");
		myEstesBillOfLadingPage.clickOnUseMyEstesAccountCheckbox();
		myEstesBillOfLadingPage.clickOnHazmatCheckbox();
		myEstesBillOfLadingPage.verifyRemitToCompanyNameIsAutoFill();
		myEstesBillOfLadingPage.verifyRemitToAddressLine1IsAutoFill();

		//Commodities
		myEstesBillOfLadingPage.enterHandlingUnits(piece);
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType(pieceType);
		myEstesBillOfLadingPage.enterTotalWeight(weight);
		myEstesBillOfLadingPage.selectClass("50");
		myEstesBillOfLadingPage.ClickOnPackagesType();
		myEstesBillOfLadingPage.enterPackagingType(pieceType);
		myEstesBillOfLadingPage.enterNumberOfPackages(piece);
		myEstesBillOfLadingPage.enterCommoditiesDescription(desc);
		myEstesBillOfLadingPage.enterHazmatContactName("CCI Thermal");
		myEstesBillOfLadingPage.enterHazmatPhoneNumber(phoneNumber);
		myEstesBillOfLadingPage.validateTotalCommodities(piece);
		myEstesBillOfLadingPage.validateTotalShipmentWeight(weight);

		//Notification
		myEstesBillOfLadingPage.enterOtherNotificationEmail(emailAddress);
		myEstesBillOfLadingPage.verifyAcceptedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyCompletedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyRejectedCheckboxIsDisplayed();
		myEstesBillOfLadingPage.verifyRejectedCheckBoxIsChecked();

		//Submit BOL
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();

		//Validating BOL Summary page
		myEstesBillOfLadingPage.validateBOLCreatedMessage();
		myEstesBillOfLadingPage.verifyBOLSummarySection(bolSummarySection);
		myEstesBillOfLadingPage.verifyShippingSummarySection(shippingSummarySection);

		//Validating Pickup Request section
		myEstesBillOfLadingPage.verifyContactNameFromBOLSummary(contactName);
		myEstesBillOfLadingPage.verifyPhoneNumberFromBOLSummary(phoneNumber+" "+ext);
		myEstesBillOfLadingPage.verifyEmailAddressFromBOLSummary(emailAddress);
		myEstesBillOfLadingPage.verifyRoleFromBOLSummary("OTHER");
		myEstesBillOfLadingPage.verifyPickupDateFromBOLSummary(testUtil.todaysDate());
		myEstesBillOfLadingPage.verifyAvailableByFromBOLSummary("08:00 AM");
		myEstesBillOfLadingPage.verifyClosesByFromBOLSummary("05:00 PM");
		myEstesBillOfLadingPage.verifyPickupNotificationFromBOLSummary("Rejected");
		myEstesBillOfLadingPage.verifyServicesFromBOLSummary(service);
		myEstesBillOfLadingPage.verifyPickupAccessorialsFromBOLSummary(accessorial);
		myEstesBillOfLadingPage.verifyPiecesFromBOLSummary(piece);
		myEstesBillOfLadingPage.verifyPiecesTypeFromBOLSummary(pieceType);
		myEstesBillOfLadingPage.verifyWeightFromBOLSummary(weight);
		myEstesBillOfLadingPage.verifyHazmatFromBOLSummary("Yes");
		myEstesBillOfLadingPage.verifyCommodityDescriptionFromBOLSummary(desc);
		String reqNumber = myEstesBillOfLadingPage.capturePickupRequestNoFromBOLSummary();

		//Click on BOL and Validating BOL PDF is open in new tab
		myEstesBillOfLadingPage.ClickOnViewBillOfLadingButton();
		testUtil.setHardWait(5000);
		TestUtil.verifyTrue(testUtil.getCountOfOpenTabs()>0);

		//Ship--> Pickup Request
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnPickupRequest();
		myEstesPickupRequestPage.verifyPageTitle();

		//Validating Pickup history records
		myEstesPickupRequestPage.clickOnViewPickupHistory();
		myEstesPickupRequestPage.verifyRequestNoListedInPickupHistory(reqNumber);
	}

	// KEERTIKA'S SCRIPT WAS MERGED AND PRIORITY SET TO 19

	/*
	 * Bill of Lading - Verify error message displays when required fields are left
	 * blank - Blank Estes BOL
	 *
	 */

	@Test(enabled = true,priority=18)

	public void executeQZ_7595() throws InterruptedException {

		//Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		//testUtil.setHardWait(1000);
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		//testUtil.setHardWait(3000);
		myEstesLoginPage.clickOnLoginButton();
		testUtil.setHardWait(1000);
		//Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Create BOL
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		myEstesBillOfLadingPage.selectRole("Shipper");
		myEstesBillOfLadingPage.selectBillTo("Third Party (add)");
		myEstesBillOfLadingPage.clickOnCODRemitToToggle();
		myEstesBillOfLadingPage.clickOnHazmatCheckbox();
		myEstesBillOfLadingPage.clickOnPrintShippingLabelstoggle();
		int requiredFieldCount  = myEstesBillOfLadingPage.captureTotalNoOfRequiredFields();
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();
		int  requiredFieldErrorCount = myEstesBillOfLadingPage.captureTotalNoOfRequiredFieldErrors();
		Assert.assertEquals(requiredFieldCount, requiredFieldErrorCount);
	}


	/*
	 * Bill of Lading - History - Verify the user receives an error when filter
	 * fields are left blank on BOL History page.
	 *
	 */

	@Test(enabled = true, priority = 19)

	public void executeQZ_7606() throws InterruptedException {
		//Step 1: Launch application
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		testUtil.setHardWait(1000);
		//Step 2: Login as national user
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		//Step 3: From Estes Homepage, hover mouse over <Ship>
		myEstesHomePage.clickOnShipTab();

		//Step 4: Select Bill of lading
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Step 5: From Create BOL page, Click on the following link/button  <BOL History>
		myEstesBillOfLadingPage.clickOnBOLHistoryLink();

		//Step 6: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();

		//Step 7: Select Show All
		myEstesBillOfLadingPage.selectSearchBy("Show All");

		//Step 8: Select search by as BOL Reference Number
		myEstesBillOfLadingPage.selectSearchBy("BOL Reference Number");

		//Step 9: Leave Contains field Blank and click on Filter button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed as Bol Reference number is required
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 10: Select search by as BOL Date Range
		myEstesBillOfLadingPage.selectSearchBy("BOL Date Range");

		//Step 11: Leave Contains field Blank and click on Filter button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed as BOL Date Range is required
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 12: Select search by as Pro Number
		myEstesBillOfLadingPage.selectSearchBy("PRO Number");

		//Step 13: Leave Contains field Blank and click on Filter button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");

		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed as Pro Number is required
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 14: Select search by as Shipper
		myEstesBillOfLadingPage.selectSearchBy("Shipper");

		//Step 15: Leave Contains field Blank and click on Filter button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed as Shipper is required
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 16: Select search by as Consignee
		myEstesBillOfLadingPage.selectSearchBy("Consignee");

		//Step 17: Leave Contains field Blank and click on Filter button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed as Consignee is Required
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

	}

	/*
	 * Bill of Lading - Drafts - Verify the user receives an error when Search By
	 * fields are left blank for on BOL Draft page.
	 */
	@Test(enabled = true, priority = 20)

	public void executeQZ_7579() throws InterruptedException {

		//Step 1: Launch application
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();

		//Step 2: Login as national user
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		//Step 3: Click on Ship tab and Select Bill Of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();
		testUtil.setHardWait(500);
		//Step 4: From BOL Draft page, Click on BOL Draft
		myEstesBillOfLadingPage.ClickOnBOLDraftsLink();

		//Step 5: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();

		//Step 6: Select search by BOL Reference Number
		myEstesBillOfLadingPage.selectSearchBy("BOL Reference Number");

		//Step 7: Leave Contains field Blank and click on search button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 8: Click on clear button
		myEstesBillOfLadingPage.ClickOnClearButton();
		testUtil.setHardWait(1000);
		//Step 9: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		testUtil.setHardWait(1000);
		//Step 10: Select search by BOL Date Range Number
		myEstesBillOfLadingPage.selectSearchBy("BOL Date Range");

		//Step 11:  Leave Contains field Blank and click on search button
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 12: Click on clear button
		myEstesBillOfLadingPage.ClickOnClearButton();

		//Step 13: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();
		testUtil.setHardWait(1000);
		//Step 14: Select search by as Pro Number
		myEstesBillOfLadingPage.selectSearchBy("PRO Number");

		//Step 15: Leave Contains field Blank and click on search button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 16: Click on clear button
		myEstesBillOfLadingPage.ClickOnClearButton();

		//Step 17: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();

		//Step 18: Select search by as Shipper
		myEstesBillOfLadingPage.selectSearchBy("Shipper");

		//Step 19: Leave Contains field Blank and click on search button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();

		//Step 20: Click on clear button
		myEstesBillOfLadingPage.ClickOnClearButton();

		//Step 21: Click on Advanced search link
		myEstesBillOfLadingPage.ClickOnAdvSearchButton();

		//Step 22: Select search by as Consignee
		myEstesBillOfLadingPage.selectSearchBy("Consignee");

		//Step 23: Leave Contains field Blank and click on search button
		myEstesBillOfLadingPage.enterSearchByOptionDataInContains("");
		myEstesBillOfLadingPage.ClickOnSearchButton();

		//Validate error message is displayed
		myEstesBillOfLadingPage.captureAndVerifyErrMsg();
	}



	/*
	 * Bill of Lading - Templates - Verify the user is able to Create a Template
	 */

	@Test(enabled = true, priority = 21)

	public void executeQZ_7605() throws InterruptedException {

		//Step 1: Launch my estes application
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();

		//Step 2: Login as local user
		myEstesLoginPage.enterUserName(username2);
		myEstesLoginPage.enterPassword(password2);
		myEstesLoginPage.clickOnLoginButton();

		//Step 3: Click on Ship and select Bill of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Step 4: Select BOL Template
		myEstesBillOfLadingPage.clickOnBOLTemplatesLink();
		testUtil.setHardWait(3000);

		//Step 5: Click Create One Now button ---> *Note* Create One Now button will only display if there is no template. If templates exists, select X icon for any existing BOL Template to be deleted.
		myEstesBillOfLadingPage.verifyAndDeleteExistingBOLTemplate();
		myEstesBillOfLadingPage.clickOnCreateOneNewButton();	//Added code to click create one new button

		//Step 6: From Create BOL page, fill all the required fields on the page.
		//BOL Details
		myEstesBillOfLadingPage.enterBOLReferenceNumber(testUtil.randomString(5));

		//Shipper and Consignee Details
		myEstesBillOfLadingPage.enterShipperCompanyName("Shipper Corp");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("Consignee Corp");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("99 CRESCENT ST");
		myEstesBillOfLadingPage.enterCityForShipper("CHELSEA");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("MA");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("02150");
		myEstesBillOfLadingPage.enterAddrLine1ForConsignee("6125 Duquesne Drive SW");
		myEstesBillOfLadingPage.enterCityForConsignee("Atlanta");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		myEstesBillOfLadingPage.enterStateNameForConsignee("GA");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("30336");

		//Billing information
		myEstesBillOfLadingPage.selectShipperBillTo();

		//Commodities
		myEstesBillOfLadingPage.enterHandlingUnit("5");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("1000");
		myEstesBillOfLadingPage.selectClass("55");

		//Step 7: Select "Save this BOL as Template to use again" toggle button
		myEstesBillOfLadingPage.clickOnSaveThisTemplateToggle();

		//Step 8: Enter name in *Template Name* text box
		String templateName = testUtil.randomString(5);
		myEstesBillOfLadingPage.enterTemplateName(templateName);

		//Step 9: Click Save as Template only button.
		myEstesBillOfLadingPage.clickOnSaveTemplateButton();
		testUtil.setHardWait(3000);

		//Validate the user is navigated to BOL Template Page.
		testUtil.verifyText(driver.findElement(By.xpath("//mat-card-title")).getText(),"Templates");

		//Step 10: Validate the recent template is created and displaying in the List of BOL Template.
		myEstesBillOfLadingPage.verifyExistenceOfTemplate(templateName);

		//Deleting the data created to avoid data being created unnecessarily
		myEstesBillOfLadingPage.verifyAndDeleteExistingBOLTemplate();
	}

	/*
	 * Bill of Lading - Verify error message displays when required marked by
	 * asterisk fields are left blank - Blank VICS BOL.
	 */
	@Test(enabled = true, priority = 22)

	public void executeQZ_7599() throws InterruptedException {
		//Step 1: Open application
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();

		//Step 2: Login as group user
		myEstesLoginPage.enterUserName(username3);
		testUtil.setHardWait(1000);
		myEstesLoginPage.enterPassword(password3);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		//Step 3: Click Ship and Select Bill of Lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Step 4: Click on Blank VICS BOL radio button
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();

		//Step 5: BOL Details section, leave all required fields blank and Select *Master BOL* Toggle switch
		myEstesBillOfLadingPage.clickOnMasterBOLToggle();

		//Step 6: Quote Details section, Click Guaranteed Service Toggle
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();

		//Step 7: Click Pickup Request toggle, leave all required fields blank and Select *Shipper* from Role drop-down
		myEstesBillOfLadingPage.clickOnPickupRequestToggle();
		myEstesBillOfLadingPage.selectRole("Shipper");

		//Step 8: Shipper & consignee Details, leave all required fields blank  //No need to enter data, so no operations performed here

		//Step 9: Bill Information section, Select *Third Party(add)* from Bill To drop-down. Leave all fields blank
		myEstesBillOfLadingPage.selectBillTo("Third Party (add)");

		//Step 10: Click COD Remit To toggle, leave all required fields blank
		myEstesBillOfLadingPage.clickOnCodRemitTo();

		//Step 11: Commodities section,  leave all required fields blank.Select the CheckBox for Hazmat
		myEstesBillOfLadingPage.clickOnHazmat();

		//Step 12: Click on print shipping labels toggle
		myEstesBillOfLadingPage.clickOnPrintShippingLabelsToggle();

		//Step 13: Click on Save this BOL as template toggle
		myEstesBillOfLadingPage.clickOnSaveThisTemplateToggle();

		//Step 14: Click Submit BOL + Generate Pickup Request button
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();

		//Validate Error messages are received in section for the form for required fields mark by (*)
		//Bol details
		myEstesBillOfLadingPage.verifyReqFieldsOfBolDetailsSection();
		//Pickup Details
		myEstesBillOfLadingPage.verifyRequiredFieldsOfPickupDetails();
		//Shipper and Consignee details
		myEstesBillOfLadingPage.verifyReqFieldsOfShipperAndConsigneeDetails();
		//Billing information
		myEstesBillOfLadingPage.verifyReqFieldsOfBillingInfoSection();
		//Commodities info
		myEstesBillOfLadingPage.verifyReqFieldsOfCommoditySection();
		//Notification
		myEstesBillOfLadingPage.verifyReqFieldsOfNotificationSection();
		//Save BOL Template
		myEstesBillOfLadingPage.verifyReqFieldsOfSaveBolTemplateSection();
	}


	/*
	 * Bill of Lading - History - Verify the user is able to Cancel BOL on BOL
	 * History tab.
	 */

	@Test(enabled = true, priority = 23)

	public void executeQZ_7598() throws InterruptedException {

		//Step 1: Launch My Estes application
		myEstesHomePage.clickOnMyEstes();
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnLogin();
		testUtil.setHardWait(2000);
		//Step 2: Login as national user
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		myEstesLoginPage.clickOnLoginButton();

		//Step 3: From Home Page Click ship
		myEstesHomePage.clickOnShipTab();

		//Step 4: Select Bill Of Lading
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Step 5: Click on BOL History
		myEstesBillOfLadingPage.clickOnBOLHistoryLink();

		//Step 6: From BOL History page, Select a BOL
		//*Note*: Select a BOL with a Future Date. Not Today or Before today's date

		//########### Test Data Creation - Steps to create BOL for future date #####################
		myEstesBillOfLadingPage.clickOnCreateBOLLink();

		//Bol details
		String bolReference = testUtil.randomString(5);
		myEstesBillOfLadingPage.enterBOLReferenceNumber(bolReference);
		testUtil.setHardWait(1000);
		//myEstesBillOfLadingPage.enterFutureBOLDate();

		String bolDate = testUtil.addOrSubstractDateFromTodayDate(1);

		myEstesBillOfLadingPage.enterBOLReferenceNumber(bolReference);

		myEstesBillOfLadingPage.enterBOLDate(bolDate);

		//Shipper and Consignee details
		myEstesBillOfLadingPage.enterShipperCompanyName("Advance Auto Parts");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("ABC Auto Parts");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("5008 AIRPORT RD");
		myEstesBillOfLadingPage.enterCityForShipper("CHELSEA");

		//myEstesBillOfLadingPage.clickOnStateForShipper();
		//myEstesBillOfLadingPage.enterStateNameForShipper("MA");
		myEstesBillOfLadingPage.selectShipperState("MA");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("02150");
		myEstesBillOfLadingPage.enterAddrLine1ForConsignee("1501 N Hamilton St");
		myEstesBillOfLadingPage.enterCityForConsignee("ATLANTA");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		myEstesBillOfLadingPage.enterStateNameForConsignee("GA");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("30336");

		//Billing information
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.selectShipperBillTo();

		//Commodities
		myEstesBillOfLadingPage.enterHandlingUnit("5");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("1000");
		myEstesBillOfLadingPage.enterDescription("Test");

		//Click on submit
		myEstesBillOfLadingPage.ClickOnSubmitBOL();
		System.out.println("Created BOL "+bolReference);
		testUtil.setHardWait(5000);

		myEstesBillOfLadingPage.clickOnBOLHistoryLink();
		testUtil.setHardWait(3000);
		//#######################################

		//Step 7: Click Cancel button
		myEstesBillOfLadingPage.cancelBOL(bolReference);
		testUtil.setHardWait(3000);

		//Verify Confirmation message is received
		//myEstesBillOfLadingPage.verifyConfirmationMsgForBol(bolReference);  //Included this step in Step 7
		//testUtil.setHardWait(3000);

		//Validate that the BOL is deleted from the list of BOL's
		myEstesBillOfLadingPage.verifyBOL(bolReference, false);
	}


	/*
	 * Bill of Lading - BOL Source - Verify the user can create a Blank VICS BOL and
	 * have pronumber generate
	 */

	@Test(enabled = true, priority = 24)

	public void executeQZ_7602() throws InterruptedException {

		//Step 1: Open application
		myEstesHomePage.clickOnMyEstes();
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnLogin();

		//Step 2: Login as group user
		myEstesLoginPage.enterUserName(username3);
		myEstesLoginPage.enterPassword(password3);
		testUtil.setHardWait(500);
		myEstesLoginPage.clickOnLoginButton();
		testUtil.setHardWait(500);
		//Step 3: Click Ship and Select Bill of lading
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Step 4: Select <Blank VICS BOL>
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();

		//Step 5: Select Master BOL toggle
		//*Note: Master BOL # can be any alphanumeric value
		myEstesBillOfLadingPage.clickOnMasterBOLToggle();
		String bolNumber = testUtil.randomString(5);
		myEstesBillOfLadingPage.enterMasterBOLNumber(bolNumber);

		//Step 6: Fill in required fields of BOL
		myEstesBillOfLadingPage.enterBOLReferenceNumber(testUtil.randomString(5));

		//Step 7: Click toggle for Auto Assign pro
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();

		//Step 8: For Quote Details, leave fields blank. Do not click Guaranteed Service toggle 			//Field are blank by default. So no operations performed here

		//Step 9: For Pickup Request, leave fields blank. Do not click Generate Pickup Request toggle 		//Field are blank by default. So no operations performed here

		//Step 10: For Accessorials, select any
		myEstesBillOfLadingPage.clickOnInsideDeliveryRadioButton();

		//Step 11: For Shipper & Consignee Details, click Use My Estes Account Info checkbox *Fill out required fields*
		//By clicking 'Use My Estes account checkbox, required fields are not filled. So filling out required fields directly
		myEstesBillOfLadingPage.enterShipperCompanyName("Advance Auto Parts");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("ABC Auto Parts");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("5008 AIRPORT RD");
		myEstesBillOfLadingPage.enterCityForShipper("CHELSEA");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("MA");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("02150");
		myEstesBillOfLadingPage.enterAddrLine1ForConsignee("1501 N Hamilton St");
		myEstesBillOfLadingPage.enterCityForConsignee("ATLANTA");
		myEstesBillOfLadingPage.clickOnStateForConsignee();
		myEstesBillOfLadingPage.enterStateNameForConsignee("GA");
		myEstesBillOfLadingPage.enterZIPCodeForConsignee("30336");

		//Step 12: For Billing Information, select Bill To as Consignee
		myEstesBillOfLadingPage.selectBillTo("Consignee");

		//Step 13: From COD Remit To, Do not click COD Remit To toggle						//Field are blank by default. So no operations performed here

		//Step 14: For Commodities, select or enter the following values: Handling Units <1>	Type<Bags>	Total Weight<5000>	#of Packages <1>	Packaging Type<Carton>
		myEstesBillOfLadingPage.enterHandlingUnit("1");
		myEstesBillOfLadingPage.clickOnType();
		myEstesBillOfLadingPage.enterType("BAG");
		myEstesBillOfLadingPage.enterTotalWeight("5000");
		myEstesBillOfLadingPage.enterNumberOfPackages("1");
		myEstesBillOfLadingPage.ClickOnPackagesType();
		myEstesBillOfLadingPage.enterCommoditiesDescription("Testing");
		testUtil.clickElementJavascript(driver.findElement(By.xpath("//span[@class='mat-option-text'][contains(text(),'CARTON')]")));

		//Validate the following: 	Total Commodities <1>	Total Shipment Weight <5000 lbs>
		//testUtil.verifyText(driver.findElement(By.xpath("//label[contains(text(),'Total Commodities')]")).getText(), "Total Commodities: 1");					//Commented and modified as below - Ajitha
		//testUtil.verifyText(driver.findElement(By.xpath("//label[contains(text(),'Total Shipment')]")).getText(), "Total Shipment Weight: 5000 lbs");			//Commented and modified as below - Ajitha

		myEstesBillOfLadingPage.verifyCommodity("1");
		myEstesBillOfLadingPage.verifyTotalShipmentWeight("5000");

		//Step 15: For Reference Numbers, do not enter any value							//Field are blank by default. So no operations performed here

		//Step 16: For Shipping Labels, Do not click Print Shipping Labels toggle			//Field are blank by default. So no operations performed here

		//Step 17: For Notifications, Do not select Notifications toggle					//Field are blank by default. So no operations performed here

		//Step 18: Click Submit BOL button
		myEstesBillOfLadingPage.ClickOnSubmitBOL();

		//Validate user navigates to Bill of Lading Summary page and the Bol sections are populated:
		myEstesBillOfLadingPage.verifyBolSection();
		myEstesBillOfLadingPage.verifyShippingSummarySection();

		//Step 19: Click View of Lading button
		myEstesBillOfLadingPage.ClickOnViewBillOfLadingButton();
		testUtil.setHardWait(3000);

		//Step 20: Click Create New BOL  button
		myEstesBillOfLadingPage.clickOnCreateNewBolButton();

		//User will be re-directed to blank BOL form
		myEstesBillOfLadingPage.verifyPageTitle();

	}


	/*
	 * Bill of Lading - Shipper and Consignee Details - Verify Address Book link
	 * functions correctly in the Shipper & Consignee Details section for VICS BOL
	 * and COD Remit To section.
	 */

	@Test(enabled = true,priority =25)
	public void executeQZ_7596() throws InterruptedException {

		//Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		testUtil.setHardWait(1000);
		myEstesHomePage.clickOnLogin();
		testUtil.setHardWait(1000);
		myEstesLoginPage.enterUserName(username1);
		myEstesLoginPage.enterPassword(password1);
		testUtil.setHardWait(1000);
		myEstesLoginPage.clickOnLoginButton();

		//Ship--> Bill of Landing
		myEstesHomePage.clickOnShipTab();
		myEstesHomePage.clickOnBillOfLadingFromShip();

		//Create BOL
		myEstesBillOfLadingPage.clickOnBVICSBolRadioButton();
		myEstesBillOfLadingPage.enterBOLReferenceNumber("12345");

		//Steps to add the address
		myEstesBillOfLadingPage.enterShipperCompanyName("CCI Thermal");
		myEstesBillOfLadingPage.enterShipperFirstName("CCI");
		myEstesBillOfLadingPage.enterShipperLastName("Thermal");
		myEstesBillOfLadingPage.enterShipperLocation("ANCHORAGE");
		myEstesBillOfLadingPage.enterShipperPhoneNumber("8001234567");
		myEstesBillOfLadingPage.enterShipperPhoneExt("123");
		myEstesBillOfLadingPage.enterShipperEmailAddress("QAestes@estes.com");
		myEstesBillOfLadingPage.enterAddrLine1ForShipper("1800 E");
		myEstesBillOfLadingPage.enterShipperAddressLine2("1ST AVE");
		myEstesBillOfLadingPage.enterCityForShipper("ANCHORAGE");
		myEstesBillOfLadingPage.clickOnStateForShipper();
		myEstesBillOfLadingPage.enterStateNameForShipper("AK");
		myEstesBillOfLadingPage.enterZIPCodeForShipper("99501");
		myEstesBillOfLadingPage.clickOnShipperSaveToAddressBook();
		myEstesBillOfLadingPage.validateSaveToAddressPopupExistence();
		myEstesBillOfLadingPage.clickThirdPartyOnSaveAddressPopUp();
		myEstesBillOfLadingPage.clickSubmitSaveAddressPopup();

		//Shipper Address
		myEstesBillOfLadingPage.enterShipperCompanyName("CCI Thermal");
		myEstesBillOfLadingPage.clickOnShipperAddressBook();
		myEstesBillOfLadingPage.verifyAddressBookPopupIsOpen();
		myEstesBillOfLadingPage.clickFirstAddressOnAddressBook();
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.verifyAddressBookPopupIsClose();
		myEstesBillOfLadingPage.verifyShipperCompanyNameIsAutoFilled();

		//Consignee Address
		myEstesBillOfLadingPage.clickOnConsigneeAddressBook();
		myEstesBillOfLadingPage.verifyAddressBookPopupIsOpen();
		myEstesBillOfLadingPage.clickFirstAddressOnAddressBook();
		testUtil.setHardWait(500);
		myEstesBillOfLadingPage.verifyAddressBookPopupIsClose();
		myEstesBillOfLadingPage.verifyConsigneeCompanyNameIsAutoFilled();

		//Billing Information
		myEstesBillOfLadingPage.selectBillTo("Third Party (add)");   //modified selectBillTo method

		myEstesBillOfLadingPage.verifyThirdPartyAdditionalFieldsIsDisplayed();

		myEstesBillOfLadingPage.clickOnBillToInfoAddressBook();

		myEstesBillOfLadingPage.verifyAddressBookPopupIsOpen();

		myEstesBillOfLadingPage.clickFirstAddressOnAddressBook();

		myEstesBillOfLadingPage.verifyAddressBookPopupIsClose();
		myEstesBillOfLadingPage.verifyBillToCompanyNameIsAutoFilled();

		//COD Remit To
		myEstesBillOfLadingPage.clickOnCODRemitToToggle();
		myEstesBillOfLadingPage.clickOnUseConsigneeInfoAboveCheckbox();

		myEstesBillOfLadingPage.verifyRemitToCompanyNameIsAutoFill();

		myEstesBillOfLadingPage.remitToInfoAddressBook();
		myEstesBillOfLadingPage.clickFirstAddressOnAddressBook();

		myEstesBillOfLadingPage.verifyAddressBookPopupIsClose();
		myEstesBillOfLadingPage.verifyRemitToCompanyNameIsAutoFill();
	}

	/**
	 * Bill of Lading - BOL Source - Verify BOL can be created from Rate Quote app
	 * with a valid Quote ID and quote info. is pulled into the BOL form and data
	 * entered in on the UI displays correctly on the AS400
	 */
	// This is jagacy script and should run locally for now

	@Test(enabled=true, priority= 26)
	public void executeQZ_6630() throws Exception {

		String bolNumber = testUtil.randomString(5);
		String shippingSummarySection[] = {"Name", "Shipper", "Shipper Phone", "Shipper Email", "Consignee", "Consignee Phone", "Consignee Email", "Total Commodities", "Total Shipment Weight"};
		String bolSummarySection[] = {"BOL Date", "Account", "PRO #"};
		String emailAddress = "qatest@estes-express.com";
		String phoneNumber1 = "8048048044";
		String phoneNumber = "(804) 535-1900"; String ext = "123";
		String role = "Shipper"; String accessorial = "Lift-Gate Service (Pickup)";
		String service = "Food"; String piece = "2"; String pieceType = "PALLET"; String weight = "4700";
		String contactName = "GOLDEN CANNOLI";
		String name = "myJagacyVT";
		String terminal = "DEC-VT220";
		String terminal1 = "171";
		String userNme = "peachdo";
		String password = "aug08y14";
		String commandLine = "call xxc870";
		String url = "http://smtpmx-r01.us.dom/webmail/";
		String ltlption = "01";
		String fOption = "89";
		String secondaryFOption = "70";
		String pickupMenuOption = "2";
		String pickupSysOption = "9";
		String pickupSysOption1 = "5";
		String infoCategoryOption = "X";
		String fOption1 = "3";
		String subLine = "Estes Pickup Request Accepted";
		String subLine1 = "Estes Pickup Request Confirmation";
		String todayDate = testUtil.todaysDate();
		String shipInsDesc = "** TIME CRITICAL SELECT SERVICE **";
		String shipInsCode = "GMS";


		//Login to MyEstes
		myEstesHomePage.clickOnMyEstes();
		myEstesHomePage.clickOnLogin();
		myEstesLoginPage.enterUserName(username2);
		myEstesLoginPage.enterPassword(password2);
		myEstesLoginPage.clickOnLoginButton();

		//Ship--> Rate Quote
		myEstesWelcomePage.clickOnShipTab();
		myEstesWelcomePage.clickOnRateQoute();
		rateQuotePage.selectOrDeselectValumeAndTruckload();

		//Enter Rate Quote details
		rateQuotePage.enterContactName("Smoke QATEST");
		rateQuotePage.enterMyRole(role);
		rateQuotePage.enterYourEmail(emailAddress);
		rateQuotePage.enterTerms("Prepaid");
		rateQuotePage.enterPhoneNo(phoneNumber1);
		rateQuotePage.selectTodayDate();
		rateQuotePage.enterOriginZip("23230");
		rateQuotePage.enterDesZip("30307");
		rateQuotePage.enterClass("50");
		rateQuotePage.enterPieces(piece);
		rateQuotePage.enterPieceType(pieceType);
		rateQuotePage.enterTotalWeight(weight);
		rateQuotePage.enterLength("24");
		rateQuotePage.enterWidth("48");
		rateQuotePage.enterHeight("48");
		rateQuotePage.enterDesc("Any");
		rateQuotePage.clickOnSubmitButton();
		testUtil.setHardWait(1000);
		//Get Quote Number
		rateQuotePage.clickOnGetQuoteButton("Volume and Truckload Standard");
		String quoteNumber = rateQuotePage.recordQuoteNumber("Volume and Truckload Standard");
		String qNo = quoteNumber.replaceFirst("S", "V");
		rateQuotePage.clickOnTermsAndConditionsFor("Volume and Truckload Standard");
		rateQuotePage.clickOnResreveShipmentFor("Volume and Truckload Standard");
		rateQuotePage.verifyRequestReceivedMessage();
		rateQuotePage.clickOnCreateBOL();
		testUtil.setHardWait(5000);

		//Create BOL
		myEstesBillOfLadingPage.verifyPageTitle();
		testUtil.setHardWait(1000);
		myEstesBillOfLadingPage.verifyQuoteNumberFieldIsAutoFill();
		myEstesBillOfLadingPage.verifyShipperZipCodeIsAutoFill();
		myEstesBillOfLadingPage.verifyConsigneeZipCodeIsAutoFill();

		//Enter BOL details
		myEstesBillOfLadingPage.enterBOLReferenceNumber(bolNumber);
		myEstesBillOfLadingPage.clickOnAutoAssignPROToggle();
		myEstesBillOfLadingPage.verifyProNumberFieldIsNotDisplayed();
		myEstesBillOfLadingPage.clickOnGuaranteedServiceToggle();
		myEstesBillOfLadingPage.clickOnTermsOfService();
		myEstesBillOfLadingPage.clickOnGeneratePickupRequestToggle();
		myEstesBillOfLadingPage.enterPickupRequestContactName(contactName);
		myEstesBillOfLadingPage.enterPickupRequestEmailAddress(emailAddress);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumber(phoneNumber);
		myEstesBillOfLadingPage.enterPickupRequestPhoneNumberExtension(ext);
		myEstesBillOfLadingPage.clickOnPickupRole();
		testUtil.setHardWait(2000);
		myEstesBillOfLadingPage.selectRolesOnPickupRequest(role);
		myEstesBillOfLadingPage.enterPickupDate();
		myEstesBillOfLadingPage.clickOnPickupService(service);
		myEstesBillOfLadingPage.clickOnPickupAccessorial(accessorial);
		myEstesBillOfLadingPage.clickOnPickupAccessorial("Notify Request");
		myEstesBillOfLadingPage.enterShipperFirstName("abc");
		myEstesBillOfLadingPage.enterConsigneeCompanyName("Estes");
		myEstesBillOfLadingPage.enterConsigneeAddressLine1("99 CRESCENT ST");
		myEstesBillOfLadingPage.selectBillTo(role);
		myEstesBillOfLadingPage.clickAcceptedCheckbox();
		myEstesBillOfLadingPage.clickCompletedCheckbox();
		myEstesBillOfLadingPage.clickOnSubmitBOLAndGeneratePickupRequest();

		//Validating BOL Summary page
		myEstesBillOfLadingPage.validateBOLCreatedMessage();
		myEstesBillOfLadingPage.verifyBOLSummarySection(bolSummarySection);
		myEstesBillOfLadingPage.verifyShippingSummarySection(shippingSummarySection);

		//Validating Pickup Request section
		myEstesBillOfLadingPage.verifyContactNameFromBOLSummary(contactName);
		myEstesBillOfLadingPage.verifyPhoneNumberFromBOLSummary(phoneNumber+" "+ext);
		myEstesBillOfLadingPage.verifyEmailAddressFromBOLSummary(emailAddress);
		myEstesBillOfLadingPage.verifyRoleFromBOLSummary("SHIPPER");
		myEstesBillOfLadingPage.verifyPickupDateFromBOLSummary(todayDate);
		myEstesBillOfLadingPage.verifyAvailableByFromBOLSummary("08:00 AM");
		myEstesBillOfLadingPage.verifyClosesByFromBOLSummary("05:00 PM");
		myEstesBillOfLadingPage.verifyPickupNotificationFromBOLSummary("Rejected");
		myEstesBillOfLadingPage.verifyPickupNotificationFromBOLSummary("Accepted");
		myEstesBillOfLadingPage.verifyPickupNotificationFromBOLSummary("Completed");
		myEstesBillOfLadingPage.verifyServicesFromBOLSummary(service);
		myEstesBillOfLadingPage.verifyPickupAccessorialsFromBOLSummary(accessorial);
		myEstesBillOfLadingPage.verifyPiecesFromBOLSummary(piece);
		myEstesBillOfLadingPage.verifyPiecesTypeFromBOLSummary(pieceType);
		myEstesBillOfLadingPage.verifyWeightFromBOLSummary(weight);
		myEstesBillOfLadingPage.verifyHazmatFromBOLSummary("No");

		//Get Quote details
		String proNumber = myEstesBillOfLadingPage.getProNumber().trim();
		String proNo = proNumber.replace("-", "");
		String reqNumber = myEstesBillOfLadingPage.capturePickupRequestNoFromBOLSummary();
		String req = reqNumber.substring(reqNumber.length()-8, reqNumber.length());

		System.out.println("Request Number: "+req);
		String currentUrl = driver.getCurrentUrl();
		String splitUrl[] = currentUrl.split("/");
		String eControlId = splitUrl[7];
		System.out.println("Pro number: "+proNo);
		System.out.println("eControl ID: "+eControlId);

		//Validating BOL PDF is open in new tab
		myEstesBillOfLadingPage.ClickOnViewBillOfLadingButton();


		//TestUtil.verifyTrue(testUtil.getCountOfOpenTabs()>1);// the pdf file is not opening in the new tab

		myEstesBillOfLadingPage.clickOnCreateNewBolButton();
		myEstesBillOfLadingPage.verifyPageTitle();

		testUtil.switchToWindow(1);
		testUtil.switchToParentWindow();

		SessionVt session = null;
		session = new SessionVt(name, "exlaqa", terminal);

		session.open();




		LoginScreen loginScreen = new LoginScreen(session);
		IBMMainMenuScreen ibmMainMenuScreen = new IBMMainMenuScreen(session);
		MasterMenuScreen masterMenuScreen = new MasterMenuScreen(session);
		FreightBillingMenuScreen freightBillingMenuScreen = new FreightBillingMenuScreen(session);
		SecondaryFreightBillingMenuScreen secondaryFreightBillMenuScreen = new SecondaryFreightBillingMenuScreen(session);
		PickupSystemMenuScreen pickupSystemMenuScreen = new PickupSystemMenuScreen(session);
		PickupSystemRequestQueueScreen pickupSystemRequestQueueScreen = new PickupSystemRequestQueueScreen(session);
		InformationCategoryScreen informationCategoryScreen = new InformationCategoryScreen(session);
		StopInformationDisplayScreen stopInfoDisplayScreen = new StopInformationDisplayScreen(session);

		//Login to exlaqa
		loginScreen.enterUserName(userNme);
		loginScreen.enterPassword(password);
		loginScreen.pressEnterKey();
		loginScreen.pressEnterKey();

		//Enter Command line & Freight Bill details
		ibmMainMenuScreen.enterValueToComandLineField(commandLine);
		masterMenuScreen.enterFreightBillMenuOption(ltlption);

		//FB Options
		freightBillingMenuScreen.enterValueOptionField(fOption);
		freightBillingMenuScreen.enterValueUserField("Test");
		freightBillingMenuScreen.enterTabKey();
		freightBillingMenuScreen.enterTerminalNumber(terminal1);
		freightBillingMenuScreen.pressEnterKey();

		//Secondary FB
		secondaryFreightBillMenuScreen.enterValueOptionField(secondaryFOption);
		secondaryFreightBillMenuScreen.pressEnterKey();

		//Pickup System menu screen
		pickupSystemMenuScreen.enterValueOptionField(pickupMenuOption);
		pickupSystemMenuScreen.pressEnterKey();

		//Pickup System Request Queue Screen
		pickupSystemRequestQueueScreen.enterValueRequestNumber(reqNumber);
		pickupSystemRequestQueueScreen.pressEnterKey();
		testUtil.setHardWait(2000);
		pickupSystemRequestQueueScreen.enterValueOptions(pickupSysOption);
		pickupSystemRequestQueueScreen.pressEnterKey();
		pickupSystemRequestQueueScreen.verifyPickupStatusCode("A");
		pickupSystemRequestQueueScreen.verifyPickupRequestAcceptedMessage();

		//Get start time
		LocalTime time =  LocalTime.now();
		String ctime = time.toString();
		String currentTime[] = ctime.split(":");
		String startTime = currentTime[0]+":"+currentTime[1];

		//Pickup System Request queue Screen
		pickupSystemRequestQueueScreen.enterValueRequestNumber(reqNumber);
		pickupSystemRequestQueueScreen.pressEnterKey();
		testUtil.setHardWait(2000);
		pickupSystemRequestQueueScreen.enterValueOptions(pickupSysOption1);
		pickupSystemRequestQueueScreen.pressEnterKey();

		//Get end time
		LocalTime time1 =  LocalTime.now();
		String ctime1 = time1.toString();
		String currentTime1[] = ctime1.split(":");
		String endTime = currentTime1[0]+":"+currentTime1[1];

		//Information/Stop Info Category Screen
		informationCategoryScreen.enterValueOptions(infoCategoryOption);
		informationCategoryScreen.pressEnterKey();
		stopInfoDisplayScreen.verifyDate();
		testUtil.setHardWait(1000);

		//failing at this step
		stopInfoDisplayScreen.verifyShipperName(contactName);
		stopInfoDisplayScreen.verifyPickupStatusCode("O");

		String messageBody = "We are pleased to inform you that pickup request number 00"+req+" has been accepted and will be"
				+ " scheduled for pickup. Please review the details of the request below.  We will notify you of any changes.";
		String messageBody1 = "This message is to confirm that your shipment for request number 00"+req+" was picked up today. Your PRO number for this shipment";
		String messageBody2 = "Be sure to visit our website at http://www.estes-express.com and log in to My Estes to view detailed tracking information for this shipment. "
				+ "You can even request shipment notifications so you will know where your shipment is every step of the way.";
		String shipmentInst1 = piece+" pieces";
		String shipmentInst2 = weight+" pounds";
		String shipperInfo2 = "99 CRESCENT ST";
		String shipperInfo3 = "CHELSEA, MA 02150-";
		String assistance = "If you need immediate assistance, the servicing terminal can be reached using the contact information below.";
		String terminalName = "Terminal: Billerica";
		String phoneNum = "(978) 262-0191";
		String faxNum = "(978) 262-0852";

		//Login to Round Cube application
		driver.get(url);
		roundCubeLoginPage.enterUserName();
		roundCubeLoginPage.enterPassword();
		roundCubeLoginPage.clickonLogintButton();
		testUtil.setHardWait(1000);
		roundCubeHomePage.verifySubjectLine(subLine, startTime, endTime);
		testUtil.setHardWait(2000);
		testUtil.switchToFrame(0);
		roundCubeHomePage.verifyEmailContent(messageBody);
		roundCubeHomePage.verifyEmailContent(shipmentInst1);
		roundCubeHomePage.verifyEmailContent(shipmentInst2);
		roundCubeHomePage.verifyEmailContent(contactName);
		roundCubeHomePage.verifyEmailContent(shipperInfo2);
		roundCubeHomePage.verifyEmailContent(shipperInfo3);
		roundCubeHomePage.verifyEmailContent(assistance);
		roundCubeHomePage.verifyEmailContent(terminalName);
		roundCubeHomePage.verifyEmailContent(phoneNum);
		roundCubeHomePage.verifyEmailContent(faxNum);
		testUtil.switchToDefaultContent();
		driver.navigate().back();

		if(session != null) {
			System.out.println("Closing existing session");
			session.abort();
			session.close();
		}

		testUtil.setHardWait(4000);
		//Start session
		SessionVt session1 = null;
		session1 = new SessionVt(name, "exlaqa", terminal);
		session1.open();
		testUtil.setHardWait(4000);

		LoginScreen loginScreen1 = new LoginScreen(session1);
		IBMMainMenuScreen ibmMainMenuScreen1 = new IBMMainMenuScreen(session1);
		MasterMenuScreen masterMenuScreen1 = new MasterMenuScreen(session1);
		FreightBillingMenuScreen freightBillingMenuScreen1 = new FreightBillingMenuScreen(session1);
		FreightBillInquiryEnterFieldValuesScreen freightBillInqScreen = new FreightBillInquiryEnterFieldValuesScreen(session1);
		EBolConfirmationScreen eBolConfirmationScreen = new EBolConfirmationScreen(session1);
		FreightBillInquiryUpdateFirstScreen freightBillInqUpdateFirstScreen = new FreightBillInquiryUpdateFirstScreen(session1);
		UpdateScreen3 updateScreen3 = new UpdateScreen3(session1);


		loginScreen1.enterUserName(userNme);
		loginScreen1.enterPassword(password);
		loginScreen1.pressEnterKey();
		loginScreen1.pressEnterKey();
		Thread.sleep(2000);



		ibmMainMenuScreen1.enterValueToComandLineField(commandLine);
		masterMenuScreen1.enterFreightBillMenuOption(ltlption);

		freightBillingMenuScreen1.enterValueOptionField(fOption1);
		freightBillingMenuScreen1.enterValueUserField("Test");
		freightBillingMenuScreen1.enterTabKey();
		freightBillingMenuScreen1.enterTerminalNumber(terminal1);
		freightBillingMenuScreen1.pressEnterKey();

		freightBillInqScreen.enterValueFreightBill(proNo);
		freightBillInqScreen.enterValueEControlID("0000000"+eControlId);
		freightBillInqScreen.pressEnterKey();

		//Get start time
		LocalTime time2 =  LocalTime.now();
		String ctime2 = time2.toString();
		String currentTime2[] = ctime2.split(":");
		String startTime1 = currentTime2[0]+":"+currentTime2[1];
		testUtil.setHardWait(2000);
		eBolConfirmationScreen.verifyEControlBillID(eControlId);
		eBolConfirmationScreen.pressF10Key();

		//Get start time
		LocalTime time3 =  LocalTime.now();
		String ctime3 = time3.toString();
		String currentTime3[] = ctime3.split(":");
		String endTime1 = currentTime3[0]+":"+currentTime3[1];

		freightBillInqUpdateFirstScreen.verifyQuoteNumber(qNo);
		freightBillInqUpdateFirstScreen.verifyPieceNumber(piece);
		freightBillInqUpdateFirstScreen.verifyTerms("PPD");
		freightBillInqUpdateFirstScreen.verifyWeight(weight);
		//freightBillInqUpdateFirstScreen.verifyConsName("ESTES");
		//freightBillInqUpdateFirstScreen.verifyShipperName(contactName);
		Thread.sleep(1000);
		freightBillInqUpdateFirstScreen.pressEnterKey();
		freightBillInqUpdateFirstScreen.enterTSValue("1");
		freightBillInqUpdateFirstScreen.enterPoNumberValue(testUtil.randomString(5));
		freightBillInqUpdateFirstScreen.enterPuDrValue("99999999");
		freightBillInqUpdateFirstScreen.enterCubicFtValue("1");
		freightBillInqUpdateFirstScreen.pressEnterKey();
		freightBillInqUpdateFirstScreen.pressEnterKey();
		freightBillInqUpdateFirstScreen.pressEnterKey();

		updateScreen3.verifyShipperInsCode(shipInsCode);
		updateScreen3.verifyShipperInsDescription(shipInsDesc);
		freightBillInqUpdateFirstScreen.pressEnterKey();
		updateScreen3.verifyLastFreightBillUpdateMessage();

		session.abort();
		session.close();
		driver.navigate().refresh();
		roundCubeHomePage.verifySubjectLine(subLine1, startTime1, endTime1);
		testUtil.setHardWait(2000);
		testUtil.switchToFrame(0);
		roundCubeHomePage.verifyEmailContent(messageBody1);
		roundCubeHomePage.verifyEmailContent(messageBody2);
		roundCubeHomePage.verifyEmailContent(assistance);
		roundCubeHomePage.verifyEmailContent(terminalName);
		roundCubeHomePage.verifyEmailContent(phoneNum);
		roundCubeHomePage.verifyEmailContent(faxNum);
		testUtil.switchToDefaultContent();

	}


	/**
	 * @author lemmoju, qcuthbert (9/12/22)
	 *
	 * BOL API Verify when the JSON request is submitted & the cod.(info) are provided but cod.country value is not USA then an error message is returned
	 * (The COD Remit Country is not a valid value. Please check the Country entry and resubmit your request.)
	 * @throws Exception
	 */

	@Test(enabled=true, priority= 27)
	public void executeQZ_11923() throws Exception {

		/*Steps 1 - 10 ==> Says to go throug PostMan to verify response from API POST request, but with Java, I am able to automate this test with
		RestAssured class to run this test and verify response from api call.
		*/

		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String userName = "testnat";
		String password = "testnat";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(userName, password).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"    \"COD\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"\"amount\": \"375.99\",\n" +
						"\"terms\": \"Collect\",\n" +
						"\"customerCheckAcceptable\": true,\n" +
						"\"remitTo\": {\n" +
						"\"name\": \"Dog Beds by Stella\",\n" +
						"\"address1\": \"121 S. Cliffwood Ave.\",\n" +
						"\"address2\": \"Suite 55\",\n" +
						"\"city\": \"Alberta Beach\",\n" +
						"\"stateProvince\": \"AB\",\n" +
						"\"postalCode\": \"T0E0A1\",\n" +
						"\"country\": \"CAN\"\n" +
						"}\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")

				.when().post(RestAssured.baseURI).then().log().all().extract().response();
		List<String> jsonResponseForInformation = response.jsonPath().getList("messageStatus.information.type");
		Map<String, String> jsonResponseMessageStatus = response.jsonPath().getMap("messageStatus");


		/*Step 11/12
		 * Validate that below messageStatus is visible and messageStatus.information.type: *EBG0040* --> is visible, with -->
		 * *message: The COD Remit Country is not a valid value. Please check the Country entry and resubmit your request.*
		{
	    "messageStatus": {
	        "status": "FAIL",
	        "code": "10000001",
	        "message": "Transaction failed",
	        "resolution": "See message list for possible solutions",
	        "information": [
	            {
	                "code": "EBG0040",
	                "message": "The COD Remit Country is not a valid value. Please check the Country entry and resubmit your request."
	            }]}}
	*/
		String[] keys = {"status", "code", "message", "resolution"};
		String[] values = {"FAIL", "10000001", "Transaction failed", "See message list for possible solutions"};

		boolean identified = true;

		for(int j = 0; j < keys.length; j++) {
			if(!jsonResponseMessageStatus.get(keys[j]).equals(values[j])) {
				identified = false;
				break;
			}
			assertTrue(identified);
		}


		for(int i = 0; i < jsonResponseForInformation.size(); i++) {
			try {
				assertTrue(jsonResponseForInformation.get(i) == "EBG0133");
			}catch(AssertionError e) {
				continue;
			}
			assertTrue(false);
		}

	}




	/**
	 * @author lemmoju, qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & payment.terms is Third Party then a valid response is received & the PDF displays Third Party for payment.terms
	 * @throws Exception
	 */

	@Test(enabled=true, priority= 28)
	public void executeQZ_11914() throws Exception {

		/*Steps 1 - 10 ==> Says to go throug PostMan to verify response from API POST request, but with Java, I am able to automate this test with
		RestAssured class to run this test and verify response from api call.
		*/

		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String userName = "testadmin";
		String password = "test2001";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(userName, password).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third party\",\n" +
						"        \"specialInstructions\": \"CUSTTEAM4-1113\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": true,\n" +
						"        \"includeShippingLabels\": true,\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": 10,\n" +
						"            \"position\": 1\n" +
						"        }\n" +
						"    },\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"SID09232021SID09232021\",\n" +
						"        \"masterBol\": \"MA03082022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL10152021-1\",\n" +
						"            \"BL99744565-2\",\n" +
						"            \"BOL3033-3\",\n" +
						"            \"BOL4044-4\",\n" +
						"            \"BOL5555-5\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"PO03082022-1\",\n" +
						"                \"pieces\": \"3\",\n" +
						"                \"weight\": \"1100\",\n" +
						"                \"palletized\": true,\n" +
						"                \"additionalShipperInfo\": \"CUSTTEAM4-900 Freight additionalShipperInfo First po\"\n" +
						"            },\n" +
						"            {\n" +
						"                \"number\": \"PO03082022-2\",\n" +
						"                \"pieces\": 1,\n" +
						"                \"weight\": 1300,\n" +
						"                \"palletized\": true,\n" +
						"                \"additionalShipperInfo\": \"CUSTTEAM4-900 Freight additionalShipperInfo Second po\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"Customer Reference Id 1\",\n" +
						"                \"value\": \"CRID3452-01\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Third parTY\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"SKD\",\n" +
						"                \"weight\": 2400,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 48,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 2400,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"IDL\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"56.71\",\n" +
						"            \"terms\": \"Prepaid\",\n" +
						"            \"customerCheckAcceptable\": true,\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"Dog Beds by Stella\",\n" +
						"                \"address1\": \"121 S. Cliffwood Ave.\",\n" +
						"                \"address2\": \"Suite 55\",\n" +
						"                \"city\": \"Los Angeles\",\n" +
						"                \"stateProvince\": \"CA\",\n" +
						"                \"postalCode\": \"90001\",\n" +
						"                \"country\": \"USA\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B064700\",\n" +
						"        \"locationId\": \"Building 3\",\n" +
						"        \"name\": \"Home Depot MDO #5885\",\n" +
						"        \"address1\": \"825 Arthur Avenue\",\n" +
						"        \"address2\": \" \",\n" +
						"        \"city\": \"Elk Grove Village\",\n" +
						"        \"stateProvince\": \"IL\",\n" +
						"        \"postalCode\": \"60007\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045038175\",\n" +
						"            \"phoneExt\": \"1357924680\",\n" +
						"            \"name\": \"Shipper FName\",\n" +
						"            \"email\": \"Shipper@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"B071818\",\n" +
						"        \"locationId\": \"6106\",\n" +
						"        \"name\": \"Home Depot #6106\",\n" +
						"        \"address1\": \"4450 W University DR\",\n" +
						"        \"address2\": \"BOL API CUSTTEAM4-137 \",\n" +
						"        \"city\": \"PROSPER\",\n" +
						"        \"stateProvince\": \"TX\",\n" +
						"        \"postalCode\": \"75078\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"7721231234\",\n" +
						"            \"phoneExt\": \"9876543210\",\n" +
						"            \"name\": \"testNat Account\",\n" +
						"            \"email\": \"Consignee@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"5001120\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AGFA CORP 5753\",\n" +
						"        \"address1\": \"% NVISION GLOBAL\",\n" +
						"        \"address2\": \"1900 BRANNAN RD STE 100\",\n" +
						"        \"city\": \"MCDONOUGH\",\n" +
						"        \"stateProvince\": \"GA\",\n" +
						"        \"postalCode\": \"30252\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"2224441234\",\n" +
						"            \"phoneExt\": \"246801357\",\n" +
						"            \"name\": \"Shane, Ricky\",\n" +
						"            \"email\": \"BillTo@yahoo.com\"\n" +
						"        }\n" +
						"    }\n" +
						"}").when().post(RestAssured.baseURI).then().log().all().extract().response();

		//Step 11- 12 ==> Sent api call to URI and store the pro# and shipmentConfirmationNumber

		Map<String, String> referenceNumbersResponse = response.getBody().jsonPath().getMap("referenceNumbers");
		Map<String, String> imagesResponse = response.getBody().jsonPath().getMap("images");

		//Step 13: Hold the control key and select the images.bol URL
		String proNum = referenceNumbersResponse.get("pro").toString();
		String shipmentConfirmationNum =referenceNumbersResponse.get("shipmentConfirmationNumber").toString();
		String bolUrlString = imagesResponse.get("bol").toString();

		URL bolURL = new URL(bolUrlString);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());
		/*Step 14: Check the *Billing Terms* validate THIRD PARTY displays next  to the checked box
		 * Verified: Billing Terms = THIRD PARTY
		 */
		Assert.assertTrue(bolText.contains("Billing Terms: THIRD PARTY"));
	}




	/**
	 * @author lemmoju, qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & the referenceNumbers.po.weight for multiple referenceNumbers.po.number does not equal
	 * shipmentTotals.netWeight then an error message is displayed (PO Total Weights are not match with Shipment Net xxx)
	 * @throws Exception
	 */

	@Test(enabled=true, priority= 29)
	public void executeQZ_11928() throws Exception{

		/*Steps 1 - 10 ==> Says to go throug PostMan to verify response from API POST request, but with Java, I am able to automate this test with
		RestAssured class to run this test and verify response from api call.
		*/

		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String userName = "smokelocal";
		String password = "smokelocal";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(userName, password).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Shipper\",\n" +
						"    \"specialInstructions\": \"Special Inst CUSTTEAM\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": true,\n" +
						"    \"includeShippingLabels\": true,\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": 10,\n" +
						"      \"position\": 3\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID09232021SID09232021\",\n" +
						"    \"masterBol\": \"MBOL0MBOL02222022\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL10152021-1\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO2022111-1\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 101,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo First po\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO2022222-2\",\n" +
						"        \"pieces\": 2,\n" +
						"        \"weight\": 800,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo Second po\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO2022222-3\",\n" +
						"        \"pieces\": \"1\",\n" +
						"        \"weight\": \"500\",\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo Third po\"\n" +
						"      }\n" +
						"       ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Third Party\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1400,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": 1500,\n" +
						"    \"netWeight\":1400,\n" +
						"    \"handlingUnits\": 4\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053 Origin Acct 30 ch Extra Data for Label Display\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51 30 chara Address 1 Extra Data for Label Display\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER 30 charac Address 2 Extra Data for Label Display\",\n" +
						"    \"city\": \"Nags head\",\n" +
						"    \"stateProvince\": \"nc\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045038175\",\n" +
						"      \"phoneExt\": \"1357924680\",\n" +
						"      \"name\": \"Mr. Shipper Contact 30 characters, Extra Data for Label Display\",\n" +
						"      \"email\": \"Shipper@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"9590098\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BAT GROUP 30 charac CONSIGNEE, Extra Data for Label Display\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300, 30 chars, Extra Data for Label Display\",\n" +
						"    \"address2\": \"Address line 2, also up 30 char Extra Data for Label Display\",\n" +
						"    \"city\": \"hamilton\",\n" +
						"    \"stateProvince\": \"on\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"7721231234\",\n" +
						"      \"phoneExt\": \"9876543210\",\n" +
						"      \"name\": \"Mr. Destination Contact 30 chars, Extra Data for Label Display\",\n" +
						"      \"email\": \"Consignee@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5001120\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"AGFA CORP 5753\",\n" +
						"    \"address1\": \"NVISION GLOBAL\",\n" +
						"    \"address2\": \"1900 BRANNAN RD STE 100\",\n" +
						"    \"city\": \"MCDONOUGH\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30252\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"246801357\",\n" +
						"      \"name\": \"Bill To Contact Name\",\n" +
						"      \"email\": \"BillToEmail@yahoo.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\",\n" +
						"    \"name\": \"Customer Broker Name\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8004331209\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Marge R. Pinkerberry\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }\n" +
						"}").when().post(RestAssured.baseURI).then().log().all().extract().response();

		/*Step 11: Click the Send button, obtain 200 response and validate below details.
		 * {
		 * "messageStatus": {
		 * "status": "FAIL",
		 * "code": "10000001",
		 * "message": "Transaction failed",
		 * "resolution": "See message list for possible solutions",
		 * "information": [
            {
                "type": "EBG0125",
                "message": "PO Total Weights are not match with Shipment Net Weight. Please provide correct PO Weights/Shipment Net Weight."
            }]}}
		 */
		String messageCode = response.jsonPath().getString("messageStatus.information[0].code");
		String message = response.jsonPath().getString("messageStatus.information[0].message");

		/*
		 * Step 12: Validate the specific error message is returned:
		 * code: *EBG0125*
		 * message: PO Total Weights are not match with Shipment Net Weight. Please provide correct PO Weights/Shipment Net Weight.*
		 */

		Assert.assertEquals(messageCode, "EBG0125");
		Assert.assertEquals(message, "PO Total Weights are not match with Shipment Net Weight. Please provide correct PO Weights/Shipment Net Weight.");


	}



	/**
	 * @author lemmoju, qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & the referenceNumbers.po.pieces total value for multiple referenceNumbers.po.number
	 * do not equal shipmentTotals.handlingUnits then an error message is displayed (PO Total Pieces are not match with Ship x)
	 * @throws Exception
	 */

	@Test(enabled=true, priority= 30)
	public void executeQZ_11929() throws Exception{

		/*Steps 1 - 10 ==> Says to go throug PostMan to verify response from API POST request, but with Java, I am able to automate this test with
		RestAssured class to run this test and verify response from api call.
		*/

		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String userName = "smokelocal";
		String password = "smokelocal";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(userName, password).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Shipper\",\n" +
						"    \"specialInstructions\": \"Special Inst CUSTTEAM\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": true,\n" +
						"    \"includeShippingLabels\": true,\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": 10,\n" +
						"      \"position\": 3\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID09232021SID09232021\",\n" +
						"    \"masterBol\": \"MBOL0MBOL02222022\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL10152021-1\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO2022111-1\",\n" +
						"        \"pieces\": 7,\n" +
						"        \"weight\": 100,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo First po\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO2022222-2\",\n" +
						"        \"pieces\": 4,\n" +
						"        \"weight\": 800,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo Second po\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO2022222-3\",\n" +
						"        \"pieces\": \"3\",\n" +
						"        \"weight\": \"500\",\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"CUSTTEAM4 Freight additionalShipperInfo Third po\"\n" +
						"      }\n" +
						"       ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Third Party\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1400,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": 1500,\n" +
						"    \"netWeight\":1400,\n" +
						"    \"handlingUnits\": 4\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053 Origin Acct 30 ch Extra Data for Label Display\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51 30 chara Address 1 Extra Data for Label Display\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER 30 charac Address 2 Extra Data for Label Display\",\n" +
						"    \"city\": \"Nags head\",\n" +
						"    \"stateProvince\": \"nc\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045038175\",\n" +
						"      \"phoneExt\": \"1357924680\",\n" +
						"      \"name\": \"Mr. Shipper Contact 30 characters, Extra Data for Label Display\",\n" +
						"      \"email\": \"Shipper@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"9590098\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BAT GROUP 30 charac CONSIGNEE, Extra Data for Label Display\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300, 30 chars, Extra Data for Label Display\",\n" +
						"    \"address2\": \"Address line 2, also up 30 char Extra Data for Label Display\",\n" +
						"    \"city\": \"hamilton\",\n" +
						"    \"stateProvince\": \"on\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"7721231234\",\n" +
						"      \"phoneExt\": \"9876543210\",\n" +
						"      \"name\": \"Mr. Destination Contact 30 chars, Extra Data for Label Display\",\n" +
						"      \"email\": \"Consignee@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5001120\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"AGFA CORP 5753\",\n" +
						"    \"address1\": \"NVISION GLOBAL\",\n" +
						"    \"address2\": \"1900 BRANNAN RD STE 100\",\n" +
						"    \"city\": \"MCDONOUGH\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30252\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"246801357\",\n" +
						"      \"name\": \"Bill To Contact Name\",\n" +
						"      \"email\": \"BillToEmail@yahoo.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\",\n" +
						"    \"name\": \"Customer Broker Name\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8004331209\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Marge R. Pinkerberry\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }\n" +
						"}").when().post(RestAssured.baseURI).then().log().all().extract().response();

		/*Step 11: Click the Send button, obtain 200 response and validate below details.
		 * {
		 * "messageStatus": {
		 * "status": "FAIL",
		 * "code": "10000001",
		 * "message": "Transaction failed",
		 *  "resolution": "See message list for possible solutions",
		 *  "information": [
            {
                "code": "EBG0124",
                "message": "PO Total Pieces are not match with Shipment Handling Units. Please provide correct PO pieces/Shipment Handling Units."
            }]}}
		 */
		List <String> info = response.jsonPath().getList("messageStatus.information");
		if(info.size() > 1) {
			assertTrue(false);
		}

		String messageCode = response.jsonPath().getString("messageStatus.information[0].code");
		String message = response.jsonPath().getString("messageStatus.information[0].message");

		/*
		 * Step 12: Validate the specific error message is returned:
		 * code: *EBG0125*
		 * message: PO Total Weights are not match with Shipment Net Weight. Please provide correct PO Weights/Shipment Net Weight.*
		 */

		Assert.assertEquals(messageCode, "EBG0124");
		Assert.assertEquals(message, "PO Total Pieces are not match with Shipment Handling Units. Please provide correct PO pieces/Shipment Handling Units.");


	}

	/**
	 * @author lemmoju, qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & payment.terms is Third Party then a valid response is received & the PDF displays Third Party for payment.terms
	 * @throws Exception
	 */

	@Test(enabled=true, priority= 31)
	public void executeQZ_11930() throws Exception {

		/*BOL PDF Verify when the JSON request is submitted & multi referenceNumbers.po.number only are provided then a valid response is received &
		 * the PDF displays the correct info for each referenceNumbers.additionalReferences.name & rN.aR.n.value (no VICS grid)
		 */

		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String userName = "testadmin";
		String password = "test2001";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(userName, password).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						" {\n" +
						"        \"number\": \"PO03082022-1\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-2\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-3\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-4\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-5\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO03082022-6\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-7\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-8\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO03082022-9\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-10\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO03082022-11\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-12\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-13\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-14\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO03082022-15\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}").when().post(RestAssured.baseURI).then().log().all().extract().response();

		//Step 11: Press Enter
		//Step 12: Record the *pro* number and the *shipmentConfirmationNumber*
		String proNum = response.jsonPath().getString("referenceNumbers.pro");
		String shipConfirmNum = response.jsonPath().getString("referenceNumbers.shipmentConfirmationNumber");

		/*
		 * Step 13/14 Check the *References* section under the PRO# on page one and validate all PO #(s) are listed
		 */

		String bolUrlString = response.jsonPath().getString("images.bol");
		URL bolURL = new URL(bolUrlString);
		PDFParser parseBol = null;
		String bolText = null;

		String individualPages = null;

		try(BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream())) {
			parseBol = new PDFParser(bolContents);
			parseBol.parse();
			bolText = new PDFTextStripper().getText(parseBol.getPDDocument());
		}catch(Exception e) {
			e.printStackTrace();
		}

		/*Step 14: Check the *Billing Terms* validate THIRD PARTY displays next  to the checked box
		 * Verified: Billing Terms = THIRD PARTY
		 */
		Assert.assertTrue(bolText.contains("PO#: PO03082022-1, PO03082022-2, PO03082022-3, PO03082022-4,\r\n"
				+ "PO03082022-5, PO03082022-6, PO03082022-7, PO03082022-8,\r\n"
				+ "PO03082022-9, PO03082022-10, PO03082022-11, PO03082022-12,\r\n"
				+ "PO03082022-13, PO03082022-14, PO03082022-15"));

		/*
		 * Step 15: Scroll down to page 2 and validate that VICS grid is not displayed.
		 * 'Customer Order Number' is a unique value that is specifically on a VICS grid.
		 */

		Assert.assertFalse(bolText.contains("Customer Order Number"));


	}


	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_AM & OVR/Over
	 * dimension/excessive length are added & commodities.handlingUnits.length => 12.0'(144")
	 * then an error message is displayed
	 */

	@Test(enabled = true, priority = 32)
	public void executeQZ_12110() throws Exception{
		RestAssured.baseURI = "https://uat-cloudapi.estes-express.com/v1/bol";
		String apiKey = "t2qCkXKQpcirjGUQ3u1VdLuCBgBnzpsZ";
		String bolFileName = "./testBol.pdf";
		PDFParser parseBol;
		String bolText = null;
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String token = testUtil.generateAuthenticationToken(username2, password2, apiKey);

		Response response = RestAssured.given().auth().oauth2(token)
				.header("apikey", apiKey)
				.header("Content-Type", "application/json")
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"letter\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 144,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 ")
				.body("messageStatus.status",equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0164"))
				.body("messageStatus.information[0].message", equalTo("Your handling Unit dimension of (144L x 48W x 48H) exceeds the maximum of (143L x 96W x 96H). Call 800 645-3952 or email timecritical@estes-express.com for assistance."))
				.extract().response();

	}


	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_PM is
	 * added & any of the commodities.handlingUnits.weight > 10,000 lbs then an error message
	 * is displayed (Your handling Unit Weight of (10001) exceeds xxx)
	 */

	@Test(enabled = true, priority = 33)
	public void executeQZ_12109() throws Exception{
		RestAssured.baseURI = "https://uat-cloudapi.estes-express.com/v1/bol";
		String apiKey = "t2qCkXKQpcirjGUQ3u1VdLuCBgBnzpsZ";
		String bolFileName = "./testBol.pdf";
		PDFParser parseBol;
		String bolText = null;
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String token = testUtil.generateAuthenticationToken(username2, password2, apiKey);

		Response response = RestAssured.given().auth().oauth2(token)
				.header("apikey", apiKey)
				.header("Content-Type", "application/json")
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 3,\n" +
						"        \"type\": \"PAT\",\n" +
						"        \"weight\": 10001,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 89,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_PM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"456\",\n" +
						"      \"name\": \"Mr. Destination\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 ")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0162"))
				.body("messageStatus.information[0].message", equalTo("Your handling Unit Weight of (10001) exceeds the maximum of 10000. Call 800-645-3952  or email timecritical@estes-express.com for assistance."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes
	 * SRT is added & accessorials.sortAndSegregateDetails.pieces is provided
	 * But != the total for all commodities.lineItems.pieces for the shipment
	 * then an error message is displayed (xxx)
	 */

	@Test(enabled = true, priority = 34)
	public void executeQZ_12118() throws Exception{
		RestAssured.baseURI = "https://uat-cloudapi.estes-express.com/v1/bol";
		String apiKey = "t2qCkXKQpcirjGUQ3u1VdLuCBgBnzpsZ";
		String bolFileName = "./testBol.pdf";
		PDFParser parseBol;
		String bolText = null;
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String token = testUtil.generateAuthenticationToken(username2, password2, apiKey);

		Response response = RestAssured.given().auth().oauth2(token)
				.header("apikey", apiKey)
				.header("Content-Type", "application/json")
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"SRT\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"7\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 ")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0141"))
				.body("messageStatus.information[0].message", equalTo("Sort Quantity must be equal to the total of Commodities Line items pieces count."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/23/22)
	 *
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_AM is
	 * added but the lane does NOT support the requested service & support by 5PM then
	 * STANDARD TIME CRITICAL SERVICE FEE is added to the Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 35)
	public void executeQZ_12111() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"letter\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"McLean\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"22101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("GUARANTEED LTL STD SERVICE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & multiple referenceNumbers.po.number +pieces
	 * +weight +palletized +aSI are provided then a valid response is received & the PDF displays the VICs
	 * grid with the correct info after commodities on page 2+
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 36)
	public void executeQZ_11934() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Shipper\",\n" +
						"    \"specialInstructions\": \"BEGIN Special Instructions Section  (up to 500 char  Accessorial descriptions and Additional ESTES FEES) If the Accessorials  the Special Instructions will not fit in the spaceShow as many of the Accessorials that will fit (they are deemed more important for page 1) and move the balance of Accessorials and any Special Instructions to the next page Show CONTINUED ON NEXT PAGE so the user knows there is more for that section (have to leave room for this).  CustTeam4 PI 4.4 BOL PDF 2 Plus Pages.\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": true,\n" +
						"    \"includeShippingLabels\": true,\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": 6,\n" +
						"      \"position\": 3\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID9743985\",\n" +
						"    \"masterBol\": \"MBOLorBOLNUMBER\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL10202021\",\n" +
						"      \"BOL20211020\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"20220310-1\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 400,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"20220310-2\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 300,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"20220310-3\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 200,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"Freight must always stay upright CustTeam4-900\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"20220310-4\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 100,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4- Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"20220310-5\",\n" +
						"        \"pieces\": 2,\n" +
						"        \"weight\": 200,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"Freight must always stay upright CustTeam4-900 Freight must always stay upright CustTeam4-900Freight must always stay upright CustTeam4-900\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"20220310-6\",\n" +
						"        \"pieces\": 4,\n" +
						"        \"weight\": 800,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"NONE\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"Customer Reference Id\",\n" +
						"        \"value\": \"CRID3452-01\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"id\": \"unit1\",\n" +
						"        \"count\": 10,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"tareWeight\": 75,\n" +
						"        \"weight\": 2075,\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": false,\n" +
						"        \"lineItems\": [\n" +
						"            {\n" +
						"                \"handlingUnitId\": \"unit1\",\n" +
						"                \"description\": \"Small frameless mirrors\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"pieces\": 10,\n" +
						"                \"packagingType\": \"DRM\",\n" +
						"                \"classification\": \"55\",\n" +
						"                \"nmfc\": \"86900\",\n" +
						"                \"nmfcSub\": \"3\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": 2075,\n" +
						"    \"netWeight\": 2000,\n" +
						"    \"handlingUnits\": 10,\n" +
						"    \"cubicFeet\": 640\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"      \"GTD_NOON\",\n" +
						"      \"Mark\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"1\",\n" +
						"      \"terms\": \"Prepaid\",\n" +
						"      \"customerCheckAcceptable\": true,\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"CustTeam4-\",\n" +
						"        \"address1\": \"121 S. Cliffwood Ave.\",\n" +
						"        \"address2\": \"Suite 55\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23233\",\n" +
						"        \"country\": \"USA\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": 10\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"Church\",\n" +
						"      \"destination\": \"Secure\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B064700\",\n" +
						"    \"locationId\": \"Building 3\",\n" +
						"    \"name\": \"Home Depot MDO 5885\",\n" +
						"    \"address1\": \"825 Arthur Avenue\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Elk Grove Village\",\n" +
						"    \"stateProvince\": \"IL\",\n" +
						"    \"postalCode\": \"60007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045038175\",\n" +
						"      \"phoneExt\": \"1357924680\",\n" +
						"      \"name\": \"Shipper FName\",\n" +
						"      \"email\": \"Shipper@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B071818\",\n" +
						"    \"locationId\": \"6106\",\n" +
						"    \"name\": \"Home Depot 6106\",\n" +
						"    \"address1\": \"4450 W University DR\",\n" +
						"    \"address2\": \"BOL API CUSTTEAM4-137 \",\n" +
						"    \"city\": \"PROSPER\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75078\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"7721231234\",\n" +
						"      \"phoneExt\": \"9876543210\",\n" +
						"      \"name\": \"testNat Account\",\n" +
						"      \"email\": \"Consignee@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"Texas Office\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"246801357\",\n" +
						"      \"name\": \"Shane, Ricky\",\n" +
						"      \"email\": \"BillTo@yahoo.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\",  \n" +
						"    \"name\": \"Closets Closets Closets\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8004331209\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Marge R. Pinkerberry\",\n" +
						"      \"email\": \"mrp@closets.com\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertFalse(bolText.contains("PO #")); // validates PO# field isn't present in reference numbers
		Assert.assertTrue(bolText.contains("Customer Order Number")); // validates VICs grid is present

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes SRT is added &
	 * *.pieces is provided & = total commodity pieces then a valid response is received &
	 * the PDF displays SORT AND SEGREGATE CHARGE descr on the Special Instructions line
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 37)
	public void executeQZ_12120() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"SRT\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"12\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("SORT AND SEGREGATE CHARGE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_NOON & OVR/Over
	 * dimension/excessive length are added & commodities.handlingUnits. (length & width < 8'(96”)
	 * then the PDF does NOT display over length accessorial
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 38)
	public void executeQZ_12122() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"5\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 95,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\",\n" +
						"        \"OVR\",\n" +
						"        \"IDL\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}\n" +
						"\n" +
						"  \"bol\": {\n" +
						"    \"date\": \"2022-05-26T10:00:00.000\",\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"5\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\",\n" +
						"        \"OVR\",\n" +
						"        \"IDL\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertFalse(bolText.contains("OVERLENGTH CHARGE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_AM & OVR/Over
	 * dimension are added & 8'(96”) => commodities.handlingUnits.length < 12.0'(144") then the
	 * PDF displays OVERLENGTH CHARGE 8.00' - 11.99' + TC FEES
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 39)
	public void executeQZ_12123() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"5\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"po Number\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 143,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\",\n" +
						"        \"OVR\",\n" +
						"        \"IDL\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("GUARANTEED LTL STD SVC - 10 AM"));
		Assert.assertTrue(bolText.contains("OVERLENGTH CHARGE 8.00' - 11.99"));
		Assert.assertTrue(bolText.contains("GUARANTEED")); // need to check for these two parts individually due to line break
		Assert.assertTrue(bolText.contains("OVERLENGTH 8-11.99 FEET"));
	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes OVR/Over dimension &
	 * IDL are added &  any 12'(144”) => commodities.handlingUnits.length < 16.0'(192) then the PDF
	 * displays OVERLENGTH CHARGE 12.0' THRU 15.9' & INSIDE DELIVERY CHGS
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 40)
	public void executeQZ_12127() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"5\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"po Number\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 191,\n" +
						"        \"width\": 95,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"OVR\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("OVERLENGTH CHARGE-12.0' THRU 15.9"));
		Assert.assertTrue(bolText.contains("INSIDE DELIVERY CHGS"));
	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when a match to the City/State (Atlanta/VA/23228) address is not
	 * found in FBP074 then use the Zip and State only & if found set the City to the
	 * preferred City found in the points file (AMZSTS=P - HENRICO) & display on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 41)
	public void executeQZ_12129() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"6\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"MNC\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\":\"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23228\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HENRICO, VA, 23228, US")); // NOTE: we can test that this text is present but not that it is in the correct position
		System.out.print(bolText);
	}

	/**
	 * @author qcuthbert (9/14/22)
	 * Verify BOL API response displayed 201 Created status code and body with bol and shippingLablels Base64
	 * string then user is able to download images when the BOL request submitted with images.includeBol = true
	 * & images.includeShippingLabels = true
	 */

	@Test(enabled = true, priority = 42)
	public void executeQZ_12145() throws Exception{
		RestAssured.baseURI = "https://uat-cloudapi.estes-express.com/v1/bol"; // AWS endpoint
		String apiKey = "t2qCkXKQpcirjGUQ3u1VdLuCBgBnzpsZ";
		String bolFileName = "./testBol.pdf";
		PDFParser parseBol;
		String bolText = null;
		String labelFileName = "./testLabel.pdf";
		PDFParser parseLabel;
		String labelText = null;
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String token = testUtil.generateAuthenticationToken(username2, password2, apiKey);

		Response response = RestAssured.given().auth().oauth2(token)
				.header("apikey", apiKey)
				.header("Content-Type", "application/json")
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"True\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"avery\",\n" +
						"      \"quantity\": \"3\",\n" +
						"      \"position\": \"2\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(201).statusLine("HTTP/1.1 201 ")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String label = response.jsonPath().getString("images.shippingLabels");
		String pro = response.jsonPath().getString("referenceNumbers.pro");
		String eControl = response.jsonPath().getString("referenceNumbers.shipmentConfirmationNumber");

		// Instead of using an online Base64 converter like the test steps specify I am using a helper method
		// to directly convert the Base64 response to pdf files

		File bolFile = testUtil.base64ToPdf(bol, bolFileName);
		File labelFile = testUtil.base64ToPdf(label, labelFileName);

		try(FileInputStream bolContents = new FileInputStream(bolFile)) {
			parseBol = new PDFParser(bolContents);
			parseBol.parse();
			bolText = new PDFTextStripper().getText(parseBol.getPDDocument());
		}catch(Exception e) {
			e.printStackTrace();
		}

		try(FileInputStream labelContents = new FileInputStream(labelFile)) {
			parseLabel = new PDFParser(labelContents);
			parseLabel.parse();
			labelText = new PDFTextStripper().getText(parseLabel.getPDDocument());
		}catch(Exception e) {
			e.printStackTrace();
		}

		Assert.assertTrue(bolText.contains("BILL OF LADING"));
		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains(eControl));

		boolean wasDeleted = bolFile.delete();

		if (!wasDeleted) {
			System.out.println("File was not deleted");
		}

		Assert.assertTrue(labelText.contains(pro));
		Assert.assertTrue(labelText.contains(eControl));

		wasDeleted = labelFile.delete();

		if (!wasDeleted) {
			System.out.println("File was not deleted");
		}
	}

	/**
	 * @author qcuthbert (9/14/22)
	 * Verify BOL API response displayed 201 Created status code and body without bol and
	 * shippingLabels Base64 string when the BOL request submitted with images.includeBol
	 * = false or empty & images.includeShippingLabels = false or empty
	 */

	@Test(enabled = true, priority = 43)
	public void executeQZ_12147() throws Exception{
		RestAssured.baseURI = "https://uat-cloudapi.estes-express.com/v1/bol"; // AWS endpoint
		String apiKey = "t2qCkXKQpcirjGUQ3u1VdLuCBgBnzpsZ";
		String bolFileName = "./testBol.pdf";
		PDFParser parseBol;
		String bolText = null;
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String token = testUtil.generateAuthenticationToken(username2, password2, apiKey);

		Response response = RestAssured.given().auth().oauth2(token)
				.header("apikey", apiKey)
				.header("Content-Type", "application/json")
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90027\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(201).statusLine("HTTP/1.1 201 ")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information", equalTo(null))
				.body("images.bol", equalTo(""))
				.body("images.shippingLabels", equalTo(""))
				.extract().response();
	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAD is added &
	 * accessorials.limitedAccessType.destination=Port then LTDAD is mapped to SEADL in EBG10P108 &
	 * DEL. TO PORT ON CARRIER'S EQUIPMENT displays on PDF Special Instructions
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 44)
	public void executeQZ_12153() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Third Party\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LTDAD\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"PORT\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("DEL. TO PORT ON CARRIER'S EQUIPMENT"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAP is added &
	 * accessorials.limitedAccessType.origin=Secure then LTDAP is mapped to PRISPU in EBG10P108 &
	 * SECURED LOCATIONS P/U FEE displays on PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 45)
	public void executeQZ_12155() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Third Party\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LTDAP\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"secure\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("SECURED LOCATIONS P/U FEE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAD is added &
	 * accessorials.limitedAccessType.destination=Storage then LTDAD is mapped to MINIDL in
	 * EBG10P108 & MINI STORAGE UNITS DELIVERY FEE displays on PDF Special Instructions
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 46)
	public void executeQZ_12157() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Third Party\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LTDAD\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"STORAGE\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("MINI STORAGE UNITS DELIVERY FEE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAP is added &
	 * accessorials.limitedAccessType.origin=Other then LTDAP is mapped to PRISPU in EBG10P108
	 * & SECURED LOCATIONS P/U FEE displays on PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 47)
	public void executeQZ_12161() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Consignee\",\n" +
						"        \"specialInstructions\": \"CustTeam4 PI 5 SPRINT 5\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": true,\n" +
						"        \"includeShippingLabels\": true,\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Letter\",\n" +
						"            \"quantity\": 1,\n" +
						"            \"position\": 3\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"email1@Estes-Express.com\",\n" +
						"                    \"email2@Estes-Express.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"Notify1@gmail.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"Notify2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"\",\n" +
						"        \"masterBol\": \"\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL08012022-1\",\n" +
						"            \"BOL08012022-2\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"554238\",\n" +
						"                \"pieces\": 13,\n" +
						"                \"weight\": 1500,\n" +
						"                \"palletized\": true,\n" +
						"                \"additionalShipperInfo\": \"Freight must always stay upright\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"FreightID\",\n" +
						"                \"value\": \"122-Hiy877RR-60089\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 1,\n" +
						"                \"type\": \"SKD\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 48,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 100,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"1600\",\n" +
						"        \"netWeight\": \"1500\",\n" +
						"        \"handlingUnits\": \"\",\n" +
						"        \"linearLength\": \"\",\n" +
						"        \"cubicFeet\": \"\",\n" +
						"        \"declaredValue\":\"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"FARMPU\",\n" +
						"            \"LTDAP\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"127.03\",\n" +
						"            \"terms\": \"Collect\",\n" +
						"            \"customerCheckAcceptable\": \"true\",\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"RemitTo Name\",\n" +
						"                \"address1\": \"9104 Castle Point Dr\",\n" +
						"                \"address2\": \"Validating PROGCUST-8176\",\n" +
						"                \"city\": \"Glen Alllen\",\n" +
						"                \"stateProvince\": \"VA\",\n" +
						"                \"postalCode\": \"23060\",\n" +
						"                \"country\": \"USA\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"8976\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"other\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"Versum Materials\",\n" +
						"        \"address1\": \"357 Marian Ave\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"TAMAQUA\",\n" +
						"        \"stateProvince\": \"PA\",\n" +
						"        \"postalCode\": \"18252\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045038175\",\n" +
						"            \"phoneExt\": \"1357924680\",\n" +
						"            \"name\": \"Mr. Shipper\",\n" +
						"            \"email\": \"Shipper@Estes-Express.com\"\n" +
						"        }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Aberdeen\",\n" +
						"    \"stateProvince\": \"OH\",\n" +
						"    \"postalCode\": \"45101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5019765\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"MIRANDA TMS\",\n" +
						"    \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Snata Monica\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90405\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"    },\n" +
						"    \"customsBroker\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \" \",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("SECURED LOCATIONS P/U FEE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAP is added &
	 * accessorials.limitedAccessType.origin=School & origin.stateProvine=AK then LTDAP is mapped
	 * to AKSCPU & AK SCHOOL PICKUP FEE displays on PDF Special Instructions
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 48)
	public void executeQZ_12163() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LTDAP\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"School\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Anchorage\",\n" +
						"    \"stateProvince\": \"AK\",\n" +
						"    \"postalCode\": \"99504\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("AK SCHOOL PICKUP FEE"));

	}

	/**
	 * @author qcuthbert (8/23/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LTDAD is added &
	 * accessorials.limitedAccessType.destination=School & destination.stateProvince=HI then LTDAD
	 * is mapped to HISCL & HAWAII SCHOOL CHARGE displays on PDF Special Instruc
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 49)
	public void executeQZ_12165() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LTDAD\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"School\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"HAIKU\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96708\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HAWAII SCHOOL CHARGE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & lineItems.description contains invalid
	 * characters & a valid response is received then a warning message is displayed (Invalid chars
	 * are removed) & the invalid chars are not displayed on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 50)
	public void executeQZ_12167() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"Special ! # $ % & * ? > < + Instructions ! # $ % & * ? > < + Invalid Chars\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1 ! # $ % & * ? > < +STUFF\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS ! # $ % & * ? > < + 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \"Apt. ! # $ % & * ? > < + 3\",\n" +
						"    \"city\": \"HAIKU\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96708\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St. ! # $ % & * ? > < + \",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Special Instructions Invalid Chars")); // Special Instructions
		Assert.assertTrue(bolText.contains("HU 1.1 STUFF")); // Handling Unit ID Description
		Assert.assertTrue(bolText.contains("TALBOTS 4053")); // Origin Account Name
		Assert.assertTrue(bolText.contains("Apt. 3")); // Destination Account Address 2
		Assert.assertTrue(bolText.contains("1717 N Harwood St")); // Bill To Account Address 1

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes IDL & MNC & RES +
	 * other codes are added more than once then NOTIFY CHARGE & HOUSE/RESIDENTIAL DELIVERY FEE
	 * & INSIDE DELIVERY CHGS & HAZARDOUS MATERIALS CHARGE display only once on PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 51)
	public void executeQZ_12170() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];
		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"QZ-12170 Duplicate Accessorials\",\n" +
						"    \"templateName\": \"BOL Demo Template\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"2\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"true\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL1@test.com\",\n" +
						"                \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"MasterBOL08122022\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO12345\",\n" +
						"        \"pieces\": \"15\",\n" +
						"        \"weight\": \"1575\",\n" +
						"        \"palletized\": \"false\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"800\",\n" +
						"                        \"class\": \"2.3(2.1)\",\n" +
						"                        \"unnaNumber\": \"9202\",\n" +
						"                        \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                        \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"600\",\n" +
						"                        \"class\": \"9\",\n" +
						"                        \"unnaNumber\": \"8000\",\n" +
						"                        \"propername\": \"Consumer commodity\",\n" +
						"                        \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"175\",\n" +
						"                        \"class\": \"4.2\",\n" +
						"                        \"unnaNumber\": \"1386\",\n" +
						"                        \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                       \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                       \"packagingGroup\": \"III\",\n" +
						"                       \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"15\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\",\n" +
						"    \"declaredValue\":\"\",\n" +
						"    \"currency\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"HAZ\",\n" +
						"        \"MNC\",\n" +
						"        \"RES\",\n" +
						"        \"IDL\",\n" +
						"        \"HAZ\",\n" +
						"        \"LTDAD\",\n" +
						"\n" +
						"        \"RES\",\n" +
						"        \"IDL\",\n" +
						"        \"HAZ\",\n" +
						"        \"LTDAD\",\n" +
						"\n" +
						"        \"MNC\",\n" +
						"        \"RES\",\n" +
						"        \"IDL\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"HAZ Emergency Contact Name\",\n" +
						"        \"phone\": \"8043531900\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"fair\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T10:00:00.000\",\r\n" +
						"        \"end\":\""+ futureDate +"T10:00:00.000\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B025432\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot PRO 3267\",\n" +
						"    \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23231\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Aberdeen\",\n" +
						"    \"stateProvince\": \"OH\",\n" +
						"    \"postalCode\": \"45101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5019765\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"MIRANDA TMS\",\n" +
						"    \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Snata Monica\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90405\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\", \n" +
						"    \"name\": \"API Integration\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8043531900\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Customs Broker Contact Name\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Delivery Requested between " + businessDate2 + " 10:00 AM - " + businessDate2 + " 10:00 AM; HAZARDOUS MATERIALS CHARGE; NOTIFY")); // If test case is failing here, use postman to generate a .pdf for validation. If order or line break has changed, update this text.
		Assert.assertTrue(bolText.contains("CHARGE; HOUSE/RESIDENTIAL DELIVERY FEE; INSIDE DELIVERY CHGS; FAIR/AMUSEMENT PARK DELIVERY FEE; APPOINTMENT CHARGE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & origin.account is a valid miscellaneous account
	 * type then an error message is returned (The Origin Account is not valid value. Pl
	 * ease check the Origin Account entry and resubmit your request)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 52)
	public void executeQZ_12173() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"    {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"pt\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1 STUFF\",\n" +
						"        \"weight\": 500,\n" +
						"        \"pieces\": 1,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"60\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"       {\n" +
						"        \"description\": \"HU 1.2 STUFF\",\n" +
						"        \"weight\": 900,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"70\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"        {\n" +
						"        \"description\": \"HU 1.3 STUFF\",\n" +
						"        \"weight\": 100,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"55\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"      }\n" +
						"    ]\n" +
						"    }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"RES\",\n" +
						"        \"IDL\",\n" +
						"        \"RES\"\n" +
						"    ]\n" +
						"  },\n" +
						" \"origin\": {\n" +
						"    \"account\": \"0207777\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"CORPORATE OFFICE MISC \",\n" +
						"    \"address1\": \"3901 WEST BROAD STREET\",\n" +
						"    \"address2\": \"hOME oFFICE\",\n" +
						"    \"city\": \"RICHMOND\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"2\",\n" +
						"    \"name\": \"Charleston WV Misc ACCT\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"CHARLESTON\",\n" +
						"    \"stateProvince\": \"WV\",\n" +
						"    \"postalCode\": \"25306\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0137"))
				.body("messageStatus.information[0].message", equalTo("The Origin Account is not valid value. Please check the Origin Account entry and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted destination.account is a valid miscellaneous
	 * account type then an error message is returned (The Destination Account is not valid value.
	 * Please check the Destination Account entry and resubmit xx)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 53)
	public void executeQZ_12175() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"    {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"pt\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1 STUFF\",\n" +
						"        \"weight\": 500,\n" +
						"        \"pieces\": 1,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"60\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"       {\n" +
						"        \"description\": \"HU 1.2 STUFF\",\n" +
						"        \"weight\": 900,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"70\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"        {\n" +
						"        \"description\": \"HU 1.3 STUFF\",\n" +
						"        \"weight\": 100,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"55\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"      }\n" +
						"    ]\n" +
						"    }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"RES\",\n" +
						"        \"IDL\",\n" +
						"        \"RES\"\n" +
						"    ]\n" +
						"  },\n" +
						"\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"CORPORATE OFFICE MISC \",\n" +
						"    \"address1\": \"3901 WEST BROAD STREET\",\n" +
						"    \"address2\": \"hOME oFFICE\",\n" +
						"    \"city\": \"RICHMOND\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"2300777\",\n" +
						"    \"locationId\": \"2\",\n" +
						"    \"name\": \"Charleston WV Misc ACCT\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"CHARLESTON\",\n" +
						"    \"stateProvince\": \"WV\",\n" +
						"    \"postalCode\": \"25306\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0138"))
				.body("messageStatus.information[0].message", equalTo("The Destination Account is not valid value. Please check the Destination Account entry and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted billTo.account is a valid miscellaneous
	 * account type then an error message is returned (The Bill To Account is not valid value.
	 * Please check the Bill To Account entry and resubmit your request.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 54)
	public void executeQZ_12176() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"    {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"pt\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1 STUFF\",\n" +
						"        \"weight\": 500,\n" +
						"        \"pieces\": 1,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"60\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"       {\n" +
						"        \"description\": \"HU 1.2 STUFF\",\n" +
						"        \"weight\": 900,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"70\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"       },\n" +
						"        {\n" +
						"        \"description\": \"HU 1.3 STUFF\",\n" +
						"        \"weight\": 100,\n" +
						"        \"pieces\": 2,\n" +
						"        \"packagingType\": \"BOX\",\n" +
						"        \"classification\": \"55\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"        }\n" +
						"      }\n" +
						"    ]\n" +
						"    }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"RES\",\n" +
						"        \"IDL\",\n" +
						"        \"RES\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"CORPORATE OFFICE MISC \",\n" +
						"    \"address1\": \"3901 WEST BROAD STREET\",\n" +
						"    \"address2\": \"hOME oFFICE\",\n" +
						"    \"city\": \"RICHMOND\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"2\",\n" +
						"    \"name\": \"Charleston WV Misc ACCT\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"CHARLESTON\",\n" +
						"    \"stateProvince\": \"WV\",\n" +
						"    \"postalCode\": \"25306\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"8900777\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0139"))
				.body("messageStatus.information[0].message", equalTo("The Bill To Account is not valid value. Please check the Bill To Account entry and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes COD is added &
	 * cod.(required info) are provided & accessorials.cod.terms = Collect then COD is mapped
	 * to CFC in EBG10P108 & C.O.D. Shipment & COD FEE (COLLECT) display on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 55)
	public void executeQZ_12180() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Consignee\",\n" +
						"        \"specialInstructions\": \"CustTeam4 PI 5 SPRINT 5\",\n" +
						"        \"templateName\": \"BOLTEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": true,\n" +
						"        \"includeShippingLabels\": true,\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Letter\",\n" +
						"            \"quantity\": 3,\n" +
						"            \"position\": 1\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"email1@Estes-Express.com\",\n" +
						"                    \"email2@Estes-Express.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"Notify1@gmail.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"Notify2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"\",\n" +
						"        \"masterBol\": \"\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL08012022-1\",\n" +
						"            \"BOL08012022-2\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"\",\n" +
						"                \"pieces\": \"\",\n" +
						"                \"weight\": \"\",\n" +
						"                \"palletized\": \"\",\n" +
						"                \"additionalShipperInfo\": \"\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"FreightID\",\n" +
						"                \"value\": \"122-Hiy877RR-60089\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"\",\n" +
						"        \"netWeight\": \"\",\n" +
						"        \"handlingUnits\": \"\",\n" +
						"        \"linearLength\": \"\",\n" +
						"        \"cubicFeet\": \"\",\n" +
						"        \"declaredValue\":\"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"FARMPU\",\n" +
						"            \"COD\",\n" +
						"            \"SRT\",\n" +
						"            \"PPD\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"127.97\",\n" +
						"            \"currency\": \"USD\",\n" +
						"            \"terms\": \"Collect\",\n" +
						"            \"customerCheckAcceptable\": \"true\",\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"RemitTo Name\",\n" +
						"                \"address1\": \"9104 Castle Point Dr\",\n" +
						"                \"address2\": \"Validating PROGCUST-8176\",\n" +
						"                \"city\": \"Glen Alllen\",\n" +
						"                \"stateProvince\": \"VA\",\n" +
						"                \"postalCode\": \"23060\",\n" +
						"                \"country\": \"USA\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"44\"\n" +
						"        },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"7800\",\n" +
						"       \"currency\": \"\"\n" +
						"    }\n" +
						"    },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B025432\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot PRO 3267\",\n" +
						"    \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23231\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8881231234\",\n" +
						"      \"phoneExt\": \"123\",\n" +
						"      \"name\": \"ShipperName\",\n" +
						"      \"email\": \"Shipper@Email.test\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"0110420\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment\",\n" +
						"    \"address1\": \"11053 LEADBETTER Rd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"ASHLAND\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23005\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"1234\",\n" +
						"      \"name\": \"ConsigneeName\",\n" +
						"      \"email\": \"Consignee@Email.test\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5025394\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"IB/Home Depot\",\n" +
						"    \"address1\": \"151 John James Audubon PKWY\",\n" +
						"    \"address2\": \"NATIONAL TRAFFIC SERVICE\",\n" +
						"    \"city\": \"AMHERST\",\n" +
						"    \"stateProvince\": \"NY\",\n" +
						"    \"postalCode\": \"14228\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"12345\",\n" +
						"      \"name\": \"BillToName\",\n" +
						"      \"email\": \"BillTo@Email.test\"\n" +
						"    }\n" +
						"    },\n" +
						"    \"customsBroker\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \" \",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("C.O.D Shipment"));
		Assert.assertTrue(bolText.contains("COD FEE (COLLECT)"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes COD is NOT added but
	 * cod.(required info) are provided & accessorials.cod.terms=Prepaid then CFP code is added in
	 * EBG10P108 & COD FEE (PREPAID) displays on PDF Special Instructions sect
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 56)
	public void executeQZ_12188() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Please Read Customer Special Instruction section (Up to 500 chars)\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": true,\n" +
						"    \"includeShippingLabels\": true,\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"avery\",\n" +
						"      \"quantity\": 12,\n" +
						"      \"position\": 2\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID20220323\",\n" +
						"    \"masterBol\": \"MasterBOL\",\n" +
						"    \"bol\": [\n" +
						"      \"BL20220325-FIRST\",\n" +
						"      \"BL20220323-2\",\n" +
						"      \"BL20220323-3\",\n" +
						"      \"BL20220323-4\",\n" +
						"      \"BL20220323-5\",\n" +
						"      \"BL20220323-6\",\n" +
						"      \"BL20220323-7\",\n" +
						"      \"BL20220323-8\",\n" +
						"      \"BL20220323-9\",\n" +
						"      \"BL20220323-10\",\n" +
						"      \"BL20220323-11\",\n" +
						"      \"BL20220323-12\",\n" +
						"      \"BL20220323-13\",\n" +
						"      \"BL20220323-14\",\n" +
						"      \"BL20220323-15\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO20220412-1\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 3200,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"PO #1 Call for pickup and delivery window\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO20220412-2\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 800,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"PO #2 shipper info Please read commodity description, stackable.\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO20220412-3\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 1000,\n" +
						"        \"additionalShipperInfo\": \"PO #3 shipper info Freight must always stay upright. Please read commodity description. Do not stack\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO20220412-4\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 1200,\n" +
						"        \"palletized\": false,\n" +
						"        \"additionalShipperInfo\": \"PO #4 Call for pickup and delivery window\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO20220412-5\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 2800,\n" +
						"        \"palletized\": true,\n" +
						"        \"additionalShipperInfo\": \"PO #5 shipper info Please read commodity description, stackable.\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO20220412-6\",\n" +
						"        \"pieces\": 1,\n" +
						"        \"weight\": 1000,\n" +
						"        \"additionalShipperInfo\": \"PO #6 shipper info Freight must always stay upright. Please read commodity description. Do not stack\"\n" +
						"      }\n" +
						"      \n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"Customer Reference Id\",\n" +
						"        \"value\": \"CRID3452-01\"\n" +
						"      },\n" +
						"       {\n" +
						"        \"name\": \"Customer Order#\",\n" +
						"        \"value\": \"CRID3452-01\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"Other ID#\",\n" +
						"        \"value\": \"CRID3452-02\"\n" +
						"      },\n" +
						"           {\n" +
						"        \"name\": \"Customer Order#\",\n" +
						"        \"value\": \"CRID3452-03\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"CID \",\n" +
						"        \"value\": \"CRID3452-04\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"name\": \"Other ID#\",\n" +
						"        \"value\": \"CRID3452-05\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"CID \",\n" +
						"        \"value\": \"CRID3452-07\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"Load#\",\n" +
						"        \"value\": \"CRID3452-07\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"name\": \"SID#\",\n" +
						"        \"value\": \"CRID3452-08\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"Customer Reference Id\",\n" +
						"        \"value\": \"CRID3452-02\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"name\": \"Load#\",\n" +
						"        \"value\": \"CRID3452-07\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"name\": \"SID#\",\n" +
						"        \"value\": \"CRID3452-08\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"third PartY\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 6,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 10000,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 10000,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"      \"GTD_AM\"\n" +
						"    ],\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"79.99\",\n" +
						"      \"terms\": \"PREPAID\",\n" +
						"      \"customerCheckAcceptable\": true,\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"Dislay Remit To Name\",\n" +
						"        \"address1\": \"121 S. Cliffwood Ave.\",\n" +
						"        \"address2\": \"Suite remitTo 55, Address Line 2\",\n" +
						"        \"city\": \"Los Angeles\",\n" +
						"        \"stateProvince\": \"CA\",\n" +
						"        \"postalCode\": \"90001\",\n" +
						"        \"country\": \"USA\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"12\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053 Origin Acct 30 ch Extra Data for Label Display\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51 30 chara Address 1 Extra Data for Label Display\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER 30 charac Address 2 Extra Data for Label Display\",\n" +
						"    \"city\": \"Nags head\",\n" +
						"    \"stateProvince\": \"nc\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045038175\",\n" +
						"      \"phoneExt\": \"1357924680\",\n" +
						"      \"name\": \"Mr. Shipper Contact 30 characters, Extra Data for Label Display\",\n" +
						"      \"email\": \"Shipper@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"9590098\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BAT GROUP 30 charac CONSIGNEE, Extra Data for Label Display\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300, 30 chars, Extra Data for Label Display\",\n" +
						"    \"address2\": \"Address line 2, also up 30 char Extra Data for Label Display\",\n" +
						"    \"city\": \"hamilton\",\n" +
						"    \"stateProvince\": \"on\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"7721231234\",\n" +
						"      \"phoneExt\": \"9876543210\",\n" +
						"      \"name\": \"Mr. Destination Contact 30 chars, Extra Data for Label Display\",\n" +
						"      \"email\": \"Consignee@Estes-Express.com\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5001120\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"AGFA CORP 5753\",\n" +
						"    \"address1\": \"% NVISION GLOBAL\",\n" +
						"    \"address2\": \"1900 BRANNAN RD STE 100\",\n" +
						"    \"city\": \"MCDONOUGH\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30252\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"246801357\",\n" +
						"      \"name\": \"Bill To Contact Name\",\n" +
						"      \"email\": \"BillToEmail@yahoo.com\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("C.O.D Shipment"));
		Assert.assertTrue(bolText.contains("COD FEE (PREPAID)"));

	}



	/**
	 * @author qcuthbert (9/14/22)
	 * BOL API Verify when the JSON request is submitted & a valid reserve referenceNumbers.pro is
	 * provided in the correct format but for the second time then a warning message is displayed
	 * (Please be aware BOL information already xxx)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 57)
	public void executeQZ_12190() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response1 = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String pro = response1.jsonPath().getString("referenceNumbers.pro");

		Response response2 = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \""+ pro +"\",\r\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0185"))
				.body("messageStatus.information[0].message", equalTo("Please be aware BOL information already existed for the passed-in PRO value. The PRO has been realigned to the information on this request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes MNC is added &
	 * destination.stateProvince = AK then NCM is mapped to NCMAK replaces ESTES main code in
	 * EBG10P108 & ALASKA NOTIFY displays on the PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 58)
	public void executeQZ_12200() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"MNC\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Anchorage\",\n" +
						"    \"stateProvince\": \"Ak\",\n" +
						"    \"postalCode\": \"99507\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ALASKA NOTIFY"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LFTP is added &
	 * origin.stateProvince = AK then LFTP is mapped to AKLIPU replaces ESTES code in EBG10P108
	 * & ALASKA PICKUP LIFTGATE CHARGES displays on PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 59)
	public void executeQZ_12202() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"LFTP\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Anchorage\",\n" +
						"    \"stateProvince\": \"Ak\",\n" +
						"    \"postalCode\": \"99507\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ALASKA PICKUP LIFTGATE CHARGES"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes LFTD/ Liftgate req at DL is added &
	 * destination.stateProvince =HI then LFTD is mapped to HILGAT replaces ESTES code in EBG10P108 & HAWAII LIFTGATE
	 * displays on PDF Special Instructions
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 60)
	public void executeQZ_12204() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"LFTD\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"EWA BEACH\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96706\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HAWAII LIFTGATE"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes IPU/Inside pickup is added &
	 * origin.stateProvince = AK then IPU is mapped to AKINPU replaces ESTES code in EBG10P108 & ALASKA INSIDE
	 * PICKUP displays on PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 61)
	public void executeQZ_12205() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IPU\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Anchorage\",\n" +
						"    \"stateProvince\": \"Ak\",\n" +
						"    \"postalCode\": \"99507\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ALASKA INSIDE PICKUP"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes IDL is added &
	 * destination.stateProvince = HI then IDL is mapped to HIINS replaces ESTES code in EBG10P108
	 * & HAWAII INSIDE DELIVERY displays on the PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 62)
	public void executeQZ_12240() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"HAIKU\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96708\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HAWAII INSIDE DELIVERY"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes HAZ is added &
	 * origin.stateProvince = HI then HAZ is mapped to HIHAZ added to EBG10P108 & HAWAII ISLAND
	 * HAZMAT FEE + HAZ display on the PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 63)
	public void executeQZ_12242() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"175\",\n" +
						"                        \"class\": \"2.3(8)\",\n" +
						"                        \"unnaNumber\": \"1005\",\n" +
						"                        \"propername\": \"Ammonia, anhydrous\",\n" +
						"                        \"technicalName\": \"Tech Name\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"LoadMaster Direct - API Integration\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"HAZ\"\n" +
						"    ],\n" +
						"        \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"Mr. HAzmat\",\n" +
						"        \"phone\": \"8881231234\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"HAIKU\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96708\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HAWAII ISLAND HAZMAT FEE"));
		Assert.assertTrue(bolText.contains("HAZARDOUS MATERIALS CHARGE"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes APTD is added &
	 * destination.stateProvince = HI then APTD is mapped to HIAPT replaces ESTES main code in
	 * EBG10P108 & HAWAII APPOINTMENT displays on the PDF Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 64)
	public void executeQZ_12243() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"APTD\"\n" +
						"    ],\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T16:00:00.000\",\r\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"name\": \"Home Depot Outreach Center\",\n" +
						"    \"address1\": \"2800 E Observatory Rd\",\n" +
						"    \"city\": \"HOUSTON\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"77007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"city\": \"EWA BEACH\",\n" +
						"    \"stateProvince\": \"HI\",\n" +
						"    \"postalCode\": \"96706\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Delivery Requested on or after " + businessDate2 + " 04:00 PM"));
		Assert.assertTrue(bolText.contains("HAWAII APPOINTMENT"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes APTD &
	 * accessorial.appointmentDetails.delivery.start are added then a valid response
	 * is received & Delivery Requested on or after <delivery start>+APPOINTMENT CHARGE
	 * display on PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 65)
	public void executeQZ_12246() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];


		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T10:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"APTD\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T10:30:00.000\",\r\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Delivery Requested on or after " + businessDate2 + " 10:30 AM"));
		Assert.assertTrue(bolText.contains("APPOINTMENT CHARGE"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes APTD is NOT added but
	 * accessorial.appointmentDetails.delivery.(start & end) are then a response is received & Delivery
	 * Requested between <start>-<end>+APPOINTMENT CHARGE display on PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 66)
	public void executeQZ_12248() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T11:30:00.000\",\r\n" +
						"        \"end\":\""+ futureDate +"T17:45:00.000\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Delivery Requested between " + businessDate2 + " 11:30 AM - " + businessDate2 + " 05:45 PM"));
		Assert.assertTrue(bolText.contains("APPOINTMENT CHARGE"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted &  accessorial.appointmentDetails.delivery.(start & end)
	 * time is 00:00:00 then a valid response is received & Delivery Requested between <start>-<end> with blank
	 * times value display on the SI section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 67)
	public void executeQZ_12250() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"end\":\""+ futureDate +"T00:00:00.000\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30307\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Delivery Requested between " + businessDate2 + " - " + businessDate2));
		Assert.assertTrue(bolText.contains("APPOINTMENT CHARGE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes any GTD is added
	 * but the lane is not specify (AMREF5='') then an error message is displayed (Guaranteed
	 * service is not available for this destination)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 68)
	public void executeQZ_12268() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Burnham\",\n" +
						"    \"stateProvince\": \"ME\",\n" +
						"    \"postalCode\": \"04922\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0177"))
				.body("messageStatus.information[0].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_NOON/Guaranteed service
	 * by noon is added & the Destination City/State/Zip/CN combination is not in the points file (FBP074)
	 * then an error message is returned
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 69)
	public void executeQZ_12270() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"St Lawrence\",\n" +
						"    \"stateProvince\": \"NL\",\n" +
						"    \"postalCode\": \"A0E2C0\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0172"))
				.body("messageStatus.information[0].message", equalTo("Your Guaranteed LTL shipment appears to have a Destination address error. Email timecritical@estes-express.com or call 800 645-3952 for assistance."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0177"))
				.body("messageStatus.information[1].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_PM/Guaranteed service
	 * by end of day is added & the Origin City/State/Zip/CN combination is not in the points file (FBP074)
	 * then an error message is returned
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 70)
	public void executeQZ_12272() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_PM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"NL\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0171"))
				.body("messageStatus.information[0].message", equalTo("Your Guaranteed LTL shipment appears to have an Origin address error. Email timecritical@estes-express.com or call 800 645-3952 for assistance."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0177"))
				.body("messageStatus.information[1].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_AM/Guaranteed service
	 * by morning is added & the Destination City/State/Zip/US combination is not in the points file
	 * (FBP074) then an error message is returned
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 71)
	public void executeQZ_12274() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0172"))
				.body("messageStatus.information[0].message", equalTo("Your Guaranteed LTL shipment appears to have a Destination address error. Email timecritical@estes-express.com or call 800 645-3952 for assistance."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0177"))
				.body("messageStatus.information[1].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes EXPD/Expedited service
	 * is added then an error message is displayed (Accessorial - EXPD not allowed. Call 800 645-3952
	 * or email timecritical@estes-express.com for assistance.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 72)
	public void executeQZ_12307() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"EXPD\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0176"))
				.body("messageStatus.information[0].message", equalTo("Accessorial - EXPD not allowed. Call 800 645-3952 or email timecritical@estes-express.com for assistance."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes OVR/Over dimension/excessive
	 * length is NOT added &  any 20'(240”) => commodities.handlingUnits.length < 28.0'(336) then the PDF
	 * displays OVERLENGTH CHARGE 20.0' THRU 27.9'
	 * @throws Exception
	 */

	@Test(enabled = false, priority = 73)
	public void executeQZ_12308() throws Exception { // not able to automate for now but will revisit in the future
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username2, password2).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220607-1\",\n" +
						"      \"BOL20220607-2\",\n" +
						"       \"BOL20220607-3\",\n" +
						"      \"BOL20220607-4\",\n" +
						"       \"BOL20220607-5\",\n" +
						"      \"BOL20220607-6\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 335,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"         \"lineItems\": \n" +
						"         [\n" +
						"            {\n" +
						"                \"description\": \"HU 1.1 STUFF\",\n" +
						"                \"weight\": 500,\n" +
						"                \"pieces\": 1,\n" +
						"                \"packagingType\": \"BOX\",\n" +
						"                \"classification\": \"60\",\n" +
						"                \"nmfc\": \"\",\n" +
						"                \"nmfcSub\": \"\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                }\n" +
						"            },\n" +
						"            {\n" +
						"                \"description\": \"HU 1.2 STUFF\",\n" +
						"                \"weight\": 900,\n" +
						"                \"pieces\": 2,\n" +
						"                \"packagingType\": \"CTN\",\n" +
						"                \"classification\": \"70\",\n" +
						"                \"nmfc\": \"\",\n" +
						"                \"nmfcSub\": \"\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                }   \n" +
						"            }\n" +
						"           ]\n" +
						"        },\n" +
						"        {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"BOX\",\n" +
						"        \"weight\": 100,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 24,\n" +
						"        \"width\": 18,\n" +
						"        \"height\": 12,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\":[\n" +
						"            {\n" +
						"                \"description\": \"HU 2.2 STUFF\",\n" +
						"                \"weight\": 100,\n" +
						"                \"pieces\": 2,\n" +
						"                \"packagingType\": \"BOX\",\n" +
						"                \"classification\": \"55\",\n" +
						"                \"nmfc\": \"\",\n" +
						"                \"nmfcSub\": \"\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                    }\n" +
						"            }\n" +
						"          ]      \n" +
						"        }\n" +
						"      ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("OVERLENGTH CHARGE 20.0' THRU 27.9"));

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_AM & HAZ
	 * are added then the TIME CRITICAL SELECT (BY 10AM) FEE & HAZARDOUS MATERIALS CHARGE
	 * & TIME CRITICAL HAZMAT FEE are added to the Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 74)
	public void executeQZ_12309() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"175\",\n" +
						"                        \"class\": \"2.3(8)\",\n" +
						"                        \"unnaNumber\": \"1005\",\n" +
						"                        \"propername\": \"Ammonia, anhydrous\",\n" +
						"                        \"technicalName\": \"Tech Name\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"LoadMaster Direct - API Integration\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\",\n" +
						"        \"HAZ\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"Mr. Hazmat\",\n" +
						"        \"phone\": \"8881231234\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("GUARANTEED LTL STD SVC - 10 AM"));
		Assert.assertTrue(bolText.contains("HAZARDOUS MATERIALS CHARGE"));
		Assert.assertTrue(bolText.contains("TIME CRITICAL HAZMAT FEE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes TCS/Time critical service
	 * is added then an error message is displayed (Accessorial - TCS not allowed. Call 800 645-3952 or email ..)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 75)
	public void executeQZ_12310() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"TCS\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0176"))
				.body("messageStatus.information[0].message", equalTo("Accessorial - TCS not allowed. Call 800 645-3952 or email timecritical@estes-express.com for assistance."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/24/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_NOON & PSN/Poisonous
	 * material are added then TC SELECT (BY 12PM) FEE & HAZ MATERIALS CHARGE & TC POISON FEE are added
	 * to the Special Instructions section but GMHAZ is not
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 76)
	public void executeQZ_12313() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\",\n" +
						"        \"PSN\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("GUARANTEED LTL STD SVC - NOON"));
		Assert.assertTrue(bolText.contains("HAZARDOUS MATERIALS CHARGE"));
		Assert.assertTrue(bolText.contains("TIME CRITICAL POISON FEE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes PSH/Protect from heat
	 * is added then an error message is displayed (An invalid Accessorial has been submitted in your
	 * request. Please check the accessorial list and xxx)
	 */

	@Test(enabled = true, priority = 77)
	public void executeQZ_12314() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"PSH\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30307\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0098"))
				.body("messageStatus.information[0].message", equalTo("An invalid Accessorial has been submitted in your request. Please check the accessorial list and remove any invalid values before resubmitting."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & a referenceNumbers.masterBol is NOT provided
	 * but multi referenceNumbers.bol are then a valid response is received & the first bol displays as
	 * the Master BOL# on the PDF & all bol(s) display as BOL#
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 78)
	public void executeQZ_12315() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220607-1\",\n" +
						"      \"BOL20220607-2\",\n" +
						"       \"BOL20220607-3\",\n" +
						"      \"BOL20220607-4\",\n" +
						"       \"BOL20220607-5\",\n" +
						"      \"BOL20220607-6\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("MASTER BOL #: BOL20220607-1"));
		Assert.assertTrue(bolText.contains("BOL20220607-1, BOL20220607-2, BOL20220607-3"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & billTo.account is provided & valid but
	 * the billTo(address) is NOT a match (4x4) then a valid response is received & the PDF displays
	 * billTo(address info) as per the Customer Master address
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 79)
	public void executeQZ_12316() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username2, password2).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220607-1\",\n" +
						"      \"BOL20220607-2\",\n" +
						"       \"BOL20220607-3\",\n" +
						"      \"BOL20220607-4\",\n" +
						"       \"BOL20220607-5\",\n" +
						"      \"BOL20220607-6\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5001659\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Edit ADMIRAL AIR EXPRESS INC\",\n" +
						"    \"address1\": \"961 THORNDALE NO MATCH\",\n" +
						"    \"address2\": \"Address Line 2\",\n" +
						"    \"city\": \"BENSENVILLE\",\n" +
						"    \"stateProvince\": \"IL\",\n" +
						"    \"postalCode\": \"60106\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0140"))
				.body("messageStatus.information[0].message", equalTo("The Bill To Account address mismatch from account master file. Bill To account address is displaying from Customer Master file."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ACC #: 5001659"));
		Assert.assertTrue(bolText.contains("ADMIRAL AIR EXPRESS INC"));
		Assert.assertTrue(bolText.contains("961 W THORNDALE"));
		Assert.assertTrue(bolText.contains("BENSENVILLE, IL, 60106, US"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & origin.account is provided & valid
	 * but address is NOT a (4x4) match then a valid response is received data is sent to EBG
	 * tbls acct# is dropped/blank & PDF displays origin.(address info) as keyed in
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 80)
	public void executeQZ_12317() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username2, password2).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" ALBOTS #4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51 + more data\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER + Address 2 customer extra data\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertFalse(bolText.contains("B062273"));
		Assert.assertTrue(bolText.contains("ALBOTS 4053"));
		Assert.assertTrue(bolText.contains("7100 S CROATAN HWY 51 more da, TANGER OUTLET CENTER Address"));
		Assert.assertTrue(bolText.contains("NAGS HEAD, NC, 27959, US"));

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes GTD_(AM & PM) are
	 * added & the lane supports by 12PM then TIME CRITICAL SELECT (BY NOON) FEE is added to the
	 * Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 81)
	public void executeQZ_12318() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\",\n" +
						"        \"GTD_PM\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"SYDNEY\",\n" +
						"    \"stateProvince\": \"NS\",\n" +
						"    \"postalCode\": \"B1N2W7\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("GUARANTEED LTL STD SVC - NOON"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_NOON/Guaranteed service
	 * by noon is added & the Origin City/State/Zip/US combination is not in the points file (FBP074) then
	 * an error message is returned
	 */

	@Test(enabled = true, priority = 82)
	public void executeQZ_12319() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"gtd_noon\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Elk Grove\",\n" +
						"    \"stateProvince\": \"IL\",\n" +
						"    \"postalCode\": \"60007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0171"))
				.body("messageStatus.information[0].message", equalTo("Your Guaranteed LTL shipment appears to have an Origin address error. Email timecritical@estes-express.com or call 800 645-3952 for assistance."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0177"))
				.body("messageStatus.information[1].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_NOON is added but the lane
	 * is an Interline Carrier point (AMREF5='I') then an error message is displayed (Guaranteed service is
	 * not available for this destination)
	 */

	@Test(enabled = true, priority = 83)
	public void executeQZ_12320() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"CALEDON EAST\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L7C2W7\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0177"))
				.body("messageStatus.information[0].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & accessorials.codes PPD/Perishables (food) is
	 * added then a valid response is received & PERISHABLES accessorials descriptions displays on the
	 * Special Instructions line
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 84)
	public void executeQZ_12321() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"   \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"PPD\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("SPECIAL INSTRUCTIONS: PERISHABLE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_PM is added but the lane
	 * is a Not Everyday point (AMREF5='N') then an error message is displayed (Guaranteed service is not
	 * available for this destination)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 85)
	public void executeQZ_12322() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_PM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Becco\",\n" +
						"    \"stateProvince\": \"WV\",\n" +
						"    \"postalCode\": \"25607\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0177"))
				.body("messageStatus.information[0].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & billTo.account is provided
	 * & valid & the address is a (4x4) match then a valid response is received & the
	 * PDF displays billTo.(name & address info) as per the Customer Master Add
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 86)
	public void executeQZ_12323() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220607-1\",\n" +
						"      \"BOL20220607-2\",\n" +
						"       \"BOL20220607-3\",\n" +
						"      \"BOL20220607-4\",\n" +
						"       \"BOL20220607-5\",\n" +
						"      \"BOL20220607-6\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5001659\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"ADMIRAL AIR EXPRESS INC - 4by4\",\n" +
						"    \"address1\": \"961 W THORNDALE match\",\n" +
						"    \"address2\": \"Address Line 2\",\n" +
						"    \"city\": \"BENSENVILLE\",\n" +
						"    \"stateProvince\": \"IL\",\n" +
						"    \"postalCode\": \"60106\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ACC #: 5001659"));
		Assert.assertTrue(bolText.contains("ADMIRAL AIR EXPRESS INC"));
		Assert.assertTrue(bolText.contains("961 W THORNDALE"));
		Assert.assertTrue(bolText.contains("BENSENVILLE, IL, 60106, US"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_AM is added but
	 * the lane is an Agent Point (AMREF5='A') then an error message is displayed (Guaranteed service
	 * is not available for this destination.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 87)
	public void executeQZ_12324() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username8, password8).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_AM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Paton\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50217\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0177"))
				.body("messageStatus.information[0].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (8/25/22)
	 * BOL PDF Verify when the JSON request is submitted & destination.account is provided
	 * & valid & the address is a (4x4) match then a valid response is received & data is
	 * sent to EBG tables & the PDF displays destination.(address info) as keyed in
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 88)
	public void executeQZ_12326() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username2, password2).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"3\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"\"account\": \"9590098\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BAT GROUP - Nora\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300\",\n" +
						"    \"address2\": \"Added Address Line 2\",\n" +
						"    \"city\": \"HAMILTON\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ACC #: 9590098"));
		Assert.assertTrue(bolText.contains("BAT GROUP - Nora"));
		Assert.assertTrue(bolText.contains("11 WHITFIELD AVE 300, Added Address Line 2"));
		Assert.assertTrue(bolText.contains("HAMILTON, ON, L8L4B5, CN"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & destination.account is provided &
	 * valid but address is NOT a (4x4) match then a valid response is received data is sent
	 * to EBG tbls acct# is dropped & PDF displays dest.(address info) as keyed in
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 89)
	public void executeQZ_12327() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"3\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS #4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"\"account\": \"9590098\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BAT ROUP - Nora\",\n" +
						"    \"address1\": \"11 WHITFIELD AVE 300\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"HAMILTON\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertFalse(bolText.contains("9590098"));
		Assert.assertTrue(bolText.contains("BAT ROUP - Nora"));
		Assert.assertTrue(bolText.contains("11 WHITFIELD AVE 300"));
		Assert.assertTrue(bolText.contains("HAMILTON, ON, L8L4B5, CN"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & origin.account is provided & valid &
	 * the address is a (4x4) match then a valid response is received & data is sent to EBG tables
	 * PDF displays origin.(acct + address info) as keyed in by the customer
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 90)
	public void executeQZ_12328() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"3\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"\"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS #4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Glen Allen\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23059\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("B062273"));
		Assert.assertTrue(bolText.contains("TALBOTS 4053"));
		Assert.assertTrue(bolText.contains("7100 S CROATAN HWY 51, TANGER OUTLET CENTER"));
		Assert.assertTrue(bolText.contains("NAGS HEAD, NC, 27959, US"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes GTD_PM/Guaranteed service
	 * by end of day is added but the lane does NOT support the requested service then an error message
	 * is displayed ()
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 91)
	public void executeQZ_12329() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"    \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_PM\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Hamilton\",\n" +
						"    \"stateProvince\": \"ON\",\n" +
						"    \"postalCode\": \"L8L4B5\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Dulles\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"20189\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0177"))
				.body("messageStatus.information[0].message", equalTo("Guaranteed service is not available for this destination."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & customsBroker.contact.phone is added but
	 * customsBroker.(name, address1, city, stateProvince, postalCode, & country) are NOT added then
	 * an error message is returned (The Customs Broker address is req)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 92)
	public void executeQZ_12402() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"name\": \"\",\n" +
						"    \"address1\": \"\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"\",\n" +
						"    \"stateProvince\": \"\",\n" +
						"    \"postalCode\": \"\",\n" +
						"    \"country\": \"\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8881231234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0189"))
				.body("messageStatus.information[0].message", equalTo("The Customs Broker address is required when we have customs Broker:contact. Please add and resubmit the request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted &  customsBroker.(name, address1, city,
	 * stateProvince, postalCode, or/& country) are added but customsBroker.conatact.phone is NOT
	 * added then an error message is returned (The Customs Broker phone is req)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 93)
	public void executeQZ_12406() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23220\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"customsBroker\": {\n" +
						"    \"type\": \"export\", \n" +
						"    \"name\": \"Customer Broker Name\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0188"))
				.body("messageStatus.information[0].message", equalTo("The Customs Broker phone is required when we have address. Please add phone value and resubmit the request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & additionalReferences.value
	 * is added but additionalReferences.name is blank & a valid response is received
	 * then the additionalReferences.value displays as keyed in on the PDF under Other
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 94)
	public void executeQZ_12407() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"QZ-12407 20220616\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						" \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Houston\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"77007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0190"))
				.body("messageStatus.information[0].message", equalTo("Additional Reference must have both Additional Reference:Name and Value."))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("OTHER: QZ-12407 20220616"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & destination.(address1, address2, city,
	 * stateProvince, postalCode, & country) are the same as origin.(all address info) & a valid
	 * response is received then an error message is returned
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 95)
	public void executeQZ_12408() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0187"))
				.body("messageStatus.information[0].message", equalTo("Both Origin and Destination cannot be the same Account/Address. Please provide valid address and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & destination.account is the same as
	 * origin.account & a valid response is received then an error message is returned (Both
	 * Origin and Destination cannot be the same Account/Address.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 96)
	public void executeQZ_12409() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"100\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1900,\n" +
						"        \"pieces\": 12,\n" +
						"        \"packagingType\": \"CTN\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"456\",\n" +
						"      \"name\": \"Mr. Destination\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0187"))
				.body("messageStatus.information[0].message", equalTo("Both Origin and Destination cannot be the same Account/Address. Please provide valid address and resubmit your request."))
				.extract().response();

	}


	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & accessorials.codes FVC is NOT added &
	 * accessorials.fullValueCoverage is <= 100K then a valid response is received & HIGH VALUE
	 * COVERAGE displays on the Special Instructions section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 97)
	public void executeQZ_12432() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"250\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1750,\n" +
						"        \"pieces\": 24,\n" +
						"        \"packagingType\": \"PKG\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"7000.99\",\n" +
						"    \"currency\": \"UsD\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Alberta Beach\",\n" +
						"    \"stateProvince\": \"AB\",\n" +
						"    \"postalCode\": \"T0E2J9\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Seattle\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98107\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("HIGH VALUE COVERAGE"));

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.codes FVC is added &
	 * accessorials.fullValueCoverageDetails.monetaryValue is blank then an error message is
	 * displayed (Full value coverage - Monetary value must have)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 98)
	public void executeQZ_12433() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"250\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1750,\n" +
						"        \"pieces\": 24,\n" +
						"        \"packagingType\": \"PKG\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"FVC\"\n" +
						"    ],\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"\",\n" +
						"    \"currency\": \"\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Alberta Beach\",\n" +
						"    \"stateProvince\": \"AB\",\n" +
						"    \"postalCode\": \"T0E2J9\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Seattle\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98107\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0191"))
				.body("messageStatus.information[0].message", equalTo("Full value coverage - Monetary value must have an entry and should be greater than 0 and less than 100K. Please check full value coverage details and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.fullValueCoverageDetails.currency
	 * value is NOT USD, CAD, or MXN then an error message is displayed (Full value coverage - Currency is
	 * not valid.  Please enter valid currency ...)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 99)
	public void executeQZ_12434() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"250\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"    \"lineItems\": [\n" +
						"      {\n" +
						"        \"description\": \"HU 1.1\",\n" +
						"        \"weight\": 1750,\n" +
						"        \"pieces\": 24,\n" +
						"        \"packagingType\": \"PKG\",\n" +
						"        \"classification\": \"50\",\n" +
						"        \"nmfc\": \"\",\n" +
						"        \"nmfcSub\": \"\",\n" +
						"        \"hazardous\": false,\n" +
						"        \"hazardousDetails\": {\n" +
						"          \"weight\": \"\",\n" +
						"          \"class\": \"\",\n" +
						"          \"unnaNumber\": \"\",\n" +
						"          \"propername\": \"\",\n" +
						"          \"technicalName\": \"\",\n" +
						"          \"packagingGroup\": \"\",\n" +
						"          \"contractNumber\": \"\"\n" +
						"         }\n" +
						"        }\n" +
						"       ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_Noon\"\n" +
						"    ],\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"7000.99\",\n" +
						"    \"currency\": \"US\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Alberta Beach\",\n" +
						"    \"stateProvince\": \"AB\",\n" +
						"    \"postalCode\": \"T0E2J9\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Seattle\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98107\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0194"))
				.body("messageStatus.information[0].message", equalTo("Full value coverage - Currency is not valid. Please enter valid currency and resubmit the request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & the accessorial.appointmentDetails.delivery.start
	 * is earlier than the calculated delivery date based on the estimated LTL service lane then an error message
	 * is displayed
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 100)
	public void executeQZ_12435() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"SK\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"jCN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BX\",\n" +
						"                \"weight\": 400,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 375,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ todayDate +"T10:00:00.000\",\r\n" +
						"        \"end\":\""+ todayDate +"T10:00:00.000\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23230\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0192"))
				.body("messageStatus.information[0].message", containsString("Delivery start date should be greater than standard due date "))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & accessorials.fullValueCoverageDetails.currency is
	 * added & accessorials.fullValueCoverageDetails.monetaryValue is blank then an error message is displayed
	 * (Full value coverage - Currency is not allowed w)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 101)
	public void executeQZ_12437() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"         \"lineItems\": [\n" +
						"        {\n" +
						"            \"description\": \"HU 1.1 STUFF\",\n" +
						"            \"weight\": 500,\n" +
						"            \"pieces\": 1,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"60\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        {\n" +
						"            \"description\": \"HU 1.2 STUFF\",\n" +
						"            \"weight\": 900,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"CTN\",\n" +
						"            \"classification\": \"70\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"         ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_Noon\"\n" +
						"    ],\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"\",\n" +
						"    \"currency\": \"USD\"\n" +
						"    },\n" +
						"    \"excessLiabilityDetails\": {\n" +
						"      \"monetaryValue\": \"\",\n" +
						"      \"excessDeclaredValue\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Alberta Beach\",\n" +
						"    \"stateProvince\": \"AB\",\n" +
						"    \"postalCode\": \"T0E2J9\",\n" +
						"    \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Seattle\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98107\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0191"))
				.body("messageStatus.information[0].message", equalTo("Full value coverage - Monetary value must have an entry and should be greater than 0 and less than 100K. Please check full value coverage details and resubmit your request."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0195"))
				.body("messageStatus.information[1].message", equalTo("Full value coverage - Currency is not allowed without the monetary value."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL API Verify when the JSON request is submitted & the accessorials.appointmentDetails.delivery.start
	 * time is 24:00:00.000 then an error message is displayed (Your Appointment Delivery Start timestamp is
	 * not valid. Please check to ensure ...)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 102)
	public void executeQZ_12493() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate1 = testUtil.todaysDate();
		String pickupDate[] = businessDate1.split("/");
		String todayDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];
		String businessDate2 = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate2.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ todayDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }  \n" +
						"    },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"      {\n" +
						"            \"description\": \"HU 1.1 STUFF\",\n" +
						"            \"weight\": 500,\n" +
						"            \"pieces\": 1,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"60\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"        }\n" +
						"      }\n" +
						"      ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"\",\n" +
						"    \"currency\": \"\"\n" +
						"    },\n" +
						"        \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \""+ futureDate +"T24:00:00.000\",\r\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5079236\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"SONITEC INC\",\n" +
						"    \"address1\": \"4020 CHEMIN BOIS FRANC\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"SAINT-LAURENT\",\n" +
						"    \"stateProvince\": \"QC\",\n" +
						"    \"postalCode\": \"H4S1A7\",\n" +
						"     \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0093"))
				.body("messageStatus.information[0].message", equalTo("Your Appointment Delivery Start timestamp is not valid. Please check check to ensure the timestamp meets the ISO 8601 format (yyyy-mm-ddThh:mm:ss.mmm)."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & calculated total linear feet is greater than
	 * 636 inches (53 feet) then an error message is displayed (Total Linear feet exceeds maximum allowed.
	 * Please correct and resubmit your request.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 103)
	public void executeQZ_12494() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 240,\n" +
						"        \"width\": 9,\n" +
						"        \"height\": 96,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"        {\n" +
						"            \"description\": \"HU 1.1 STUFF\",\n" +
						"            \"weight\": 500,\n" +
						"            \"pieces\": 1,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"60\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        },     \n" +
						"            {\n" +
						"            \"description\": \"HU 1.2 STUFF\",\n" +
						"            \"weight\": 900,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"CTN\",\n" +
						"            \"classification\": \"70\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      },\n" +
						"      {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"BOX\",\n" +
						"        \"weight\": 100,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 240,\n" +
						"        \"width\": 12,\n" +
						"        \"height\": 13,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"        {\n" +
						"            \"description\": \"HU 2.1 STUFF\",\n" +
						"            \"weight\": 100,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"55\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      },\n" +
						"      {\n" +
						"        \"count\": 3,\n" +
						"        \"type\": \"ROL\",\n" +
						"        \"weight\": 100,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 240,\n" +
						"        \"width\": 90,\n" +
						"        \"height\": 90,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"         {\n" +
						"            \"description\": \"HU 3.1 STUFF\",\n" +
						"            \"weight\": 100,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"ROL\",\n" +
						"            \"classification\": \"100\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"1600\",\n" +
						"    \"handlingUnits\": \"6\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0198"))
				.body("messageStatus.information[0].message", equalTo("Total Linear feet exceeds maximum allowed. Please correct and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert (9/12/22)
	 * BOL PDF Verify when the JSON request is submitted & the calculated total cubic feet is greater
	 * than 3930 FT3 then an error message is displayed (Total Cubic feet exceeds maximum allowed.
	 * Please correct and resubmit your request.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 104)
	public void executeQZ_12495() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 1,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 1500,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 240,\n" +
						"        \"width\": 96,\n" +
						"        \"height\": 96,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"        {\n" +
						"            \"description\": \"HU 1.1 STUFF\",\n" +
						"            \"weight\": 500,\n" +
						"            \"pieces\": 1,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"60\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        },     \n" +
						"            {\n" +
						"            \"description\": \"HU 1.2 STUFF\",\n" +
						"            \"weight\": 900,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"CTN\",\n" +
						"            \"classification\": \"70\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      },\n" +
						"      {\n" +
						"        \"count\": 2,\n" +
						"        \"type\": \"BOX\",\n" +
						"        \"weight\": 100,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 156,\n" +
						"        \"width\": 12,\n" +
						"        \"height\": 13,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"        {\n" +
						"            \"description\": \"HU 2.1 STUFF\",\n" +
						"            \"weight\": 100,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"BOX\",\n" +
						"            \"classification\": \"55\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      },\n" +
						"      {\n" +
						"        \"count\": 3,\n" +
						"        \"type\": \"ROL\",\n" +
						"        \"weight\": 100,\n" +
						"        \"tareWeight\": \"\",\n" +
						"        \"length\": 240,\n" +
						"        \"width\": 90,\n" +
						"        \"height\": 96,\n" +
						"        \"stackable\": \"\",\n" +
						"        \"lineItems\": [\n" +
						"         {\n" +
						"            \"description\": \"HU 3.1 STUFF\",\n" +
						"            \"weight\": 100,\n" +
						"            \"pieces\": 2,\n" +
						"            \"packagingType\": \"ROL\",\n" +
						"            \"classification\": \"100\",\n" +
						"            \"nmfc\": \"\",\n" +
						"            \"nmfcSub\": \"\",\n" +
						"            \"hazardous\": false,\n" +
						"            \"hazardousDetails\": {\n" +
						"            \"weight\": \"\",\n" +
						"            \"class\": \"\",\n" +
						"            \"unnaNumber\": \"\",\n" +
						"            \"propername\": \"\",\n" +
						"            \"technicalName\": \"\",\n" +
						"            \"packagingGroup\": \"\",\n" +
						"            \"contractNumber\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"        ]\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"1600\",\n" +
						"    \"handlingUnits\": \"6\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"Nags Head\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Los Angeles\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90007\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0199"))
				.body("messageStatus.information[0].message", equalTo("Total Cubic feet exceeds maximum allowed. Please correct and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL PDF Verify when the JSON request is submitted & the calculated total cubic
	 * feet <= 3930 FT3 & a valid response is received then the BOL is created & the
	 * cubic feet value is saved to EBG00P100 (col EBBTCF)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 105)
	public void executeQZ_12496() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");
		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"2\",\n" +
						"      \"position\": \"\"\n" +
						"    }  \n" +
						"    },\n" +
						"      \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID20220707\",\n" +
						"    \"masterBol\": \"MBOL20220707\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220707-1\",\n" +
						"      \"BOL20220707-2\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"                    \"handlingUnits\": [\n" +
						"                    {\n" +
						"                        \"count\": 1,\n" +
						"                        \"type\": \"skd\",\n" +
						"                        \"weight\": 1500,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 48,\n" +
						"                        \"width\": 48,\n" +
						"                        \"height\": 48,\n" +
						"                        \"stackable\": \"\",\n" +
						"                        \"lineItems\": [\n" +
						"                        {\n" +
						"                            \"description\": \"HU 1.1 STUFF\",\n" +
						"                            \"weight\": 1400,\n" +
						"                            \"pieces\": 24,\n" +
						"                            \"packagingType\": \"BOX\",\n" +
						"                            \"classification\": \"60\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                            }\n" +
						"                        }\n" +
						"                        ]\n" +
						"                        },\n" +
						"                    {\n" +
						"                        \"count\": 2,\n" +
						"                        \"type\": \"BOX\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 24,\n" +
						"                        \"width\": 12,\n" +
						"                        \"height\": 13,\n" +
						"                        \"stackable\": \"\",\n" +
						"                         \"lineItems\": [\n" +
						"                         {\n" +
						"                            \"description\": \"HU 2.2 STUFF\",\n" +
						"                            \"weight\": 90,\n" +
						"                            \"pieces\": 2,\n" +
						"                            \"packagingType\": \"BOX\",\n" +
						"                            \"classification\": \"55\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                            }\n" +
						"                         }\n" +
						"                         ]\n" +
						"                         },\n" +
						"                    {\n" +
						"                        \"count\": 3,\n" +
						"                        \"type\": \"ROL\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 120,\n" +
						"                        \"width\": 10,\n" +
						"                        \"height\": 70,\n" +
						"                        \"stackable\": \"\",\n" +
						"                         \"lineItems\": [\n" +
						"                    {\n" +
						"                            \"description\": \"HU 1.2 STUFF\",\n" +
						"                            \"weight\": 100,\n" +
						"                            \"pieces\": 3,\n" +
						"                            \"packagingType\": \"ROL\",\n" +
						"                            \"classification\": \"70\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"                \"accessorials\": {\n" +
						"                    \"codes\": [\n" +
						"                        \"\"\n" +
						"                    ]\n" +
						"                },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5079236\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"SONITEC INC\",\n" +
						"    \"address1\": \"4020 CHEMIN BOIS FRANC\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"SAINT-LAURENT\",\n" +
						"    \"stateProvince\": \"QC\",\n" +
						"    \"postalCode\": \"H4S1A7\",\n" +
						"     \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}\n")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("Cube 212 FT3"));

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & any referenceNumbers.po.palletized = true but
	 * none of the multi commodities.hadlingUnits.type = PAT/SKD then a warning message is displayed
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 106)
	public void executeQZ_12559() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }  \n" +
						"    },\n" +
						"      \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID20220707\",\n" +
						"    \"masterBol\": \"MBOL20220707\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220707-1\",\n" +
						"      \"BOL20220707-2\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO20220707-1\",\n" +
						"        \"pieces\": \"1\",\n" +
						"        \"weight\": \"50\",\n" +
						"        \"palletized\": \"false\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info\"\n" +
						"      },\n" +
						"            {\n" +
						"        \"number\": \"PO20220707-2\",\n" +
						"        \"pieces\": \"1\",\n" +
						"        \"weight\": \"45\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info\"\n" +
						"      },\n" +
						"      {\n" +
						"        \"number\": \"PO20220707-3\",\n" +
						"        \"pieces\": \"1\",\n" +
						"        \"weight\": \"90\",\n" +
						"        \"palletized\": \"true\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"THIRD PARTY\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"                    \"handlingUnits\": [\n" +
						"                    {\n" +
						"                        \"count\": 1,\n" +
						"                        \"type\": \"CTN\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 48,\n" +
						"                        \"width\": 48,\n" +
						"                        \"height\": 48,\n" +
						"                        \"stackable\": \"\",\n" +
						"                        \"lineItems\": [\n" +
						"                        {\n" +
						"                            \"description\": \"HU 1.1 STUFF\",\n" +
						"                            \"weight\": 90,\n" +
						"                            \"pieces\": 1,\n" +
						"                            \"packagingType\": \"BOX\",\n" +
						"                            \"classification\": \"60\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                            }\n" +
						"                        }\n" +
						"                        ]\n" +
						"                        },\n" +
						"                    {\n" +
						"                        \"count\": 1,\n" +
						"                        \"type\": \"BOX\",\n" +
						"                        \"weight\": 50,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 24,\n" +
						"                        \"width\": 18,\n" +
						"                        \"height\": 12,\n" +
						"                        \"stackable\": \"\",\n" +
						"                         \"lineItems\": [\n" +
						"                         {\n" +
						"                            \"description\": \"HU 2.2 STUFF\",\n" +
						"                            \"weight\": 45,\n" +
						"                            \"pieces\": 2,\n" +
						"                            \"packagingType\": \"BOX\",\n" +
						"                            \"classification\": \"55\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                            }\n" +
						"                         }\n" +
						"                         ]\n" +
						"                         },\n" +
						"                    {\n" +
						"                        \"count\": 1,\n" +
						"                        \"type\": \"BBL\",\n" +
						"                        \"weight\": 50,\n" +
						"                        \"tareWeight\": \"\",\n" +
						"                        \"length\": 24,\n" +
						"                        \"width\": 18,\n" +
						"                        \"height\": 12,\n" +
						"                        \"stackable\": \"\",\n" +
						"                         \"lineItems\": [\n" +
						"                    {\n" +
						"                            \"description\": \"HU 1.2 STUFF\",\n" +
						"                            \"weight\": 50,\n" +
						"                            \"pieces\": 2,\n" +
						"                            \"packagingType\": \"CTN\",\n" +
						"                            \"classification\": \"70\",\n" +
						"                            \"nmfc\": \"\",\n" +
						"                            \"nmfcSub\": \"\",\n" +
						"                            \"hazardous\": false,\n" +
						"                            \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"                \"accessorials\": {\n" +
						"                    \"codes\": [\n" +
						"                        \"\"\n" +
						"                    ]\n" +
						"                },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B062273\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"TALBOTS 4053\",\n" +
						"    \"address1\": \"7100 S CROATAN HWY 51\",\n" +
						"    \"address2\": \"TANGER OUTLET CENTER\",\n" +
						"    \"city\": \"NAGS HEAD\",\n" +
						"    \"stateProvince\": \"NC\",\n" +
						"    \"postalCode\": \"27959\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5079236\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"SONITEC INC\",\n" +
						"    \"address1\": \"4020 CHEMIN BOIS FRANC\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"SAINT-LAURENT\",\n" +
						"    \"stateProvince\": \"QC\",\n" +
						"    \"postalCode\": \"H4S1A7\",\n" +
						"     \"country\": \"CAN\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0217"))
				.body("messageStatus.information[0].message", equalTo("Please take note that your BOL's POs are defined as palletized but none of the handling units on the shipment have pallet/skid piece types."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when multi lineItems HAZ & the JSON request is submitted & any
	 * commodities.lineItems.hazardousDetails.technicalName is blank but the associated
	 * *.unnanumber value’s HAZ symbols contains G then an error message is displayed
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 107)
	public void executeQZ_12680() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"4\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\":{\n" +
						"    \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 1,\n" +
						"                \"type\": \"SKD\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 48,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"450\",\n" +
						"                        \"class\": \"4.2\",\n" +
						"                        \"unnaNumber\": \"1386\",\n" +
						"                        \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                        \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                        \"packagingGroup\": \"III\",\n" +
						"                        \"contractNumber\": \"ContractOne\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 2,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"700\",\n" +
						"                        \"class\": \"1.4G(8)(6.1)\",\n" +
						"                        \"unnaNumber\": \"0301\",\n" +
						"                        \"propername\": \"Ammunition, tear-producing with burster, expelling charge or propelling charge\",\n" +
						"                        \"technicalName\": \"Tech Name LIQ\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"Contract One\"\n" +
						"                            }\n" +
						"                        }\n" +
						"                ]\n" +
						"                },\n" +
						"                {\n" +
						"                \"count\": 2,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 100,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 18,\n" +
						"                \"height\": 12,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 2,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"75\",\n" +
						"                        \"class\": \"2.2\",\n" +
						"                        \"unnaNumber\": \"3163\",\n" +
						"                        \"propername\": \"Liquefied gas, n.o.s.\",\n" +
						"                        \"technicalName\": \"\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"\"\n" +
						"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"            ]\n" +
						"        },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"Haz ContactName\",\n" +
						"        \"phone\": \"8887771234\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"8976\",\n" +
						"    \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"9585463\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BLUE BUFFALO CO LLC\",\n" +
						"    \"address1\": \"UNITED WAREHOUSE CO\",\n" +
						"    \"address2\": \"11324 E APACHE\",\n" +
						"    \"city\": \"TULSA\",\n" +
						"    \"stateProvince\": \"OK\",\n" +
						"    \"postalCode\": \"74116\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \" LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0213"))
				.body("messageStatus.information[0].message", equalTo("Hazardous technical name should not be blanks for UNNA# 3163. Call 866-ESTES4U (378-3748)for assistance or contact your local terminal."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when multi lineItems HAZ & the JSON request is submitted & any
	 * commodities.lineItems.hazardousDetails.propername value is not an exact match
	 * with the exception of periods then an error message is displayed (EBG0211)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 108)
	public void executeQZ_12682() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"4\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\":{\n" +
						"    \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 1,\n" +
						"                \"type\": \"SKD\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 48,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"450\",\n" +
						"                        \"class\": \"4.2\",\n" +
						"                        \"unnaNumber\": \"1386\",\n" +
						"                        \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                        \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                        \"packagingGroup\": \"III\",\n" +
						"                        \"contractNumber\": \"ContractOne\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 2,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"700\",\n" +
						"                        \"class\": \"1.4G(8)(6.1)\",\n" +
						"                        \"unnaNumber\": \"0301\",\n" +
						"                        \"propername\": \"Ammunition, tearproducing with burster, expelling charge or propelling charge\",\n" +
						"                        \"technicalName\": \"Tech Name LIQ\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"Contract One\"\n" +
						"                            }\n" +
						"                        }\n" +
						"                ]\n" +
						"                },\n" +
						"                {\n" +
						"                \"count\": 2,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 100,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 18,\n" +
						"                \"height\": 12,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 2,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"75\",\n" +
						"                        \"class\": \"6.1\",\n" +
						"                        \"unnaNumber\": \"1693\",\n" +
						"                        \"propername\": \"Tear gas substances, liquid, n.o.s..\",\n" +
						"                        \"technicalName\": \"Tech Name TGS\",\n" +
						"                        \"packagingGroup\": \"I\",\n" +
						"                        \"contractNumber\": \"ContractTwo\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"            ]\n" +
						"        },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"Haz ContactName\",\n" +
						"        \"phone\": \"8887771234\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"8976\",\n" +
						"    \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"9585463\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BLUE BUFFALO CO LLC\",\n" +
						"    \"address1\": \"UNITED WAREHOUSE CO\",\n" +
						"    \"address2\": \"11324 E APACHE\",\n" +
						"    \"city\": \"TULSA\",\n" +
						"    \"stateProvince\": \"OK\",\n" +
						"    \"postalCode\": \"74116\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \" LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0211"))
				.body("messageStatus.information[0].message", equalTo("Your request has invalid UNNA#/Proper Name/Class combination for UNNA#: 0301. Call 866-ESTES4U (378-3748)for assistance or contact your local terminal."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & commodities.lineItems.hazardousDetails.class
	 * value doesn’t match commodities.lineItems.hazardousDetails.unnaNumber then an error message is
	 * displayed (EBG0211)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 109)
	public void executeQZ_12684() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Zebra\",\n" +
						"      \"quantity\": \"4\",\n" +
						"      \"position\": \"1\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"\",\n" +
						"        \"pieces\": \"\",\n" +
						"        \"weight\": \"\",\n" +
						"        \"palletized\": \"\",\n" +
						"        \"additionalShipperInfo\": \"\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"800\",\n" +
						"                       \"class\": \"2\",\n" +
						"                       \"unnaNumber\": \"1971\",\n" +
						"                        \"propername\": \"Methane, compressed\",\n" +
						"                        \"technicalName\": \"\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"600\",\n" +
						"                        \"class\": \"9\",\n" +
						"                        \"unnaNumber\": \"8000\",\n" +
						"                        \"propername\": \"Consumer commodity\",\n" +
						"                        \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"HAZ\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"Haz ContactName\",\n" +
						"        \"phone\": \"8887771234\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"    \"monetaryValue\":\"8976\",\n" +
						"    \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"9585463\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BLUE BUFFALO CO LLC\",\n" +
						"    \"address1\": \"UNITED WAREHOUSE CO\",\n" +
						"    \"address2\": \"11324 E APACHE\",\n" +
						"    \"city\": \"TULSA\",\n" +
						"    \"stateProvince\": \"OK\",\n" +
						"    \"postalCode\": \"74116\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \" LAKEWOOD\",\n" +
						"    \"stateProvince\": \"WA\",\n" +
						"    \"postalCode\": \"98499\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Texas Branch\",\n" +
						"    \"address1\": \"1717 N Harwood St.\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Dallas\",\n" +
						"    \"stateProvince\": \"TX\",\n" +
						"    \"postalCode\": \"75201\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2224441234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0211"))
				.body("messageStatus.information[0].message", equalTo("Your request has invalid UNNA#/Proper Name/Class combination for UNNA#: 1971. Call 866-ESTES4U (378-3748)for assistance or contact your local terminal."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & accessorials.codes HAZ is added &
	 * commodities.lineItems.hazardous = true & commodities.lineItems.packagingType = PAT/Pallets
	 * then an error message is displayed (EBG0157)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 110)
	public void executeQZ_12686() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Integration Scenario\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"2\",\n" +
						"      \"position\": \"1\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"false\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL1@test.com\",\n" +
						"                \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"MasterBOL08122022\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO12345\",\n" +
						"        \"pieces\": \"15\",\n" +
						"        \"weight\": \"1575\",\n" +
						"        \"palletized\": \"false\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"800\",\n" +
						"                        \"class\": \"2.3(2.1)\",\n" +
						"                        \"unnaNumber\": \"9202\",\n" +
						"                        \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                        \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CTN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"600\",\n" +
						"                        \"class\": \"9\",\n" +
						"                        \"unnaNumber\": \"8000\",\n" +
						"                        \"propername\": \"Consumer commodity\",\n" +
						"                        \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"PAT\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"175\",\n" +
						"                        \"class\": \"4.2\",\n" +
						"                        \"unnaNumber\": \"1386\",\n" +
						"                        \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                       \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                       \"packagingGroup\": \"III\",\n" +
						"                       \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"15\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"HAZ\",\n" +
						"        \"MARK\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"HAZ Emergency Contact Name\",\n" +
						"        \"phone\": \"8043531900\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"15\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B025432\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot PRO 3267\",\n" +
						"    \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23231\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Aberdeen\",\n" +
						"    \"stateProvince\": \"OH\",\n" +
						"    \"postalCode\": \"45101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5019765\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"MIRANDA TMS\",\n" +
						"    \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Snata Monica\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90405\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\", \n" +
						"    \"name\": \"API Integration\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8043531900\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Customs Broker Contact Name\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0157"))
				.body("messageStatus.information[0].message", equalTo("Package type (PAT) is invalid for Hazardous Material. Please enter correct package type and resubmit your request again."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & accessorials.codes HAZ is added &
	 * commodities.lineItems.hazardous = true & commodities.lineItems.packagingType = PCS/Piece
	 * then an error message is displayed (EBG0157)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 111)
	public void executeQZ_12688() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Integration Scenario\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Letter\",\n" +
						"      \"quantity\": \"2\",\n" +
						"      \"position\": \"1\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"false\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL1@test.com\",\n" +
						"                \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"MasterBOL08122022\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO12345\",\n" +
						"        \"pieces\": \"15\",\n" +
						"        \"weight\": \"1575\",\n" +
						"        \"palletized\": \"false\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"800\",\n" +
						"                        \"class\": \"2.3(2.1)\",\n" +
						"                        \"unnaNumber\": \"9202\",\n" +
						"                        \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                        \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"PCS\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"600\",\n" +
						"                        \"class\": \"9\",\n" +
						"                        \"unnaNumber\": \"8000\",\n" +
						"                        \"propername\": \"Consumer commodity\",\n" +
						"                        \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"PROGCUST-12070\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BOX\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 175,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"175\",\n" +
						"                        \"class\": \"4.2\",\n" +
						"                        \"unnaNumber\": \"1386\",\n" +
						"                        \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                       \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                       \"packagingGroup\": \"III\",\n" +
						"                       \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"15\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"HAZ\",\n" +
						"        \"MARK\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"HAZ Emergency Contact Name\",\n" +
						"        \"phone\": \"8043531900\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"15\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B025432\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot PRO 3267\",\n" +
						"    \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23231\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Aberdeen\",\n" +
						"    \"stateProvince\": \"OH\",\n" +
						"    \"postalCode\": \"45101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5019765\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"MIRANDA TMS\",\n" +
						"    \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Snata Monica\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90405\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\", \n" +
						"    \"name\": \"API Integration\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8043531900\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Customs Broker Contact Name\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0157"))
				.body("messageStatus.information[0].message", equalTo("Package type (PCS) is invalid for Hazardous Material. Please enter correct package type and resubmit your request again."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & commodities.handlingUnits.weight is less
	 * than the sum of the associated lineItems.weight then an error message is returned (EBG0170)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 112)
	public void executeQZ_12955() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"37T5PTH\",\n" +
						"    \"shipmentId\": \"SID20220629\",\n" +
						"    \"masterBol\": \"MBOL20220629\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220818-1\",\n" +
						"      \"BOL20220818-2\"\n" +
						"    ]\n" +
						"    },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1300,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"jCN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BX\",\n" +
						"                \"weight\": 400,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 375,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\"\n" +
						"    ],\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"\"origin\": {\n" +
						"    \"account\": \"9585463\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BLUE BUFFALO CO LLC\",\n" +
						"    \"address1\": \"UNITED WAREHOUSE CO\",\n" +
						"    \"address2\": \"11324 E APACHE\",\n" +
						"    \"city\": \"TULSA\",\n" +
						"    \"stateProvince\": \"OK\",\n" +
						"    \"postalCode\": \"74116\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30301\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"B022768\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Champlain Cable\",\n" +
						"    \"address1\": \"PO BOX 371100\",\n" +
						"    \"address2\": \"% AGL #000011209 \",\n" +
						"    \"city\": \"Milwaukee\",\n" +
						"    \"stateProvince\": \"WI\",\n" +
						"    \"postalCode\": \"53237\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"9158600010\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0170"))
				.body("messageStatus.information[1].message", equalTo("Your Handling Unit Weight of (1) is lesser than the total of HU's Line items weight"))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & accessorials.codes MARK/Marked or
	 * tagged & accessorials.markDetails.pieces are added but pieces value doesn’t equal the
	 * keyed in shipmentTotals.handlingUnits then an error message is returned (EBG0229)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 113)
	public void executeQZ_12957() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Consignee\",\n" +
						"    \"specialInstructions\": \"\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"\",\n" +
						"      \"quantity\": \"\",\n" +
						"      \"position\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"    \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"SID20220629\",\n" +
						"    \"masterBol\": \"MBOL20220629\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL20220818-1\",\n" +
						"      \"BOL20220818-2\"\n" +
						"    ]\n" +
						"    },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Collect\"\n" +
						"  },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PAT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 500,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"jCN\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BX\",\n" +
						"                \"weight\": 400,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 375,\n" +
						"                        \"pieces\": 12,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"15\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"GTD_NOON\",\n" +
						"        \"Mark\"\n" +
						"    ],\n" +
						"      \"markDetails\": {\n" +
						"      \"pieces\": \"10\"\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"\"origin\": {\n" +
						"    \"account\": \"9585463\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"BLUE BUFFALO CO LLC\",\n" +
						"    \"address1\": \"UNITED WAREHOUSE CO\",\n" +
						"    \"address2\": \"11324 E APACHE\",\n" +
						"    \"city\": \"TULSA\",\n" +
						"    \"stateProvince\": \"OK\",\n" +
						"    \"postalCode\": \"74116\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"2524490237\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"B029717\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \" RETURNS ELECTROLUX HOME PROD\",\n" +
						"    \"address1\": \"3401 96TH ST S\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30301\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"B022768\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Champlain Cable\",\n" +
						"    \"address1\": \"PO BOX 371100\",\n" +
						"    \"address2\": \"% AGL #000011209 \",\n" +
						"    \"city\": \"Milwaukee\",\n" +
						"    \"stateProvince\": \"WI\",\n" +
						"    \"postalCode\": \"53237\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"9158600010\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0186"))
				.body("messageStatus.information[0].message", equalTo("Invalid characters were removed."))
				.body("messageStatus.information[1].type", equalTo("E"))
				.body("messageStatus.information[1].code", equalTo("EBG0229"))
				.body("messageStatus.information[1].message", equalTo("Mark Pieces should be equals to Total H/U. Please provide correct Mark Pieces count and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & at least one notifications.phoneNumber is added
	 * then a warning message is returned (EBG0222 Notify by phone is not supported at this moment.)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 114)
	public void executeQZ_12959() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Integration Scenario\",\n" +
						"    \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"4\",\n" +
						"      \"position\": \"1\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"true\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL@test.com\",\n" +
						"                \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"804353\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"         {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"ShipperIdNum\",\n" +
						"    \"masterBol\": \"MASTERBOL080922\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL080922\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"12345678\",\n" +
						"        \"pieces\": \"4\",\n" +
						"        \"weight\": \"1750\",\n" +
						"        \"palletized\": \"true\",\n" +
						"        \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"SID\",\n" +
						"        \"value\": \"SID080922\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"250\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"         \"lineItems\": [\n" +
						"            {\n" +
						"                \"description\": \"HU 1.1\",\n" +
						"                \"weight\": 1750,\n" +
						"                \"pieces\": 24,\n" +
						"                \"packagingType\": \"PKG\",\n" +
						"                \"classification\": \"50\",\n" +
						"                \"nmfc\": \"\",\n" +
						"                \"nmfcSub\": \"\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                }\n" +
						"                }\n" +
						"            ]\n" +
						"            }\n" +
						"            ]\n" +
						"        },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"2000\",\n" +
						"    \"netWeight\": \"1750\",\n" +
						"    \"handlingUnits\": \"4\",\n" +
						"    \"linearLength\": \"48\",\n" +
						"    \"cubicFeet\": \"256\",\n" +
						"    \"declaredValue\":\"\",\n" +
						"    \"currency\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"GTD_PM\",\n" +
						"        \"MNC\"\n" +
						"    ],\n" +
						"      \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"currency\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"phone\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"4137003\",\n" +
						"    \"locationId\": \"0109\",\n" +
						"    \"name\": \"Home Depot 0109\",\n" +
						"    \"address1\": \"2755 Piedmont RD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30305\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"4042319880\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"2485132\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Interco Printing\",\n" +
						"    \"address1\": \"971 Greenlick CT\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Columbia\",\n" +
						"    \"stateProvince\": \"TN\",\n" +
						"    \"postalCode\": \"38401\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Core\",\n" +
						"    \"address1\": \"2455 Paces Ferry RD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30339\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8048881234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("WARNING"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.body("messageStatus.information[0].type", equalTo("W"))
				.body("messageStatus.information[0].code", equalTo("EBG0222"))
				.body("messageStatus.information[0].message", equalTo("Notify by phone is not supported at this moment."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & both shipmentTotals.declaredValue &
	 * shipmentTotals.currency are added then a single error message is returned (EBG0231 We don't
	 * support Declared Value or Declared Value Currency. Please use our Full xx)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 115)
	public void executeQZ_12961() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Integration Scenario\",\n" +
						"    \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"4\",\n" +
						"      \"position\": \"1\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"true\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL@test.com\",\n" +
						"                \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"         {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"ShipperIdNum\",\n" +
						"    \"masterBol\": \"MASTERBOL080922\",\n" +
						"    \"bol\": [\n" +
						"      \"BOL080922\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"12345678\",\n" +
						"        \"pieces\": \"4\",\n" +
						"        \"weight\": \"1750\",\n" +
						"        \"palletized\": \"true\",\n" +
						"        \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"SID\",\n" +
						"        \"value\": \"SID080922\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"    \"handlingUnits\": [\n" +
						"      {\n" +
						"        \"count\": 4,\n" +
						"        \"type\": \"SKD\",\n" +
						"        \"weight\": 2000,\n" +
						"        \"tareWeight\": \"250\",\n" +
						"        \"length\": 48,\n" +
						"        \"width\": 48,\n" +
						"        \"height\": 48,\n" +
						"        \"stackable\": \"true\",\n" +
						"         \"lineItems\": [\n" +
						"            {\n" +
						"                \"description\": \"HU 1.1\",\n" +
						"                \"weight\": 1750,\n" +
						"                \"pieces\": 24,\n" +
						"                \"packagingType\": \"PKG\",\n" +
						"                \"classification\": \"50\",\n" +
						"                \"nmfc\": \"\",\n" +
						"                \"nmfcSub\": \"\",\n" +
						"                \"hazardous\": false,\n" +
						"                \"hazardousDetails\": {\n" +
						"                \"weight\": \"\",\n" +
						"                \"class\": \"\",\n" +
						"                \"unnaNumber\": \"\",\n" +
						"                \"propername\": \"\",\n" +
						"                \"technicalName\": \"\",\n" +
						"                \"packagingGroup\": \"\",\n" +
						"                \"contractNumber\": \"\"\n" +
						"                }\n" +
						"                }\n" +
						"            ]\n" +
						"            }\n" +
						"            ]\n" +
						"        },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"2000\",\n" +
						"    \"netWeight\": \"1750\",\n" +
						"    \"handlingUnits\": \"4\",\n" +
						"    \"linearLength\": \"48\",\n" +
						"    \"cubicFeet\": \"256\",\n" +
						"    \"declaredValue\":\"17680\",\n" +
						"    \"currency\": \"USD\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"IDL\",\n" +
						"        \"GTD_PM\",\n" +
						"        \"MNC\"\n" +
						"    ],\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"4137003\",\n" +
						"    \"locationId\": \"0109\",\n" +
						"    \"name\": \"Home Depot 0109\",\n" +
						"    \"address1\": \"2755 Piedmont RD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30305\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"4042319880\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"2485132\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Interco Printing\",\n" +
						"    \"address1\": \"971 Greenlick CT\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Columbia\",\n" +
						"    \"stateProvince\": \"TN\",\n" +
						"    \"postalCode\": \"38401\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot Core\",\n" +
						"    \"address1\": \"2455 Paces Ferry RD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Atlanta\",\n" +
						"    \"stateProvince\": \"GA\",\n" +
						"    \"postalCode\": \"30339\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8048881234\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0231"))
				.body("messageStatus.information[0].message", equalTo("We don't support Declared Value or Declared Value Currency. Please use our Full Value Coverage and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when multi lineItems HAZ & the JSON request is submitted & any
	 * commodities.lineItems.hazardousDetails.technicalName is blank but the associated
	 * *.unnanumber value’s HAZ symbols is G then an error message is displayed (EBG0213)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 116)
	public void executeQZ_12963() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"  \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"    \"function\": \"Create\",\n" +
						"    \"isTest\": true,\n" +
						"    \"requestorRole\": \"Third Party\",\n" +
						"    \"specialInstructions\": \"Integration Scenario\",\n" +
						"    \"templateName\": \"BOL Demo Template\"\n" +
						"  },\n" +
						"  \"images\": {\n" +
						"    \"includeBol\": \"true\",\n" +
						"    \"includeShippingLabels\": \"true\",\n" +
						"    \"shippingLabels\": {\n" +
						"      \"format\": \"Avery\",\n" +
						"      \"quantity\": \"7\",\n" +
						"      \"position\": \"2\"\n" +
						"    },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"            \"includeBol\": \"true\",\n" +
						"            \"includeLabels\": \"true\",\n" +
						"            \"addresses\": [\n" +
						"                \"includeBOL1@test.com\",\n" +
						"                \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"           }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"  \"referenceNumbers\": {\n" +
						"    \"pro\": \"\",\n" +
						"    \"estimate\": \"\",\n" +
						"    \"shipmentId\": \"\",\n" +
						"    \"masterBol\": \"MasterBOL08122022\",\n" +
						"    \"bol\": [\n" +
						"      \"\",\n" +
						"      \"\"\n" +
						"    ],\n" +
						"    \"po\": [\n" +
						"      {\n" +
						"        \"number\": \"PO12345\",\n" +
						"        \"pieces\": \"15\",\n" +
						"        \"weight\": \"1575\",\n" +
						"        \"palletized\": \"false\",\n" +
						"        \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"      }\n" +
						"    ],\n" +
						"    \"additionalReferences\": [\n" +
						"      {\n" +
						"        \"name\": \"\",\n" +
						"        \"value\": \"\"\n" +
						"      }\n" +
						"    ]\n" +
						"  },\n" +
						"  \"payment\": {\n" +
						"    \"terms\": \"Prepaid\"\n" +
						"  },\n" +
						"  \"commodities\": {\n" +
						"     \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 1500,\n" +
						"                \"tareWeight\": \"100\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 800,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"800\",\n" +
						"                        \"class\": \"2.3(2.1)\",\n" +
						"                        \"unnaNumber\": \"9202\",\n" +
						"                        \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                        \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"Contract Number 1\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"600\",\n" +
						"                        \"class\": \"9\",\n" +
						"                        \"unnaNumber\": \"8000\",\n" +
						"                        \"propername\": \"Consumer commodity\",\n" +
						"                        \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                        \"packagingGroup\": \"\",\n" +
						"                        \"contractNumber\": \"Contract Number 1\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"SK\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"25\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 75,\n" +
						"                        \"pieces\": 4,\n" +
						"                        \"packagingType\": \"BX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"70\",\n" +
						"                        \"class\": \"ORM-D\",\n" +
						"                        \"unnaNumber\": \"\",\n" +
						"                        \"propername\": \"Cartridges, power device\",\n" +
						"                       \"technicalName\": \"Tech Name: Cartridges, power device No UNNANumber\",\n" +
						"                       \"packagingGroup\": \"\",\n" +
						"                       \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                     {\n" +
						"                        \"description\": \"HU 2.2 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"BG\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                        \"weight\": \"90\",\n" +
						"                        \"class\": \"5.1\",\n" +
						"                        \"unnaNumber\": \"1479\",\n" +
						"                        \"propername\": \"Oxidizing solid, n.o.s.\",\n" +
						"                       \"technicalName\": \"\",\n" +
						"                       \"packagingGroup\": \"I\",\n" +
						"                       \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"  \"shipmentTotals\": {\n" +
						"    \"grossWeight\": \"1700\",\n" +
						"    \"netWeight\": \"\",\n" +
						"    \"handlingUnits\": \"15\",\n" +
						"    \"linearLength\": \"\",\n" +
						"    \"cubicFeet\": \"\",\n" +
						"    \"declaredValue\":\"\",\n" +
						"    \"currency\": \"\"\n" +
						"  },\n" +
						"  \"accessorials\": {\n" +
						"    \"codes\": [\n" +
						"        \"HAZ\",\n" +
						"        \"GTD_Noon\"\n" +
						"    ],\n" +
						"    \"hazardousDetails\": {\n" +
						"      \"emergencyContact\": {\n" +
						"        \"name\": \"HAZ Emergency Contact Name\",\n" +
						"        \"phone\": \"8043531900\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"cod\": {\n" +
						"      \"amount\": \"\",\n" +
						"      \"terms\": \"\",\n" +
						"      \"customerCheckAcceptable\": \"\",\n" +
						"      \"remitTo\": {\n" +
						"        \"name\": \"\",\n" +
						"        \"address1\": \"\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"\",\n" +
						"        \"stateProvince\": \"\",\n" +
						"        \"postalCode\": \"\",\n" +
						"        \"country\": \"\"\n" +
						"      }\n" +
						"    },\n" +
						"    \"sortAndSegregateDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"       \"fullValueCoverageDetails\": {\n" +
						"       \"monetaryValue\":\"\",\n" +
						"       \"currency\": \"\"\n" +
						"    },\n" +
						"    \"markDetails\": {\n" +
						"      \"pieces\": \"\"\n" +
						"    },\n" +
						"    \"limitedAccessType\": {\n" +
						"      \"origin\": \"\",\n" +
						"      \"destination\": \"\"\n" +
						"    },\n" +
						"    \"timeCriticalDetails\": {\n" +
						"      \"type\": \"\",\n" +
						"      \"date\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"\n" +
						"      }\n" +
						"    },\n" +
						"    \"appointmentDetails\": {\n" +
						"      \"pickup\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      },\n" +
						"      \"delivery\": {\n" +
						"        \"start\": \"\",\n" +
						"        \"end\": \"\"\n" +
						"      }\n" +
						"    }\n" +
						"  },\n" +
						"  \"origin\": {\n" +
						"    \"account\": \"B025432\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"Home Depot PRO 3267\",\n" +
						"    \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Richmond\",\n" +
						"    \"stateProvince\": \"VA\",\n" +
						"    \"postalCode\": \"23231\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"5552226666\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"destination\": {\n" +
						"    \"account\": \"\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"James River Equipment Sales\",\n" +
						"    \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"    \"address2\": \" \",\n" +
						"    \"city\": \"Aberdeen\",\n" +
						"    \"stateProvince\": \"OH\",\n" +
						"    \"postalCode\": \"45101\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8045551212\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"billTo\": {\n" +
						"    \"account\": \"5019765\",\n" +
						"    \"locationId\": \"\",\n" +
						"    \"name\": \"MIRANDA TMS\",\n" +
						"    \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"    \"address2\": \"\",\n" +
						"    \"city\": \"Snata Monica\",\n" +
						"    \"stateProvince\": \"CA\",\n" +
						"    \"postalCode\": \"90405\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"3104738885\",\n" +
						"      \"phoneExt\": \"\",\n" +
						"      \"name\": \"\",\n" +
						"      \"email\": \"\"\n" +
						"    }\n" +
						"  },\n" +
						"  \"customsBroker\": {\n" +
						"    \"type\": \"export\", \n" +
						"    \"name\": \"API Integration\",\n" +
						"    \"address1\": \"3000 E Grand Ave\",\n" +
						"    \"address2\": \"Customer Broker Suite \",\n" +
						"    \"city\": \"Des Moines\",\n" +
						"    \"stateProvince\": \"IA\",\n" +
						"    \"postalCode\": \"50317\",\n" +
						"    \"country\": \"USA\",\n" +
						"    \"contact\": {\n" +
						"      \"phone\": \"8043531900\",\n" +
						"      \"phoneExt\": \"1357902468\",\n" +
						"      \"name\": \"Customs Broker Contact Name\",\n" +
						"      \"email\": \"CustomerBroker@gmail.com\"\n" +
						"    }\n" +
						"  }  \n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0213"))
				.body("messageStatus.information[0].message", equalTo("Hazardous technical name should not be blanks for UNNA# 1479. Call 866-ESTES4U (378-3748)for assistance or contact your local terminal."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 *
	 * BOL PDF Verify when the JSON request is submitted & commoditites.handlingUnits.lineItems.packagingType
	 * is an Estes LI packaging.type & a valid response is received then the correct line item packagingType
	 * display on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 117)
	public void executeQZ_12983() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third Party\",\n" +
						"        \"specialInstructions\": \"Please Read The Customer Special Instructions section - Up to 500 chars\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": true,\n" +
						"        \"includeShippingLabels\": true,\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": 12,\n" +
						"            \"position\": 2\n" +
						"        }\n" +
						"    },\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"SIDMainID08312022\",\n" +
						"        \"masterBol\": \"MasterBOL08312022\",\n" +
						"        \"bol\": [\n" +
						"            \"BL08312022-FIRST\"\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"PREPAID\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 2,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"tareWeigh\": 50,\n" +
						"                \"weight\": 1500,\n" +
						"                \"length\": 96,\n" +
						"                \"width\": 12,\n" +
						"                \"height\": 8,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 1300,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"SK\",\n" +
						"                \"tareWeigh\": 250,\n" +
						"                \"weight\": 2750,\n" +
						"                \"length\": 120,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU-2.1\",\n" +
						"                        \"weight\": 1500,\n" +
						"                        \"pieces\": 4,\n" +
						"                        \"packagingType\": \"BD\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"200130\",\n" +
						"                        \"nmfcSub\": \"5\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"CR\",\n" +
						"                \"tareWeigh\": 150,\n" +
						"                \"weight\": 1750,\n" +
						"                \"length\": 60,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.1\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 6,\n" +
						"                        \"packagingType\": \"TO\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.2\",\n" +
						"                        \"weight\": 700,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"123940\",\n" +
						"                        \"nmfcSub\": \"1\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.3\",\n" +
						"                        \"weight\": 300,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"KT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"150370\",\n" +
						"                        \"nmfcSub\": \"4\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"OVR\",\n" +
						"            \"IDL\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B062273\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \" Talbots 4053 Origin Acct 30 ch Extra Data for Label Display\",\n" +
						"        \"address1\": \"7100 S CROATAN HWY 51 30 chara Address\",\n" +
						"        \"address2\": \"TANGER OUTLET CENTER 30 charac Address 2 Extra Data for Label Display\",\n" +
						"        \"city\": \"nags head\",\n" +
						"        \"stateProvince\": \"nc\",\n" +
						"        \"postalCode\": \"27959\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045038175\",\n" +
						"            \"phoneExt\": \"1357924680\",\n" +
						"            \"name\": \"Mr. Shipper Contact 30 characters, Extra Data for Label Display\",\n" +
						"            \"email\": \"Shipper@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"GROUP 30 charac CONSIGNEE\",\n" +
						"        \"address1\": \"WHITFIELD AVE 300\",\n" +
						"        \"address2\": \"Address line 2\",\n" +
						"        \"city\": \"Hamilton\",\n" +
						"        \"stateProvince\": \"ON\",\n" +
						"        \"postalCode\": \"L8L4B5\",\n" +
						"        \"country\": \"CAN\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"7721231234\",\n" +
						"            \"phoneExt\": \"9876543210\",\n" +
						"            \"name\": \"Mr. Destination Contact 30 chars, Extra Data for Label Display\",\n" +
						"            \"email\": \"Consignee@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"B020310\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \" TALBOTS\",\n" +
						"        \"address1\": \"1 TALBOT RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"HINGHAM\",\n" +
						"        \"stateProvince\": \"MA\",\n" +
						"        \"postalCode\": \"02043\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"2524490237\",\n" +
						"            \"phoneExt\": \"3170\",\n" +
						"            \"name\": \"Bill To Contact Name\",\n" +
						"            \"email\": \"BillToEmail@yahoo.com\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("ROLLS"));
		Assert.assertTrue(bolText.contains("BUNDLES"));
		Assert.assertTrue(bolText.contains("BOXES"));
		Assert.assertTrue(bolText.contains("TOTES"));
		Assert.assertTrue(bolText.contains("CARTONS"));
		Assert.assertTrue(bolText.contains("KITS"));

	}

	/**
	 * @author qcuthbert
	 *
	 * BOL PDF Verify when the JSON request is submitted & commoditites.handlingUnits.type is an Estes HU type &
	 * a valid response is received then the correct  HU type display on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 118)
	public void executeQZ_12985() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third Party\",\n" +
						"        \"specialInstructions\": \"Please Read The Customer Special Instructions section - Up to 500 chars\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": true,\n" +
						"        \"includeShippingLabels\": true,\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": 12,\n" +
						"            \"position\": 2\n" +
						"        }\n" +
						"    },\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"SIDMainID08312022\",\n" +
						"        \"masterBol\": \"MasterBOL08312022\",\n" +
						"        \"bol\": [\n" +
						"            \"BL08312022-FIRST\"\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"PREPAID\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 2,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"tareWeigh\": 50,\n" +
						"                \"weight\": 1500,\n" +
						"                \"length\": 96,\n" +
						"                \"width\": 12,\n" +
						"                \"height\": 8,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 1300,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"SK\",\n" +
						"                \"tareWeigh\": 250,\n" +
						"                \"weight\": 2750,\n" +
						"                \"length\": 120,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU-2.1\",\n" +
						"                        \"weight\": 1500,\n" +
						"                        \"pieces\": 4,\n" +
						"                        \"packagingType\": \"BD\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BX\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"200130\",\n" +
						"                        \"nmfcSub\": \"5\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"CR\",\n" +
						"                \"tareWeigh\": 150,\n" +
						"                \"weight\": 1750,\n" +
						"                \"length\": 60,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": true,\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.1\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 6,\n" +
						"                        \"packagingType\": \"TO\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"86900\",\n" +
						"                        \"nmfcSub\": \"3\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.2\",\n" +
						"                        \"weight\": 700,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"123940\",\n" +
						"                        \"nmfcSub\": \"1\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 3.3\",\n" +
						"                        \"weight\": 300,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"KT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"150370\",\n" +
						"                        \"nmfcSub\": \"4\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"OVR\",\n" +
						"            \"IDL\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B062273\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \" Talbots 4053 Origin Acct 30 ch Extra Data for Label Display\",\n" +
						"        \"address1\": \"7100 S CROATAN HWY 51 30 chara Address\",\n" +
						"        \"address2\": \"TANGER OUTLET CENTER 30 charac Address 2 Extra Data for Label Display\",\n" +
						"        \"city\": \"nags head\",\n" +
						"        \"stateProvince\": \"nc\",\n" +
						"        \"postalCode\": \"27959\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045038175\",\n" +
						"            \"phoneExt\": \"1357924680\",\n" +
						"            \"name\": \"Mr. Shipper Contact 30 characters, Extra Data for Label Display\",\n" +
						"            \"email\": \"Shipper@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"GROUP 30 charac CONSIGNEE\",\n" +
						"        \"address1\": \"WHITFIELD AVE 300\",\n" +
						"        \"address2\": \"Address line 2\",\n" +
						"        \"city\": \"Hamilton\",\n" +
						"        \"stateProvince\": \"ON\",\n" +
						"        \"postalCode\": \"L8L4B5\",\n" +
						"        \"country\": \"CAN\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"7721231234\",\n" +
						"            \"phoneExt\": \"9876543210\",\n" +
						"            \"name\": \"Mr. Destination Contact 30 chars, Extra Data for Label Display\",\n" +
						"            \"email\": \"Consignee@Estes-Express.com\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"B020310\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \" TALBOTS\",\n" +
						"        \"address1\": \"1 TALBOT RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"HINGHAM\",\n" +
						"        \"stateProvince\": \"MA\",\n" +
						"        \"postalCode\": \"02043\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"2524490237\",\n" +
						"            \"phoneExt\": \"3170\",\n" +
						"            \"name\": \"Bill To Contact Name\",\n" +
						"            \"email\": \"BillToEmail@yahoo.com\"\n" +
						"        }\n" +
						"    }" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("PALLETS"));
		Assert.assertTrue(bolText.contains("SKIDS"));
		Assert.assertTrue(bolText.contains("CRATES"));

	}

	/**
	 * @author qcuthbert
	 *
	 * BOL API Verify when multi HAZ & the JSON request is submitted & any of the
	 * commodities.lineItems.hazardousDetails.unnaNumber is blank but the associated
	 * combination is found in the HAZ table then the HAZ data displays properly on the PDF
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 119)
	public void executeQZ_12981() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"SHipper\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"4\",\n" +
						"            \"position\": \"1\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL@test.com\",\n" +
						"                    \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"custShiId082322\",\n" +
						"        \"masterBol\": \"MASTERBOL08232022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL080922\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"12345678\",\n" +
						"                \"pieces\": \"4\",\n" +
						"                \"weight\": \"1750\",\n" +
						"                \"palletized\": \"true\",\n" +
						"                \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"SID\",\n" +
						"                \"value\": \"SID080923\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"tareWeight\": \"250\",\n" +
						"                \"length\": 70,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 50,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 750,\n" +
						"                        \"pieces\": 20,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"700\",\n" +
						"                            \"class\": \"ORM-D\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"Cartridges, power device\",\n" +
						"                            \"technicalName\": \"Tech Name: Cartridges, power device No UNNANumber\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"ct\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"2000\",\n" +
						"        \"netWeight\": \"1750\",\n" +
						"        \"handlingUnits\": \"4\",\n" +
						"        \"linearLength\": \"70\",\n" +
						"        \"cubicFeet\": \"388\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"IDL\",\n" +
						"            \"RES\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"Haz Name\",\n" +
						"                \"phone\": \"8881231234\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"21\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"0102260\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AIR FILTERS INC\",\n" +
						"        \"address1\": \"3920 INDUSTRY AVE\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23234\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8881231234\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("PALLETS"));
		Assert.assertTrue(bolText.contains("SKIDS"));
		Assert.assertTrue(bolText.contains("CRATES"));

	}

	/**
	 * @author qcuthbert
	 *
	 * BOL PDF Verify when the JSON request is submitted & multi lineItem HAZ data is provided and a valid response
	 * is received then the HAZ info for each lineItem display as expected & in the correct order in the Commodity
	 * Description section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 120)
	public void executeQZ_12979() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third Party\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL Demo Template\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"7\",\n" +
						"            \"position\": \"2\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL1@test.com\",\n" +
						"                    \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"\",\n" +
						"        \"masterBol\": \"MasterBOL08122022\",\n" +
						"        \"bol\": [\n" +
						"            \"\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"PO12345\",\n" +
						"                \"pieces\": \"15\",\n" +
						"                \"weight\": \"1675\",\n" +
						"                \"palletized\": \"false\",\n" +
						"                \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"\",\n" +
						"                \"value\": \"\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Prepaid\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"RE\",\n" +
						"                \"weight\": 1700,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"880\",\n" +
						"                            \"unnaNumber\": \"9202\",\n" +
						"                            \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                            \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                            \"class\": \"2.3(2.1)\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                             \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"true\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"true\",\n" +
						"                            \"residueLastContained\": \"false\",\n" +
						"                            \"dotExemption\": \"E123456\",\n" +
						"                            \"reportableQuantity\": \"TRUE\",\n" +
						"                            \"hazardZone\": \"C\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"600\",\n" +
						"                            \"unnaNumber\": \"8000\",\n" +
						"                            \"propername\": \"Consumer commodity\",\n" +
						"                            \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                            \"class\": \"9\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"True\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"SP111666\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"D\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BR\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 75,\n" +
						"                        \"pieces\": 4,\n" +
						"                        \"packagingType\": \"JC\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"70\",\n" +
						"                            \"class\": \"ORM-D\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"Cartridges, power device\",\n" +
						"                            \"technicalName\": \"Tech Name: Cartridges, power device No UNNANumber\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"true\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"E666666\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"BG\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"90\",\n" +
						"                            \"class\": \"4.2\",\n" +
						"                            \"unnaNumber\": \"1386\",\n" +
						"                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                            \"packagingGroup\": \"III\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"SP123456\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"\",\n" +
						"        \"netWeight\": \"\",\n" +
						"        \"handlingUnits\": \"15\",\n" +
						"        \"linearLength\": \"\",\n" +
						"        \"cubicFeet\": \"\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"HAZ\",\n" +
						"            \"GTD_Noon\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Emergency Contact Name\",\n" +
						"                \"phone\": \"8043531900\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"\",\n" +
						"            \"terms\": \"\",\n" +
						"            \"customerCheckAcceptable\": \"\",\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"address1\": \"\",\n" +
						"                \"address2\": \"\",\n" +
						"                \"city\": \"\",\n" +
						"                \"stateProvince\": \"\",\n" +
						"                \"postalCode\": \"\",\n" +
						"                \"country\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B025432\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"Home Depot PRO 3267\",\n" +
						"        \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"        \"address2\": \"Nora test2-already reserved PRO\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23231\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"5552226666\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"James River Equipment Sales\",\n" +
						"        \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"        \"address2\": \"PRO 001-8128190\",\n" +
						"        \"city\": \"Aberdeen\",\n" +
						"        \"stateProvince\": \"OH\",\n" +
						"        \"postalCode\": \"45101\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045551212\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"5019765\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"MIRANDA TMS\",\n" +
						"        \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Snata Monica\",\n" +
						"        \"stateProvince\": \"CA\",\n" +
						"        \"postalCode\": \"90405\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"3104738885\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"customsBroker\": {\n" +
						"        \"type\": \"export\",\n" +
						"        \"name\": \"API Integration\",\n" +
						"        \"address1\": \"3000 E Grand Ave\",\n" +
						"        \"address2\": \"Customer Broker Suite \",\n" +
						"        \"city\": \"Des Moines\",\n" +
						"        \"stateProvince\": \"IA\",\n" +
						"        \"postalCode\": \"50317\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8043531900\",\n" +
						"            \"phoneExt\": \"1357902468\",\n" +
						"            \"name\": \"Customs Broker Contact Name\",\n" +
						"            \"email\": \"CustomerBroker@gmail.com\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		System.out.println(bolText);

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("NA9202, CARBON MONOXIDE,"));
		Assert.assertTrue(bolText.contains("ID8000, CONSUMER COMMODITY, (TECH"));
		Assert.assertTrue(bolText.contains("CARTRIDGES, POWER DEVICE, (TECH"));
		Assert.assertTrue(bolText.contains("UN1386, SEED CAKE, CONTAINING"));

	}

	/**
	 * @author qcuthbert
	 *
	 * BOL PDF Verify when the JSON request is submitted & multi *lineItems.hazardousExtras.* data is
	 * added & a valid response is received then all hazardousExtras data displays in the expected order
	 * on the PDF commodity description section
	 * Description section
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 121)
	public void executeQZ_13064() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";

		String businessDate = testUtil.addFutureWeekDay();
		String pickupDate[] = businessDate.split("/");

		String futureDate = pickupDate[2] + "-" + pickupDate[0] + "-" + pickupDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third Party\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL Demo Template\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"7\",\n" +
						"            \"position\": \"2\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL1@test.com\",\n" +
						"                    \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"\",\n" +
						"        \"masterBol\": \"MasterBOL08122022\",\n" +
						"        \"bol\": [\n" +
						"            \"\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"\",\n" +
						"                \"value\": \"\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Prepaid\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"RE\",\n" +
						"                \"weight\": 1700,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"880\",\n" +
						"                            \"unnaNumber\": \"9202\",\n" +
						"                            \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                            \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                            \"class\": \"2.3(2.1)\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                             \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"true\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"true\",\n" +
						"                            \"residueLastContained\": \"true\",\n" +
						"                            \"dotExemption\": \"E123456\",\n" +
						"                            \"reportableQuantity\": \"TRUE\",\n" +
						"                            \"hazardZone\": \"C\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"600\",\n" +
						"                            \"unnaNumber\": \"8000\",\n" +
						"                            \"propername\": \"Consumer commodity\",\n" +
						"                            \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                            \"class\": \"9\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"True\",\n" +
						"                            \"residueLastContained\": \"True\",\n" +
						"                            \"dotExemption\": \"SP111666\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"D\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"\",\n" +
						"        \"netWeight\": \"\",\n" +
						"        \"handlingUnits\": \"\",\n" +
						"        \"linearLength\": \"\",\n" +
						"        \"cubicFeet\": \"\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"HAZ\",\n" +
						"            \"GTD_Noon\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Emergency Contact Name\",\n" +
						"                \"phone\": \"8043531900\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"\",\n" +
						"            \"terms\": \"\",\n" +
						"            \"customerCheckAcceptable\": \"\",\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"address1\": \"\",\n" +
						"                \"address2\": \"\",\n" +
						"                \"city\": \"\",\n" +
						"                \"stateProvince\": \"\",\n" +
						"                \"postalCode\": \"\",\n" +
						"                \"country\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B025432\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"Home Depot PRO 3267\",\n" +
						"        \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"        \"address2\": \"Nora test2-already reserved PRO\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23231\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"5552226666\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"James River Equipment Sales\",\n" +
						"        \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"        \"address2\": \"PRO 001-8128190\",\n" +
						"        \"city\": \"Aberdeen\",\n" +
						"        \"stateProvince\": \"OH\",\n" +
						"        \"postalCode\": \"45101\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045551212\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"5019765\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"MIRANDA TMS\",\n" +
						"        \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Snata Monica\",\n" +
						"        \"stateProvince\": \"CA\",\n" +
						"        \"postalCode\": \"90405\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"3104738885\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"customsBroker\": {\n" +
						"        \"type\": \"export\",\n" +
						"        \"name\": \"API Integration\",\n" +
						"        \"address1\": \"3000 E Grand Ave\",\n" +
						"        \"address2\": \"Customer Broker Suite \",\n" +
						"        \"city\": \"Des Moines\",\n" +
						"        \"stateProvince\": \"IA\",\n" +
						"        \"postalCode\": \"50317\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8043531900\",\n" +
						"            \"phoneExt\": \"1357902468\",\n" +
						"            \"name\": \"Customs Broker Contact Name\",\n" +
						"            \"email\": \"CustomerBroker@gmail.com\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(200).statusLine("HTTP/1.1 200 Success")
				.body("referenceNumbers.pro", notNullValue())
				.body("referenceNumbers.shipmentConfirmationNumber", notNullValue())
				.body("messageStatus.status", equalTo("PASS"))
				.body("messageStatus.code", equalTo("10000000"))
				.body("messageStatus.message", equalTo("Transaction was successful"))
				.body("messageStatus.resolution", equalTo(""))
				.extract().response();

		String bol = response.jsonPath().getString("images.bol");
		String pro = response.jsonPath().getString("referenceNumbers.pro");

		URL bolURL = new URL(bol);
		BufferedInputStream bolContents = new BufferedInputStream(bolURL.openStream());
		PDFParser parseBol = new PDFParser(bolContents);
		parseBol.parse();
		String bolText = new PDFTextStripper().getText(parseBol.getPDDocument());

		System.out.println(bolText);

		Assert.assertTrue(bolText.contains(pro));
		Assert.assertTrue(bolText.contains("RQ"));
		Assert.assertTrue(bolText.contains("Residue Last Contained, NA9202, CARBON"));
		Assert.assertTrue(bolText.contains("MONOXIDE, REFRIGERATED LIQUID"));
		Assert.assertTrue(bolText.contains("(CRYOGENIC LIQUID)., (TECH NAME:"));
		Assert.assertTrue(bolText.contains("CARBON MONOXIDE, REFRIGERATED"));
		Assert.assertTrue(bolText.contains("LIQUID), 2.3(2.1), Limited Quantity, Marine"));
		Assert.assertTrue(bolText.contains("Polluntant, Toxic Inhalation Hazard, Poison")); // spelling error-- may need to be updated to 'pollutant'
		Assert.assertTrue(bolText.contains("X"));
		Assert.assertTrue(bolText.contains("HU 1.2 STUFF"));
		Assert.assertTrue(bolText.contains("Residue Last Contained, ID8000,"));
		Assert.assertTrue(bolText.contains("CONSUMER COMMODITY, (TECH NAME: ID"));
		Assert.assertTrue(bolText.contains("PREFIX), 9, Limited Quantity, Toxic Inhalation"));
		Assert.assertTrue(bolText.contains("Hazard, Poison Inhalation Hazard, DOT"));
		Assert.assertTrue(bolText.contains("SP111666, D, 600 LBS"));
	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.reportableQuantity
	 * is true but other required Hazmat data is not provided then an error message is returned (EBG0244)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 122)
	public void executeQZ_13065() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"SHipper\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"4\",\n" +
						"            \"position\": \"1\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL@test.com\",\n" +
						"                    \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"custShiId082322\",\n" +
						"        \"masterBol\": \"MASTERBOL08232022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL080922\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"12345678\",\n" +
						"                \"pieces\": \"4\",\n" +
						"                \"weight\": \"1750\",\n" +
						"                \"palletized\": \"true\",\n" +
						"                \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"SID\",\n" +
						"                \"value\": \"SID080923\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"tareWeight\": \"250\",\n" +
						"                \"length\": 70,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 50,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 750,\n" +
						"                        \"pieces\": 20,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"ct\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"\",\n" +
						"                            \"reportableQuantity\": \"TRUE\",\n" +
						"                            \"hazardZone\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"2000\",\n" +
						"        \"netWeight\": \"1750\",\n" +
						"        \"handlingUnits\": \"4\",\n" +
						"        \"linearLength\": \"70\",\n" +
						"        \"cubicFeet\": \"388\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"IDL\",\n" +
						"            \"RES\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"phone\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"21\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"0102260\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AIR FILTERS INC\",\n" +
						"        \"address1\": \"3920 INDUSTRY AVE\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23234\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8881231234\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0244"))
				.body("messageStatus.information[0].message", equalTo("Commodities.lineItems [*].hazardous is false but have Comodities.lineItems [*].hazardousExtras [*].* values. Please set hazardous value to true or remove the hazardousExtras and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.dotExemption is added &
	 * keyed in value is NOT E or SP followed by exactly 6 numbers then an error message is returned (EBG0243)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 123)
	public void executeQZ_13073() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"SHipper\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"4\",\n" +
						"            \"position\": \"1\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL@test.com\",\n" +
						"                    \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"custShiId082322\",\n" +
						"        \"masterBol\": \"MASTERBOL08232022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL080922\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"12345678\",\n" +
						"                \"pieces\": \"4\",\n" +
						"                \"weight\": \"1750\",\n" +
						"                \"palletized\": \"true\",\n" +
						"                \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"SID\",\n" +
						"                \"value\": \"SID080923\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"tareWeight\": \"250\",\n" +
						"                \"length\": 70,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 50,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 750,\n" +
						"                        \"pieces\": 20,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"90\",\n" +
						"                            \"class\": \"4.2\",\n" +
						"                            \"unnaNumber\": \"1386\",\n" +
						"                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                            \"packagingGroup\": \"III\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"DOT-E123456\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"ct\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"2000\",\n" +
						"        \"netWeight\": \"1750\",\n" +
						"        \"handlingUnits\": \"4\",\n" +
						"        \"linearLength\": \"70\",\n" +
						"        \"cubicFeet\": \"388\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"IDL\",\n" +
						"            \"RES\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Contact Name\",\n" +
						"                \"phone\": \"8881231234\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"21\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"0102260\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AIR FILTERS INC\",\n" +
						"        \"address1\": \"3920 INDUSTRY AVE\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23234\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8881231234\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0243"))
				.body("messageStatus.information[0].message", equalTo("Invalid dotExemption. Valid values are 'E' or 'SP' followed by 6 numbers. Please provide correct dotExemption value and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.limitedQuantity is
	 * true but other required Hazmat data is not provided then an error message is returned (EBG0244)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 124)
	public void executeQZ_13075() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"SHipper\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"4\",\n" +
						"            \"position\": \"1\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL@test.com\",\n" +
						"                    \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"custShiId082322\",\n" +
						"        \"masterBol\": \"MASTERBOL08232022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL080922\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"12345678\",\n" +
						"                \"pieces\": \"4\",\n" +
						"                \"weight\": \"1750\",\n" +
						"                \"palletized\": \"true\",\n" +
						"                \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"SID\",\n" +
						"                \"value\": \"SID080923\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"tareWeight\": \"250\",\n" +
						"                \"length\": 70,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 50,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 750,\n" +
						"                        \"pieces\": 20,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"90\",\n" +
						"                            \"class\": \"4.2\",\n" +
						"                            \"unnaNumber\": \"1386\",\n" +
						"                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                            \"packagingGroup\": \"III\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"E123456\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"ct\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"TRUE\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"2000\",\n" +
						"        \"netWeight\": \"1750\",\n" +
						"        \"handlingUnits\": \"4\",\n" +
						"        \"linearLength\": \"70\",\n" +
						"        \"cubicFeet\": \"388\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"IDL\",\n" +
						"            \"RES\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Contact Name\",\n" +
						"                \"phone\": \"8881231234\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"21\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"0102260\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AIR FILTERS INC\",\n" +
						"        \"address1\": \"3920 INDUSTRY AVE\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23234\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8881231234\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0244"))
				.body("messageStatus.information[0].message", equalTo("Commodities.lineItems [*].hazardous is false but have Comodities.lineItems [*].hazardousExtras [*].* values. Please set hazardous value to true or remove the hazardousExtras and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.residueLastContained
	 * is true but other required Hazmat data is not provided then an error message is returned (EBG0244)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 124)
	public void executeQZ_13078() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"SHipper\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL DEMO TEMPLATE\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"4\",\n" +
						"            \"position\": \"1\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL@test.com\",\n" +
						"                    \"includeLabels@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates1@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates2@test.com\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"custShiId082322\",\n" +
						"        \"masterBol\": \"MASTERBOL08232022\",\n" +
						"        \"bol\": [\n" +
						"            \"BOL080922\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"12345678\",\n" +
						"                \"pieces\": \"4\",\n" +
						"                \"weight\": \"1750\",\n" +
						"                \"palletized\": \"true\",\n" +
						"                \"additionalShipperInfo\": \"8 Numeric PO Number\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"SID\",\n" +
						"                \"value\": \"SID080923\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Collect\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 4,\n" +
						"                \"type\": \"PT\",\n" +
						"                \"weight\": 2000,\n" +
						"                \"tareWeight\": \"250\",\n" +
						"                \"length\": 70,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 50,\n" +
						"                \"stackable\": \"true\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1\",\n" +
						"                        \"weight\": 750,\n" +
						"                        \"pieces\": 20,\n" +
						"                        \"packagingType\": \"RL\",\n" +
						"                        \"classification\": \"50\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"90\",\n" +
						"                            \"class\": \"4.2\",\n" +
						"                            \"unnaNumber\": \"1386\",\n" +
						"                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                            \"packagingGroup\": \"III\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"E123456\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2\",\n" +
						"                        \"weight\": 1000,\n" +
						"                        \"pieces\": 1,\n" +
						"                        \"packagingType\": \"ct\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": false,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"\",\n" +
						"                            \"class\": \"\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"\",\n" +
						"                            \"technicalName\": \"\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"True\",\n" +
						"                            \"dotExemption\": \"\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"2000\",\n" +
						"        \"netWeight\": \"1750\",\n" +
						"        \"handlingUnits\": \"4\",\n" +
						"        \"linearLength\": \"70\",\n" +
						"        \"cubicFeet\": \"388\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"GTD_AM\",\n" +
						"            \"IDL\",\n" +
						"            \"RES\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Contact Name\",\n" +
						"                \"phone\": \"8881231234\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"21\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"0102260\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"AIR FILTERS INC\",\n" +
						"        \"address1\": \"3920 INDUSTRY AVE\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23234\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8881231234\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"0145321\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"INGENCO\",\n" +
						"        \"address1\": \"2250 DABNEY RD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23230\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8882342345\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0244"))
				.body("messageStatus.information[0].message", equalTo("Commodities.lineItems [*].hazardous is false but have Comodities.lineItems [*].hazardousExtras [*].* values. Please set hazardous value to true or remove the hazardousExtras and resubmit your request."))
				.extract().response();

	}

	/**
	 * @author qcuthbert
	 * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.hazardZone value
	 * is B & line items weight is greater than 882 lbs then an error message is returned (EBG0242)
	 * @throws Exception
	 */

	@Test(enabled = true, priority = 125)
	public void executeQZ_13080() throws Exception {
		RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
		String businessDate = testUtil.addFutureWeekDay2();
		String deliveryDate[] = businessDate.split("/");
		String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

		Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
				.body("{\n" +
						"    \"bol\": {\n" +
						"    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
						"        \"function\": \"Create\",\n" +
						"        \"isTest\": true,\n" +
						"        \"requestorRole\": \"Third Party\",\n" +
						"        \"specialInstructions\": \"Integration Scenario\",\n" +
						"        \"templateName\": \"BOL Demo Template\"\n" +
						"    },\n" +
						"    \"images\": {\n" +
						"        \"includeBol\": \"true\",\n" +
						"        \"includeShippingLabels\": \"true\",\n" +
						"        \"shippingLabels\": {\n" +
						"            \"format\": \"Avery\",\n" +
						"            \"quantity\": \"7\",\n" +
						"            \"position\": \"2\"\n" +
						"        },\n" +
						"        \"email\": [\n" +
						"            {\n" +
						"                \"includeBol\": \"true\",\n" +
						"                \"includeLabels\": \"true\",\n" +
						"                \"addresses\": [\n" +
						"                    \"includeBOL1@test.com\",\n" +
						"                    \"includeBOL2@test.com\"\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"notifications\": [\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"sendNotificationUpdates@test.com\"\n" +
						"        },\n" +
						"        {\n" +
						"            \"phoneNumber\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    ],\n" +
						"    \"referenceNumbers\": {\n" +
						"        \"pro\": \"\",\n" +
						"        \"estimate\": \"\",\n" +
						"        \"shipmentId\": \"\",\n" +
						"        \"masterBol\": \"MasterBOL08122022\",\n" +
						"        \"bol\": [\n" +
						"            \"\",\n" +
						"            \"\"\n" +
						"        ],\n" +
						"        \"po\": [\n" +
						"            {\n" +
						"                \"number\": \"PO12345\",\n" +
						"                \"pieces\": \"15\",\n" +
						"                \"weight\": \"1675\",\n" +
						"                \"palletized\": \"false\",\n" +
						"                \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
						"            }\n" +
						"        ],\n" +
						"        \"additionalReferences\": [\n" +
						"            {\n" +
						"                \"name\": \"\",\n" +
						"                \"value\": \"\"\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"payment\": {\n" +
						"        \"terms\": \"Prepaid\"\n" +
						"    },\n" +
						"    \"commodities\": {\n" +
						"        \"handlingUnits\": [\n" +
						"            {\n" +
						"                \"count\": 3,\n" +
						"                \"type\": \"RE\",\n" +
						"                \"weight\": 1700,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 89,\n" +
						"                \"width\": 48,\n" +
						"                \"height\": 48,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.1 STUFF\",\n" +
						"                        \"weight\": 900,\n" +
						"                        \"pieces\": 24,\n" +
						"                        \"packagingType\": \"BOX\",\n" +
						"                        \"classification\": \"60\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"883\",\n" +
						"                            \"unnaNumber\": \"9202\",\n" +
						"                            \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
						"                            \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
						"                            \"class\": \"2.3(2.1)\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                             \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"true\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"true\",\n" +
						"                            \"residueLastContained\": \"false\",\n" +
						"                            \"dotExemption\": \"E123456\",\n" +
						"                            \"reportableQuantity\": \"TRUE\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 1.2 STUFF\",\n" +
						"                        \"weight\": 600,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"CT\",\n" +
						"                        \"classification\": \"70\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"600\",\n" +
						"                            \"unnaNumber\": \"8000\",\n" +
						"                            \"propername\": \"Consumer commodity\",\n" +
						"                            \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
						"                            \"class\": \"9\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 1\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"True\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"SP111666\",\n" +
						"                            \"reportableQuantity\": \"\",\n" +
						"                            \"hazardZone\": \"D\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            },\n" +
						"            {\n" +
						"                \"count\": 12,\n" +
						"                \"type\": \"BR\",\n" +
						"                \"weight\": 200,\n" +
						"                \"tareWeight\": \"\",\n" +
						"                \"length\": 24,\n" +
						"                \"width\": 24,\n" +
						"                \"height\": 24,\n" +
						"                \"stackable\": \"\",\n" +
						"                \"lineItems\": [\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.1 STUFF\",\n" +
						"                        \"weight\": 75,\n" +
						"                        \"pieces\": 4,\n" +
						"                        \"packagingType\": \"JC\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"70\",\n" +
						"                            \"class\": \"ORM-D\",\n" +
						"                            \"unnaNumber\": \"\",\n" +
						"                            \"propername\": \"Cartridges, power device\",\n" +
						"                            \"technicalName\": \"Tech Name: Cartridges, power device No UNNANumber\",\n" +
						"                            \"packagingGroup\": \"\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"true\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"E666666\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    },\n" +
						"                    {\n" +
						"                        \"description\": \"HU 2.2 STUFF\",\n" +
						"                        \"weight\": 100,\n" +
						"                        \"pieces\": 8,\n" +
						"                        \"packagingType\": \"BG\",\n" +
						"                        \"classification\": \"55\",\n" +
						"                        \"nmfc\": \"\",\n" +
						"                        \"nmfcSub\": \"\",\n" +
						"                        \"hazardous\": true,\n" +
						"                        \"hazardousDescription\": \"\",\n" +
						"                        \"hazardousDetails\": {\n" +
						"                            \"weight\": \"90\",\n" +
						"                            \"class\": \"4.2\",\n" +
						"                            \"unnaNumber\": \"1386\",\n" +
						"                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
						"                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
						"                            \"packagingGroup\": \"III\",\n" +
						"                            \"contractNumber\": \"Contract Number 2\"\n" +
						"                        },\n" +
						"                        \"hazardousExtras\": {\n" +
						"                            \"limitedQuantity\": \"true\",\n" +
						"                            \"marinePollutant\": \"\",\n" +
						"                            \"toxicInhalation\": \"true\",\n" +
						"                            \"poisonInhalation\": \"\",\n" +
						"                            \"residueLastContained\": \"\",\n" +
						"                            \"dotExemption\": \"SP123456\",\n" +
						"                            \"reportableQuantity\": \"true\",\n" +
						"                            \"hazardZone\": \"B\"\n" +
						"                        }\n" +
						"                    }\n" +
						"                ]\n" +
						"            }\n" +
						"        ]\n" +
						"    },\n" +
						"    \"shipmentTotals\": {\n" +
						"        \"grossWeight\": \"\",\n" +
						"        \"netWeight\": \"\",\n" +
						"        \"handlingUnits\": \"15\",\n" +
						"        \"linearLength\": \"\",\n" +
						"        \"cubicFeet\": \"\",\n" +
						"        \"declaredValue\": \"\",\n" +
						"        \"currency\": \"\"\n" +
						"    },\n" +
						"    \"accessorials\": {\n" +
						"        \"codes\": [\n" +
						"            \"HAZ\",\n" +
						"            \"GTD_Noon\"\n" +
						"        ],\n" +
						"        \"hazardousDetails\": {\n" +
						"            \"emergencyContact\": {\n" +
						"                \"name\": \"HAZ Emergency Contact Name\",\n" +
						"                \"phone\": \"8043531900\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"cod\": {\n" +
						"            \"amount\": \"\",\n" +
						"            \"terms\": \"\",\n" +
						"            \"customerCheckAcceptable\": \"\",\n" +
						"            \"remitTo\": {\n" +
						"                \"name\": \"\",\n" +
						"                \"address1\": \"\",\n" +
						"                \"address2\": \"\",\n" +
						"                \"city\": \"\",\n" +
						"                \"stateProvince\": \"\",\n" +
						"                \"postalCode\": \"\",\n" +
						"                \"country\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"sortAndSegregateDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"fullValueCoverageDetails\": {\n" +
						"            \"monetaryValue\": \"\",\n" +
						"            \"currency\": \"\"\n" +
						"        },\n" +
						"        \"markDetails\": {\n" +
						"            \"pieces\": \"\"\n" +
						"        },\n" +
						"        \"limitedAccessType\": {\n" +
						"            \"origin\": \"\",\n" +
						"            \"destination\": \"\"\n" +
						"        },\n" +
						"        \"timeCriticalDetails\": {\n" +
						"            \"type\": \"\",\n" +
						"            \"date\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        },\n" +
						"        \"appointmentDetails\": {\n" +
						"            \"pickup\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            },\n" +
						"            \"delivery\": {\n" +
						"                \"start\": \"\",\n" +
						"                \"end\": \"\"\n" +
						"            }\n" +
						"        }\n" +
						"    },\n" +
						"    \"origin\": {\n" +
						"        \"account\": \"B025432\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"Home Depot PRO 3267\",\n" +
						"        \"address1\": \"6000 EASTPORT BLVD\",\n" +
						"        \"address2\": \"Nora test2-already reserved PRO\",\n" +
						"        \"city\": \"Richmond\",\n" +
						"        \"stateProvince\": \"VA\",\n" +
						"        \"postalCode\": \"23231\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"5552226666\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"destination\": {\n" +
						"        \"account\": \"\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"James River Equipment Sales\",\n" +
						"        \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
						"        \"address2\": \"PRO 001-8128190\",\n" +
						"        \"city\": \"Aberdeen\",\n" +
						"        \"stateProvince\": \"OH\",\n" +
						"        \"postalCode\": \"45101\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8045551212\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"billTo\": {\n" +
						"        \"account\": \"5019765\",\n" +
						"        \"locationId\": \"\",\n" +
						"        \"name\": \"MIRANDA TMS\",\n" +
						"        \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
						"        \"address2\": \"\",\n" +
						"        \"city\": \"Snata Monica\",\n" +
						"        \"stateProvince\": \"CA\",\n" +
						"        \"postalCode\": \"90405\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"3104738885\",\n" +
						"            \"phoneExt\": \"\",\n" +
						"            \"name\": \"\",\n" +
						"            \"email\": \"\"\n" +
						"        }\n" +
						"    },\n" +
						"    \"customsBroker\": {\n" +
						"        \"type\": \"export\",\n" +
						"        \"name\": \"API Integration\",\n" +
						"        \"address1\": \"3000 E Grand Ave\",\n" +
						"        \"address2\": \"Customer Broker Suite \",\n" +
						"        \"city\": \"Des Moines\",\n" +
						"        \"stateProvince\": \"IA\",\n" +
						"        \"postalCode\": \"50317\",\n" +
						"        \"country\": \"USA\",\n" +
						"        \"contact\": {\n" +
						"            \"phone\": \"8043531900\",\n" +
						"            \"phoneExt\": \"1357902468\",\n" +
						"            \"name\": \"Customs Broker Contact Name\",\n" +
						"            \"email\": \"CustomerBroker@gmail.com\"\n" +
						"        }\n" +
						"    }\n" +
						"}")
				.when()
				.post(RestAssured.baseURI)
				.then()
				.log().all()
				.statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
				.body("messageStatus.status", equalTo("FAIL"))
				.body("messageStatus.code", equalTo("10000001"))
				.body("messageStatus.message", equalTo("Transaction failed"))
				.body("messageStatus.resolution", equalTo("See message list for possible solutions"))
				.body("messageStatus.information[0].type", equalTo("E"))
				.body("messageStatus.information[0].code", equalTo("EBG0242"))
				.body("messageStatus.information[0].message", equalTo("HazardZone 'B' and hazard weight combination is not valid. Please provide the correct values and resubmit your request."))
				.extract().response();

	}

    /**
     * @author qcuthbert
     * BOL API Verify when the JSON request is submitted & *lineItems.hazardousExtras.hazardZone
     * value is A then an error message is returned (EBG0241)
     * @throws Exception
     */

    @Test(enabled = true, priority = 126)
    public void executeQZ_13082() throws Exception {
        RestAssured.baseURI = "https://uat.apigateway.estes-express.com/rest/EBOL/processEBOL/v1.0";
        String businessDate = testUtil.addFutureWeekDay2();
        String deliveryDate[] = businessDate.split("/");
        String futureDate = deliveryDate[2] + "-" + deliveryDate[0] + "-" + deliveryDate[1];

        Response response = RestAssured.given().auth().basic(username4, password4).contentType(ContentType.JSON).accept(ContentType.JSON)
                .body("{\n" +
                        "    \"bol\": {\n" +
                        "    \"date\": \""+ futureDate +"T00:00:00.000\",\r\n" +
                        "        \"function\": \"Create\",\n" +
                        "        \"isTest\": true,\n" +
                        "        \"requestorRole\": \"Third Party\",\n" +
                        "        \"specialInstructions\": \"Integration Scenario\",\n" +
                        "        \"templateName\": \"BOL Demo Template\"\n" +
                        "    },\n" +
                        "    \"images\": {\n" +
                        "        \"includeBol\": \"true\",\n" +
                        "        \"includeShippingLabels\": \"true\",\n" +
                        "        \"shippingLabels\": {\n" +
                        "            \"format\": \"Avery\",\n" +
                        "            \"quantity\": \"7\",\n" +
                        "            \"position\": \"2\"\n" +
                        "        },\n" +
                        "        \"email\": [\n" +
                        "            {\n" +
                        "                \"includeBol\": \"true\",\n" +
                        "                \"includeLabels\": \"true\",\n" +
                        "                \"addresses\": [\n" +
                        "                    \"includeBOL1@test.com\",\n" +
                        "                    \"includeBOL2@test.com\"\n" +
                        "                ]\n" +
                        "            }\n" +
                        "        ]\n" +
                        "    },\n" +
                        "    \"notifications\": [\n" +
                        "        {\n" +
                        "            \"phoneNumber\": \"\",\n" +
                        "            \"email\": \"sendNotificationUpdates@test.com\"\n" +
                        "        },\n" +
                        "        {\n" +
                        "            \"phoneNumber\": \"\",\n" +
                        "            \"email\": \"\"\n" +
                        "        }\n" +
                        "    ],\n" +
                        "    \"referenceNumbers\": {\n" +
                        "        \"pro\": \"\",\n" +
                        "        \"estimate\": \"\",\n" +
                        "        \"shipmentId\": \"\",\n" +
                        "        \"masterBol\": \"MasterBOL08122022\",\n" +
                        "        \"bol\": [\n" +
                        "            \"\",\n" +
                        "            \"\"\n" +
                        "        ],\n" +
                        "        \"po\": [\n" +
                        "            {\n" +
                        "                \"number\": \"PO12345\",\n" +
                        "                \"pieces\": \"15\",\n" +
                        "                \"weight\": \"1675\",\n" +
                        "                \"palletized\": \"false\",\n" +
                        "                \"additionalShipperInfo\": \"Additional Shipper Info here: Handle with Care\"\n" +
                        "            }\n" +
                        "        ],\n" +
                        "        \"additionalReferences\": [\n" +
                        "            {\n" +
                        "                \"name\": \"\",\n" +
                        "                \"value\": \"\"\n" +
                        "            }\n" +
                        "        ]\n" +
                        "    },\n" +
                        "    \"payment\": {\n" +
                        "        \"terms\": \"Prepaid\"\n" +
                        "    },\n" +
                        "    \"commodities\": {\n" +
                        "        \"handlingUnits\": [\n" +
                        "            {\n" +
                        "                \"count\": 3,\n" +
                        "                \"type\": \"RE\",\n" +
                        "                \"weight\": 1700,\n" +
                        "                \"tareWeight\": \"\",\n" +
                        "                \"length\": 89,\n" +
                        "                \"width\": 48,\n" +
                        "                \"height\": 48,\n" +
                        "                \"stackable\": \"\",\n" +
                        "                \"lineItems\": [\n" +
                        "                    {\n" +
                        "                        \"description\": \"HU 1.1 STUFF\",\n" +
                        "                        \"weight\": 900,\n" +
                        "                        \"pieces\": 24,\n" +
                        "                        \"packagingType\": \"BOX\",\n" +
                        "                        \"classification\": \"60\",\n" +
                        "                        \"nmfc\": \"\",\n" +
                        "                        \"nmfcSub\": \"\",\n" +
                        "                        \"hazardous\": true,\n" +
                        "                        \"hazardousDescription\": \"\",\n" +
                        "                        \"hazardousDetails\": {\n" +
                        "                            \"weight\": \"882\",\n" +
                        "                            \"unnaNumber\": \"9202\",\n" +
                        "                            \"propername\": \"Carbon monoxide, refrigerated liquid (cryogenic liquid).\",\n" +
                        "                            \"technicalName\": \"Tech Name: Carbon monoxide, refrigerated liquid\",\n" +
                        "                            \"class\": \"2.3(2.1)\",\n" +
                        "                            \"packagingGroup\": \"\",\n" +
                        "                            \"contractNumber\": \"Contract Number 1\"\n" +
                        "                        },\n" +
                        "                        \"hazardousExtras\": {\n" +
                        "                             \"limitedQuantity\": \"true\",\n" +
                        "                            \"marinePollutant\": \"true\",\n" +
                        "                            \"toxicInhalation\": \"true\",\n" +
                        "                            \"poisonInhalation\": \"true\",\n" +
                        "                            \"residueLastContained\": \"false\",\n" +
                        "                            \"dotExemption\": \"E123456\",\n" +
                        "                            \"reportableQuantity\": \"TRUE\",\n" +
                        "                            \"hazardZone\": \"B\"\n" +
                        "                        }\n" +
                        "                    },\n" +
                        "                    {\n" +
                        "                        \"description\": \"HU 1.2 STUFF\",\n" +
                        "                        \"weight\": 600,\n" +
                        "                        \"pieces\": 8,\n" +
                        "                        \"packagingType\": \"CT\",\n" +
                        "                        \"classification\": \"70\",\n" +
                        "                        \"nmfc\": \"\",\n" +
                        "                        \"nmfcSub\": \"\",\n" +
                        "                        \"hazardous\": true,\n" +
                        "                        \"hazardousDescription\": \"\",\n" +
                        "                        \"hazardousDetails\": {\n" +
                        "                            \"weight\": \"600\",\n" +
                        "                            \"unnaNumber\": \"8000\",\n" +
                        "                            \"propername\": \"Consumer commodity\",\n" +
                        "                            \"technicalName\": \"Tech Name: ID PREFIX\",\n" +
                        "                            \"class\": \"9\",\n" +
                        "                            \"packagingGroup\": \"\",\n" +
                        "                            \"contractNumber\": \"Contract Number 1\"\n" +
                        "                        },\n" +
                        "                        \"hazardousExtras\": {\n" +
                        "                            \"limitedQuantity\": \"true\",\n" +
                        "                            \"marinePollutant\": \"\",\n" +
                        "                            \"toxicInhalation\": \"true\",\n" +
                        "                            \"poisonInhalation\": \"True\",\n" +
                        "                            \"residueLastContained\": \"\",\n" +
                        "                            \"dotExemption\": \"SP111666\",\n" +
                        "                            \"reportableQuantity\": \"\",\n" +
                        "                            \"hazardZone\": \"A\"\n" +
                        "                        }\n" +
                        "                    }\n" +
                        "                ]\n" +
                        "            },\n" +
                        "            {\n" +
                        "                \"count\": 12,\n" +
                        "                \"type\": \"BR\",\n" +
                        "                \"weight\": 200,\n" +
                        "                \"tareWeight\": \"\",\n" +
                        "                \"length\": 24,\n" +
                        "                \"width\": 24,\n" +
                        "                \"height\": 24,\n" +
                        "                \"stackable\": \"\",\n" +
                        "                \"lineItems\": [\n" +
                        "                    {\n" +
                        "                        \"description\": \"HU 2.1 STUFF\",\n" +
                        "                        \"weight\": 75,\n" +
                        "                        \"pieces\": 4,\n" +
                        "                        \"packagingType\": \"JC\",\n" +
                        "                        \"classification\": \"55\",\n" +
                        "                        \"nmfc\": \"\",\n" +
                        "                        \"nmfcSub\": \"\",\n" +
                        "                        \"hazardous\": true,\n" +
                        "                        \"hazardousDescription\": \"\",\n" +
                        "                        \"hazardousDetails\": {\n" +
                        "                            \"weight\": \"70\",\n" +
                        "                            \"class\": \"ORM-D\",\n" +
                        "                            \"unnaNumber\": \"\",\n" +
                        "                            \"propername\": \"Cartridges, power device\",\n" +
                        "                            \"technicalName\": \"Tech Name: Cartridges, power device No UNNANumber\",\n" +
                        "                            \"packagingGroup\": \"\",\n" +
                        "                            \"contractNumber\": \"Contract Number 2\"\n" +
                        "                        },\n" +
                        "                        \"hazardousExtras\": {\n" +
                        "                            \"limitedQuantity\": \"true\",\n" +
                        "                            \"marinePollutant\": \"\",\n" +
                        "                            \"toxicInhalation\": \"true\",\n" +
                        "                            \"poisonInhalation\": \"true\",\n" +
                        "                            \"residueLastContained\": \"\",\n" +
                        "                            \"dotExemption\": \"E666666\",\n" +
                        "                            \"reportableQuantity\": \"true\",\n" +
                        "                            \"hazardZone\": \"B\"\n" +
                        "                        }\n" +
                        "                    },\n" +
                        "                    {\n" +
                        "                        \"description\": \"HU 2.2 STUFF\",\n" +
                        "                        \"weight\": 100,\n" +
                        "                        \"pieces\": 8,\n" +
                        "                        \"packagingType\": \"BG\",\n" +
                        "                        \"classification\": \"55\",\n" +
                        "                        \"nmfc\": \"\",\n" +
                        "                        \"nmfcSub\": \"\",\n" +
                        "                        \"hazardous\": true,\n" +
                        "                        \"hazardousDescription\": \"\",\n" +
                        "                        \"hazardousDetails\": {\n" +
                        "                            \"weight\": \"90\",\n" +
                        "                            \"class\": \"4.2\",\n" +
                        "                            \"unnaNumber\": \"1386\",\n" +
                        "                            \"propername\": \"Seed cake, containing vegetable oil solvent extractions and expelled seeds, with not more than 10 percent of oil and when the amount of moisture is higher than 11 percent, with not more than 20 percent of oil and moisture combined.\",\n" +
                        "                            \"technicalName\": \"Tech Name: Seed cake, containing vegetable oil solvent extractions\",\n" +
                        "                            \"packagingGroup\": \"III\",\n" +
                        "                            \"contractNumber\": \"Contract Number 2\"\n" +
                        "                        },\n" +
                        "                        \"hazardousExtras\": {\n" +
                        "                            \"limitedQuantity\": \"true\",\n" +
                        "                            \"marinePollutant\": \"\",\n" +
                        "                            \"toxicInhalation\": \"true\",\n" +
                        "                            \"poisonInhalation\": \"\",\n" +
                        "                            \"residueLastContained\": \"\",\n" +
                        "                            \"dotExemption\": \"SP123456\",\n" +
                        "                            \"reportableQuantity\": \"true\",\n" +
                        "                            \"hazardZone\": \"B\"\n" +
                        "                        }\n" +
                        "                    }\n" +
                        "                ]\n" +
                        "            }\n" +
                        "        ]\n" +
                        "    },\n" +
                        "    \"shipmentTotals\": {\n" +
                        "        \"grossWeight\": \"\",\n" +
                        "        \"netWeight\": \"\",\n" +
                        "        \"handlingUnits\": \"15\",\n" +
                        "        \"linearLength\": \"\",\n" +
                        "        \"cubicFeet\": \"\",\n" +
                        "        \"declaredValue\": \"\",\n" +
                        "        \"currency\": \"\"\n" +
                        "    },\n" +
                        "    \"accessorials\": {\n" +
                        "        \"codes\": [\n" +
                        "            \"HAZ\",\n" +
                        "            \"GTD_Noon\"\n" +
                        "        ],\n" +
                        "        \"hazardousDetails\": {\n" +
                        "            \"emergencyContact\": {\n" +
                        "                \"name\": \"HAZ Emergency Contact Name\",\n" +
                        "                \"phone\": \"8043531900\"\n" +
                        "            }\n" +
                        "        },\n" +
                        "        \"cod\": {\n" +
                        "            \"amount\": \"\",\n" +
                        "            \"terms\": \"\",\n" +
                        "            \"customerCheckAcceptable\": \"\",\n" +
                        "            \"remitTo\": {\n" +
                        "                \"name\": \"\",\n" +
                        "                \"address1\": \"\",\n" +
                        "                \"address2\": \"\",\n" +
                        "                \"city\": \"\",\n" +
                        "                \"stateProvince\": \"\",\n" +
                        "                \"postalCode\": \"\",\n" +
                        "                \"country\": \"\"\n" +
                        "            }\n" +
                        "        },\n" +
                        "        \"sortAndSegregateDetails\": {\n" +
                        "            \"pieces\": \"\"\n" +
                        "        },\n" +
                        "        \"fullValueCoverageDetails\": {\n" +
                        "            \"monetaryValue\": \"\",\n" +
                        "            \"currency\": \"\"\n" +
                        "        },\n" +
                        "        \"markDetails\": {\n" +
                        "            \"pieces\": \"\"\n" +
                        "        },\n" +
                        "        \"limitedAccessType\": {\n" +
                        "            \"origin\": \"\",\n" +
                        "            \"destination\": \"\"\n" +
                        "        },\n" +
                        "        \"timeCriticalDetails\": {\n" +
                        "            \"type\": \"\",\n" +
                        "            \"date\": {\n" +
                        "                \"start\": \"\",\n" +
                        "                \"end\": \"\"\n" +
                        "            }\n" +
                        "        },\n" +
                        "        \"appointmentDetails\": {\n" +
                        "            \"pickup\": {\n" +
                        "                \"start\": \"\",\n" +
                        "                \"end\": \"\"\n" +
                        "            },\n" +
                        "            \"delivery\": {\n" +
                        "                \"start\": \"\",\n" +
                        "                \"end\": \"\"\n" +
                        "            }\n" +
                        "        }\n" +
                        "    },\n" +
                        "    \"origin\": {\n" +
                        "        \"account\": \"B025432\",\n" +
                        "        \"locationId\": \"\",\n" +
                        "        \"name\": \"Home Depot PRO 3267\",\n" +
                        "        \"address1\": \"6000 EASTPORT BLVD\",\n" +
                        "        \"address2\": \"Nora test2-already reserved PRO\",\n" +
                        "        \"city\": \"Richmond\",\n" +
                        "        \"stateProvince\": \"VA\",\n" +
                        "        \"postalCode\": \"23231\",\n" +
                        "        \"country\": \"USA\",\n" +
                        "        \"contact\": {\n" +
                        "            \"phone\": \"5552226666\",\n" +
                        "            \"phoneExt\": \"\",\n" +
                        "            \"name\": \"\",\n" +
                        "            \"email\": \"\"\n" +
                        "        }\n" +
                        "    },\n" +
                        "    \"destination\": {\n" +
                        "        \"account\": \"\",\n" +
                        "        \"locationId\": \"\",\n" +
                        "        \"name\": \"James River Equipment Sales\",\n" +
                        "        \"address1\": \"200 N Arthur Ashe Blvd\",\n" +
                        "        \"address2\": \"PRO 001-8128190\",\n" +
                        "        \"city\": \"Aberdeen\",\n" +
                        "        \"stateProvince\": \"OH\",\n" +
                        "        \"postalCode\": \"45101\",\n" +
                        "        \"country\": \"USA\",\n" +
                        "        \"contact\": {\n" +
                        "            \"phone\": \"8045551212\",\n" +
                        "            \"phoneExt\": \"\",\n" +
                        "            \"name\": \"\",\n" +
                        "            \"email\": \"\"\n" +
                        "        }\n" +
                        "    },\n" +
                        "    \"billTo\": {\n" +
                        "        \"account\": \"5019765\",\n" +
                        "        \"locationId\": \"\",\n" +
                        "        \"name\": \"MIRANDA TMS\",\n" +
                        "        \"address1\": \"3000 OCEAN PARK BLVD\",\n" +
                        "        \"address2\": \"\",\n" +
                        "        \"city\": \"Snata Monica\",\n" +
                        "        \"stateProvince\": \"CA\",\n" +
                        "        \"postalCode\": \"90405\",\n" +
                        "        \"country\": \"USA\",\n" +
                        "        \"contact\": {\n" +
                        "            \"phone\": \"3104738885\",\n" +
                        "            \"phoneExt\": \"\",\n" +
                        "            \"name\": \"\",\n" +
                        "            \"email\": \"\"\n" +
                        "        }\n" +
                        "    },\n" +
                        "    \"customsBroker\": {\n" +
                        "        \"type\": \"export\",\n" +
                        "        \"name\": \"API Integration\",\n" +
                        "        \"address1\": \"3000 E Grand Ave\",\n" +
                        "        \"address2\": \"Customer Broker Suite \",\n" +
                        "        \"city\": \"Des Moines\",\n" +
                        "        \"stateProvince\": \"IA\",\n" +
                        "        \"postalCode\": \"50317\",\n" +
                        "        \"country\": \"USA\",\n" +
                        "        \"contact\": {\n" +
                        "            \"phone\": \"8043531900\",\n" +
                        "            \"phoneExt\": \"1357902468\",\n" +
                        "            \"name\": \"Customs Broker Contact Name\",\n" +
                        "            \"email\": \"CustomerBroker@gmail.com\"\n" +
                        "        }\n" +
                        "    }\n" +
                        "}")
                .when()
                .post(RestAssured.baseURI)
                .then()
                .log().all()
                .statusCode(400).statusLine("HTTP/1.1 400 Bad Request")
                .body("messageStatus.status", equalTo("FAIL"))
                .body("messageStatus.code", equalTo("10000001"))
                .body("messageStatus.message", equalTo("Transaction failed"))
                .body("messageStatus.resolution", equalTo("See message list for possible solutions"))
                .body("messageStatus.information[0].type", equalTo("E"))
                .body("messageStatus.information[0].code", equalTo("EBG0241"))
                .body("messageStatus.information[0].message", equalTo("A HazardZone value of 'A' is currently not supported through this service. Please modify your HazardZone value and resubmit. Sorry for any inconvenience."))
                .extract().response();

    }

}
